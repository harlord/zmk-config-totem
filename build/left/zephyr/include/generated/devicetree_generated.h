/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /Users/haroldhernandez/totem/zmk-config-totem/build/left/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/module/dts/bindings, /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /entropy_bt_hci
 *   5   /keymap_transform_0
 *   6   /soc
 *   7   /soc/gpio@50000000
 *   8   /soc/gpio@50000300
 *   9   /kscan_0
 *   10  /behaviors
 *   11  /behaviors/mouse_key_press
 *   12  /mkp_input_listener
 *   13  /behaviors/mouse_move
 *   14  /mmv_input_listener
 *   15  /behaviors/mouse_scroll
 *   16  /msc_input_listener
 *   17  /soc/interrupt-controller@e000e100
 *   18  /soc/timer@40009000
 *   19  /sw-pwm
 *   20  /soc/adc@40007000
 *   21  /vbatt
 *   22  /behaviors/extpower
 *   23  /behaviors/macro_param_2to2
 *   24  /behaviors/key_press
 *   25  /behaviors/momentary_layer
 *   26  /behaviors/none
 *   27  /behaviors/nav_esc
 *   28  /behaviors/rgb_ug
 *   29  /behaviors/studio_unlock
 *   30  /macros
 *   31  /behaviors/macro_tap
 *   32  /behaviors/macro_wait_time
 *   33  /macros/scl_r_to_l
 *   34  /macros/scw_r_to_l
 *   35  /behaviors/tdSelectCoppingRL
 *   36  /behaviors/sticky_layer
 *   37  /behaviors/th_kp_sl_hp
 *   38  /behaviors/th_mo_kp_hp
 *   39  /combos
 *   40  /combos/c-hr-thumb-ar
 *   41  /combos/c-hr-thumb-ars
 *   42  /combos/c-hr-thumb-arst
 *   43  /combos/c-hr-thumb-art
 *   44  /combos/c-hr-thumb-as
 *   45  /combos/c-hr-thumb-ast
 *   46  /combos/c-hr-thumb-at
 *   47  /combos/c-hr-thumb-rs
 *   48  /combos/c-hr-thumb-rst
 *   49  /combos/c-hr-thumb-rt
 *   50  /combos/c-hr-thumb-st
 *   51  /combos/cbkl_2
 *   52  /combos/cbkl_3
 *   53  /combos/cbkl_4
 *   54  /combos/cbknum_11
 *   55  /combos/cbknum_12
 *   56  /combos/cbknum_13
 *   57  /combos/cbknum_14
 *   58  /combos/cbknum_22
 *   59  /combos/cbknum_23
 *   60  /combos/cbknum_24
 *   61  /combos/cbknum_25
 *   62  /combos/cbks_0
 *   63  /behaviors/macro_param_1to1
 *   64  /macros/mc_bkctilde
 *   65  /combos/cbks_10
 *   66  /macros/mc_enne
 *   67  /macros/mac_enne_shift_delete
 *   68  /combos/cbks_16
 *   69  /combos/cbks_17
 *   70  /combos/cbks_18
 *   71  /combos/cbks_19
 *   72  /combos/cbks_30
 *   73  /combos/cbks_7
 *   74  /combos/cent_0
 *   75  /combos/cent_1
 *   76  /combos/cent_10
 *   77  /combos/cent_11
 *   78  /combos/cent_12
 *   79  /combos/cent_13
 *   80  /combos/cent_14
 *   81  /combos/cent_15
 *   82  /combos/cent_16
 *   83  /combos/cent_17
 *   84  /combos/cent_18
 *   85  /combos/cent_19
 *   86  /combos/cent_2
 *   87  /combos/cent_21
 *   88  /combos/cent_22
 *   89  /combos/cent_23
 *   90  /combos/cent_24
 *   91  /combos/cent_25
 *   92  /combos/cent_26
 *   93  /combos/cent_27
 *   94  /combos/cent_28
 *   95  /combos/cent_29
 *   96  /combos/cent_3
 *   97  /combos/cent_30
 *   98  /combos/cent_4
 *   99  /combos/cent_5
 *   100 /combos/cent_6
 *   101 /combos/cent_7
 *   102 /combos/cent_8
 *   103 /combos/cent_9
 *   104 /combos/combo_COLON
 *   105 /combos/combo_FSLH
 *   106 /combos/combo_NUM0
 *   107 /combos/combo_NUM1
 *   108 /combos/combo_NUM2
 *   109 /combos/combo_NUM3
 *   110 /combos/combo_NUM4
 *   111 /combos/combo_NUM5
 *   112 /combos/combo_NUM6
 *   113 /combos/combo_NUM7
 *   114 /combos/combo_NUM8
 *   115 /combos/combo_NUM9
 *   116 /combos/combo_SEMI
 *   117 /behaviors/toggle_layer_off_only
 *   118 /combos/combo_adj_tog_off
 *   119 /behaviors/toggle_layer_on_only
 *   120 /combos/combo_adj_tog_on
 *   121 /combos/combo_comb_az
 *   122 /combos/combo_comb_cd
 *   123 /combos/combo_comb_fp
 *   124 /combos/combo_comb_gv
 *   125 /combos/combo_comb_pb
 *   126 /combos/combo_comb_pb_2
 *   127 /combos/combo_comb_rx
 *   128 /combos/combo_comb_sc
 *   129 /combos/combo_comb_td
 *   130 /combos/combo_comb_tg
 *   131 /combos/combo_comb_tg_2
 *   132 /combos/combo_comb_wf
 *   133 /combos/combo_comb_xc
 *   134 /combos/combo_pg_0
 *   135 /combos/combo_pg_1
 *   136 /combos/combo_pg_4
 *   137 /combos/combo_pg_5
 *   138 /combos/combo_requal
 *   139 /combos/combo_rsemi
 *   140 /combos/comboinv_pg_0_inv
 *   141 /combos/comboinv_pg_1_inv
 *   142 /combos/comboinv_pg_4_inv
 *   143 /combos/comboinv_pg_5_inv
 *   144 /combos/ctab_0
 *   145 /combos/ctab_1
 *   146 /combos/ctab_2
 *   147 /combos/ctab_3
 *   148 /combos/ctab_4
 *   149 /combos/ctab_5
 *   150 /combos/ctab_6
 *   151 /combos/ctab_7
 *   152 /combos/ctab_8
 *   153 /combos/ctab_9
 *   154 /behaviors/macro_pause_for_release
 *   155 /behaviors/macro_press
 *   156 /behaviors/macro_release
 *   157 /macros/mhr
 *   158 /combos/ctabd_10
 *   159 /combos/ctabd_11
 *   160 /combos/ctabd_12
 *   161 /combos/ctabd_13
 *   162 /combos/ctabd_14
 *   163 /behaviors/pfind
 *   164 /behaviors/td_find_s_ht
 *   165 /combos/ctabda_21
 *   166 /behaviors/gpfind
 *   167 /behaviors/td_find_g_ht
 *   168 /combos/ctabda_22
 *   169 /behaviors/lrlMo
 *   170 /combos/ctabda_23
 *   171 /combos/ctabda_24
 *   172 /combos/ctabda_25
 *   173 /cpus
 *   174 /cpus/cpu@0
 *   175 /cpus/cpu@0/itm@e0000000
 *   176 /keymap
 *   177 /behaviors/bootload
 *   178 /behaviors/outputs
 *   179 /behaviors/bluetooth
 *   180 /behaviors/macro_param_1to2
 *   181 /macros/bt_select_c
 *   182 /macros/bt_pairing_c
 *   183 /macros/bt_disc_0
 *   184 /macros/bt_select_disc_0
 *   185 /behaviors/bt_0
 *   186 /macros/bt_disc_1
 *   187 /macros/bt_select_disc_1
 *   188 /behaviors/bt_1
 *   189 /macros/bt_disc_2
 *   190 /macros/bt_select_disc_2
 *   191 /behaviors/bt_2
 *   192 /macros/bt_disc_3
 *   193 /macros/bt_select_disc_3
 *   194 /behaviors/bt_3
 *   195 /macros/bt_disc_4
 *   196 /macros/bt_select_disc_4
 *   197 /behaviors/bt_4
 *   198 /behaviors/space
 *   199 /behaviors/sysreset
 *   200 /behaviors/th_kp_kp_hp
 *   201 /behaviors/transparent
 *   202 /keymap/adjust_layer
 *   203 /behaviors/lm_homerow
 *   204 /behaviors/lm_homerow_short
 *   205 /behaviors/thumb_layer_access_spacebarlm
 *   206 /keymap/base_layer
 *   207 /behaviors/sticky_key
 *   208 /macros/scl_l_to_r
 *   209 /macros/scw_l_to_r
 *   210 /behaviors/tdSelectCoppingLR
 *   211 /behaviors/macro_tap_time
 *   212 /macros/mc_sleep
 *   213 /keymap/layer_direcaacc
 *   214 /behaviors/lrrMo
 *   215 /keymap/layer_func
 *   216 /keymap/layer_homerow
 *   217 /keymap/layer_navoverleft
 *   218 /behaviors/caps_word
 *   219 /keymap/layer_navoverr
 *   220 /keymap/layer_numbers
 *   221 /keymap/lower_layer
 *   222 /keymap/raise_layer
 *   223 /leds
 *   224 /leds/led_0
 *   225 /leds/led_1
 *   226 /leds/led_2
 *   227 /macros/mc_quesd
 *   228 /behaviors/macro_param_2to1
 *   229 /macros/mc_tilde
 *   230 /macros/scfw_l_to_r
 *   231 /macros/scfw_r_to_l
 *   232 /pin-controller
 *   233 /pin-controller/i2c0_default
 *   234 /pin-controller/i2c0_default/group1
 *   235 /pin-controller/i2c0_sleep
 *   236 /pin-controller/i2c0_sleep/group1
 *   237 /pin-controller/qspi_default
 *   238 /pin-controller/qspi_default/group1
 *   239 /pin-controller/qspi_sleep
 *   240 /pin-controller/qspi_sleep/group1
 *   241 /pin-controller/qspi_sleep/group2
 *   242 /pin-controller/spi2_default
 *   243 /pin-controller/spi2_default/group1
 *   244 /pin-controller/spi2_sleep
 *   245 /pin-controller/spi2_sleep/group1
 *   246 /pin-controller/uart0_default
 *   247 /pin-controller/uart0_default/group1
 *   248 /pin-controller/uart0_default/group2
 *   249 /pin-controller/uart0_sleep
 *   250 /pin-controller/uart0_sleep/group1
 *   251 /soc/acl@4001e000
 *   252 /soc/ccm@4000f000
 *   253 /soc/clock@40000000
 *   254 /soc/comparator@40013000
 *   255 /soc/crypto@5002a000
 *   256 /soc/ecb@4000e000
 *   257 /soc/egu@40014000
 *   258 /soc/egu@40015000
 *   259 /soc/egu@40016000
 *   260 /soc/egu@40017000
 *   261 /soc/egu@40018000
 *   262 /soc/egu@40019000
 *   263 /soc/ficr@10000000
 *   264 /soc/gpiote@40006000
 *   265 /soc/i2c@40003000
 *   266 /soc/i2c@40004000
 *   267 /soc/i2s@40025000
 *   268 /soc/memory@20000000
 *   269 /soc/mwu@40020000
 *   270 /soc/nfct@40005000
 *   271 /soc/pdm@4001d000
 *   272 /soc/ppi@4001f000
 *   273 /soc/pwm@4001c000
 *   274 /soc/pwm@40021000
 *   275 /soc/pwm@40022000
 *   276 /soc/pwm@4002d000
 *   277 /soc/qdec@40012000
 *   278 /soc/random@4000d000
 *   279 /soc/rtc@4000b000
 *   280 /soc/rtc@40011000
 *   281 /soc/rtc@40024000
 *   282 /soc/spi@40003000
 *   283 /soc/spi@40004000
 *   284 /soc/spi@40023000
 *   285 /soc/spi@4002f000
 *   286 /soc/temp@4000c000
 *   287 /soc/timer@40008000
 *   288 /soc/timer@4000a000
 *   289 /soc/timer@4001a000
 *   290 /soc/timer@4001b000
 *   291 /soc/timer@e000e010
 *   292 /soc/uart@40002000
 *   293 /soc/uart@40028000
 *   294 /soc/uicr@10001000
 *   295 /soc/watchdog@40010000
 *   296 /soc/flash-controller@4001e000
 *   297 /soc/flash-controller@4001e000/flash@0
 *   298 /soc/flash-controller@4001e000/flash@0/partitions
 *   299 /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *   300 /soc/flash-controller@4001e000/flash@0/partitions/partition@27000
 *   301 /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *   302 /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *   303 /soc/power@40000000
 *   304 /soc/power@40000000/gpregret1@4000051c
 *   305 /soc/power@40000000/gpregret2@40000520
 *   306 /soc/qspi@40029000
 *   307 /soc/qspi@40029000/gd25q16@0
 *   308 /soc/qspi@40029000/p25q16h@0
 *   309 /soc/radio@40001000
 *   310 /soc/radio@40001000/ieee802154
 *   311 /soc/usbd@40027000
 *   312 /soc/usbd@40027000/snippet_zmk_usb_logging_uart
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan_0) fn(DT_N_S_behaviors) fn(DT_N_S_mkp_input_listener) fn(DT_N_S_mmv_input_listener) fn(DT_N_S_msc_input_listener) fn(DT_N_S_macros) fn(DT_N_S_combos) fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mkp_input_listener) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mmv_input_listener) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_msc_input_listener) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan_0, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_mkp_input_listener, __VA_ARGS__) fn(DT_N_S_mmv_input_listener, __VA_ARGS__) fn(DT_N_S_msc_input_listener, __VA_ARGS__) fn(DT_N_S_macros, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mkp_input_listener, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mmv_input_listener, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_msc_input_listener, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan_0) fn(DT_N_S_behaviors) fn(DT_N_S_mkp_input_listener) fn(DT_N_S_mmv_input_listener) fn(DT_N_S_msc_input_listener) fn(DT_N_S_macros) fn(DT_N_S_combos) fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mkp_input_listener) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mmv_input_listener) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_msc_input_listener) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan_0, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_mkp_input_listener, __VA_ARGS__) fn(DT_N_S_mmv_input_listener, __VA_ARGS__) fn(DT_N_S_msc_input_listener, __VA_ARGS__) fn(DT_N_S_macros, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_transform_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_kscan_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mkp_input_listener, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mmv_input_listener, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_msc_input_listener, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /entropy_bt_hci */ \
	5, /* /keymap_transform_0 */ \
	6, /* /soc */ \
	9, /* /kscan_0 */ \
	10, /* /behaviors */ \
	12, /* /mkp_input_listener */ \
	14, /* /mmv_input_listener */ \
	16, /* /msc_input_listener */ \
	19, /* /sw-pwm */ \
	21, /* /vbatt */ \
	30, /* /macros */ \
	39, /* /combos */ \
	173, /* /cpus */ \
	176, /* /keymap */ \
	223, /* /leds */ \
	232, /* /pin-controller */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_seeed_xiao_ble DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_seeed_xiao_ble 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Seeed Technology Co., Ltd"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "xiao_ble"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"seeed,xiao_ble"}
#define DT_N_P_compatible_IDX_0 "seeed,xiao_ble"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED seeed,xiao_ble
#define DT_N_P_compatible_IDX_0_STRING_TOKEN seeed_xiao_ble
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN SEEED_XIAO_BLE
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = seeed,xiao-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/seeed-xiao-header.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_seeed_xiao_gpio DT_N_S_connector
#define DT_N_NODELABEL_xiao_d       DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_seeed_xiao_gpio 1
#define DT_N_S_connector_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_connector_COMPAT_VENDOR_IDX_0 "Seeed Technology Co., Ltd"
#define DT_N_S_connector_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_connector_COMPAT_MODEL_IDX_0 "xiao-gpio"
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"seeed,xiao-gpio"}
#define DT_N_S_connector_P_compatible_IDX_0 "seeed,xiao-gpio"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED seeed,xiao-gpio
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN seeed_xiao_gpio
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN SEEED_XIAO_GPIO
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /entropy_bt_hci
 *
 * Node identifier: DT_N_S_entropy_bt_hci
 *
 * Binding (compatible = zephyr,bt-hci-entropy):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/zephyr,bt-hci-entropy.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_entropy_bt_hci_PATH "/entropy_bt_hci"

/* Node's name with unit-address: */
#define DT_N_S_entropy_bt_hci_FULL_NAME "entropy_bt_hci"

/* Node parent (/) identifier: */
#define DT_N_S_entropy_bt_hci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_entropy_bt_hci_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_entropy_bt_hci_ORD 4
#define DT_N_S_entropy_bt_hci_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_entropy_bt_hci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_entropy_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_entropy_bt_hci_EXISTS 1
#define DT_N_INST_0_zephyr_bt_hci_entropy DT_N_S_entropy_bt_hci
#define DT_N_NODELABEL_rng_hci            DT_N_S_entropy_bt_hci

/* Macros for properties that are special in the specification: */
#define DT_N_S_entropy_bt_hci_REG_NUM 0
#define DT_N_S_entropy_bt_hci_RANGES_NUM 0
#define DT_N_S_entropy_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_entropy_bt_hci_IRQ_NUM 0
#define DT_N_S_entropy_bt_hci_COMPAT_MATCHES_zephyr_bt_hci_entropy 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0 "bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_entropy_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_entropy_bt_hci_P_status "okay"
#define DT_N_S_entropy_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_entropy_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_entropy_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_IDX 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_TOKEN okay
#define DT_N_S_entropy_bt_hci_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_LEN 1
#define DT_N_S_entropy_bt_hci_P_status_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible {"zephyr,bt-hci-entropy"}
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0 "zephyr,bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED zephyr,bt-hci-entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_TOKEN zephyr_bt_hci_entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_BT_HCI_ENTROPY
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_LEN 1
#define DT_N_S_entropy_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_wakeup_source 0
#define DT_N_S_entropy_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /keymap_transform_0
 *
 * Node identifier: DT_N_S_keymap_transform_0
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_transform_0_PATH "/keymap_transform_0"

/* Node's name with unit-address: */
#define DT_N_S_keymap_transform_0_FULL_NAME "keymap_transform_0"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_transform_0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_transform_0_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_transform_0_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_transform_0_ORD 5
#define DT_N_S_keymap_transform_0_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_transform_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_transform_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_transform_0_EXISTS 1
#define DT_N_INST_0_zmk_matrix_transform DT_N_S_keymap_transform_0
#define DT_N_NODELABEL_default_transform DT_N_S_keymap_transform_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_transform_0_REG_NUM 0
#define DT_N_S_keymap_transform_0_RANGES_NUM 0
#define DT_N_S_keymap_transform_0_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_transform_0_IRQ_NUM 0
#define DT_N_S_keymap_transform_0_COMPAT_MATCHES_zmk_matrix_transform 1
#define DT_N_S_keymap_transform_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_keymap_transform_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_COMPAT_MODEL_IDX_0 "matrix-transform"
#define DT_N_S_keymap_transform_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_transform_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_transform_0_P_columns 10
#define DT_N_S_keymap_transform_0_P_columns_EXISTS 1
#define DT_N_S_keymap_transform_0_P_rows 4
#define DT_N_S_keymap_transform_0_P_rows_EXISTS 1
#define DT_N_S_keymap_transform_0_P_col_offset 0
#define DT_N_S_keymap_transform_0_P_col_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_row_offset 0
#define DT_N_S_keymap_transform_0_P_row_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */, 4 /* 0x4 */, 5 /* 0x5 */, 6 /* 0x6 */, 7 /* 0x7 */, 8 /* 0x8 */, 9 /* 0x9 */, 256 /* 0x100 */, 257 /* 0x101 */, 258 /* 0x102 */, 259 /* 0x103 */, 260 /* 0x104 */, 261 /* 0x105 */, 262 /* 0x106 */, 263 /* 0x107 */, 264 /* 0x108 */, 265 /* 0x109 */, 768 /* 0x300 */, 512 /* 0x200 */, 513 /* 0x201 */, 514 /* 0x202 */, 515 /* 0x203 */, 516 /* 0x204 */, 517 /* 0x205 */, 518 /* 0x206 */, 519 /* 0x207 */, 520 /* 0x208 */, 521 /* 0x209 */, 777 /* 0x309 */, 770 /* 0x302 */, 771 /* 0x303 */, 772 /* 0x304 */, 773 /* 0x305 */, 774 /* 0x306 */, 775 /* 0x307 */}
#define DT_N_S_keymap_transform_0_P_map_IDX_0 0
#define DT_N_S_keymap_transform_0_P_map_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_2 2
#define DT_N_S_keymap_transform_0_P_map_IDX_2_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_3 3
#define DT_N_S_keymap_transform_0_P_map_IDX_3_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_4 4
#define DT_N_S_keymap_transform_0_P_map_IDX_4_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_5 5
#define DT_N_S_keymap_transform_0_P_map_IDX_5_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_6 6
#define DT_N_S_keymap_transform_0_P_map_IDX_6_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_7 7
#define DT_N_S_keymap_transform_0_P_map_IDX_7_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_8 8
#define DT_N_S_keymap_transform_0_P_map_IDX_8_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_9 9
#define DT_N_S_keymap_transform_0_P_map_IDX_9_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_10 256
#define DT_N_S_keymap_transform_0_P_map_IDX_10_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_11 257
#define DT_N_S_keymap_transform_0_P_map_IDX_11_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_12 258
#define DT_N_S_keymap_transform_0_P_map_IDX_12_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_13 259
#define DT_N_S_keymap_transform_0_P_map_IDX_13_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_14 260
#define DT_N_S_keymap_transform_0_P_map_IDX_14_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_15 261
#define DT_N_S_keymap_transform_0_P_map_IDX_15_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_16 262
#define DT_N_S_keymap_transform_0_P_map_IDX_16_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_17 263
#define DT_N_S_keymap_transform_0_P_map_IDX_17_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_18 264
#define DT_N_S_keymap_transform_0_P_map_IDX_18_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_19 265
#define DT_N_S_keymap_transform_0_P_map_IDX_19_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_20 768
#define DT_N_S_keymap_transform_0_P_map_IDX_20_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_21 512
#define DT_N_S_keymap_transform_0_P_map_IDX_21_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_22 513
#define DT_N_S_keymap_transform_0_P_map_IDX_22_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_23 514
#define DT_N_S_keymap_transform_0_P_map_IDX_23_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_24 515
#define DT_N_S_keymap_transform_0_P_map_IDX_24_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_25 516
#define DT_N_S_keymap_transform_0_P_map_IDX_25_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_26 517
#define DT_N_S_keymap_transform_0_P_map_IDX_26_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_27 518
#define DT_N_S_keymap_transform_0_P_map_IDX_27_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_28 519
#define DT_N_S_keymap_transform_0_P_map_IDX_28_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_29 520
#define DT_N_S_keymap_transform_0_P_map_IDX_29_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_30 521
#define DT_N_S_keymap_transform_0_P_map_IDX_30_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_31 777
#define DT_N_S_keymap_transform_0_P_map_IDX_31_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_32 770
#define DT_N_S_keymap_transform_0_P_map_IDX_32_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_33 771
#define DT_N_S_keymap_transform_0_P_map_IDX_33_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_34 772
#define DT_N_S_keymap_transform_0_P_map_IDX_34_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_35 773
#define DT_N_S_keymap_transform_0_P_map_IDX_35_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_36 774
#define DT_N_S_keymap_transform_0_P_map_IDX_36_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_37 775
#define DT_N_S_keymap_transform_0_P_map_IDX_37_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_transform_0, map, 0) \
	fn(DT_N_S_keymap_transform_0, map, 1) \
	fn(DT_N_S_keymap_transform_0, map, 2) \
	fn(DT_N_S_keymap_transform_0, map, 3) \
	fn(DT_N_S_keymap_transform_0, map, 4) \
	fn(DT_N_S_keymap_transform_0, map, 5) \
	fn(DT_N_S_keymap_transform_0, map, 6) \
	fn(DT_N_S_keymap_transform_0, map, 7) \
	fn(DT_N_S_keymap_transform_0, map, 8) \
	fn(DT_N_S_keymap_transform_0, map, 9) \
	fn(DT_N_S_keymap_transform_0, map, 10) \
	fn(DT_N_S_keymap_transform_0, map, 11) \
	fn(DT_N_S_keymap_transform_0, map, 12) \
	fn(DT_N_S_keymap_transform_0, map, 13) \
	fn(DT_N_S_keymap_transform_0, map, 14) \
	fn(DT_N_S_keymap_transform_0, map, 15) \
	fn(DT_N_S_keymap_transform_0, map, 16) \
	fn(DT_N_S_keymap_transform_0, map, 17) \
	fn(DT_N_S_keymap_transform_0, map, 18) \
	fn(DT_N_S_keymap_transform_0, map, 19) \
	fn(DT_N_S_keymap_transform_0, map, 20) \
	fn(DT_N_S_keymap_transform_0, map, 21) \
	fn(DT_N_S_keymap_transform_0, map, 22) \
	fn(DT_N_S_keymap_transform_0, map, 23) \
	fn(DT_N_S_keymap_transform_0, map, 24) \
	fn(DT_N_S_keymap_transform_0, map, 25) \
	fn(DT_N_S_keymap_transform_0, map, 26) \
	fn(DT_N_S_keymap_transform_0, map, 27) \
	fn(DT_N_S_keymap_transform_0, map, 28) \
	fn(DT_N_S_keymap_transform_0, map, 29) \
	fn(DT_N_S_keymap_transform_0, map, 30) \
	fn(DT_N_S_keymap_transform_0, map, 31) \
	fn(DT_N_S_keymap_transform_0, map, 32) \
	fn(DT_N_S_keymap_transform_0, map, 33) \
	fn(DT_N_S_keymap_transform_0, map, 34) \
	fn(DT_N_S_keymap_transform_0, map, 35) \
	fn(DT_N_S_keymap_transform_0, map, 36) \
	fn(DT_N_S_keymap_transform_0, map, 37)
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_transform_0, map, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 37)
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_transform_0, map, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 37, __VA_ARGS__)
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_transform_0, map, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_transform_0, map, 37, __VA_ARGS__)
#define DT_N_S_keymap_transform_0_P_map_LEN 38
#define DT_N_S_keymap_transform_0_P_map_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_comparator_40013000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pdm_4001d000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_i2s_40025000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4000a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_40012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_comparator_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pdm_4001d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40023000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40025000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4002d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4002f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 6
#define DT_N_S_soc_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	7, /* /soc/gpio@50000000 */ \
	8, /* /soc/gpio@50000300 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/timer@40009000 */ \
	20, /* /soc/adc@40007000 */ \
	251, /* /soc/acl@4001e000 */ \
	252, /* /soc/ccm@4000f000 */ \
	253, /* /soc/clock@40000000 */ \
	254, /* /soc/comparator@40013000 */ \
	255, /* /soc/crypto@5002a000 */ \
	256, /* /soc/ecb@4000e000 */ \
	257, /* /soc/egu@40014000 */ \
	258, /* /soc/egu@40015000 */ \
	259, /* /soc/egu@40016000 */ \
	260, /* /soc/egu@40017000 */ \
	261, /* /soc/egu@40018000 */ \
	262, /* /soc/egu@40019000 */ \
	263, /* /soc/ficr@10000000 */ \
	264, /* /soc/gpiote@40006000 */ \
	265, /* /soc/i2c@40003000 */ \
	266, /* /soc/i2c@40004000 */ \
	267, /* /soc/i2s@40025000 */ \
	268, /* /soc/memory@20000000 */ \
	269, /* /soc/mwu@40020000 */ \
	270, /* /soc/nfct@40005000 */ \
	271, /* /soc/pdm@4001d000 */ \
	272, /* /soc/ppi@4001f000 */ \
	273, /* /soc/pwm@4001c000 */ \
	274, /* /soc/pwm@40021000 */ \
	275, /* /soc/pwm@40022000 */ \
	276, /* /soc/pwm@4002d000 */ \
	277, /* /soc/qdec@40012000 */ \
	278, /* /soc/random@4000d000 */ \
	279, /* /soc/rtc@4000b000 */ \
	280, /* /soc/rtc@40011000 */ \
	281, /* /soc/rtc@40024000 */ \
	282, /* /soc/spi@40003000 */ \
	283, /* /soc/spi@40004000 */ \
	284, /* /soc/spi@40023000 */ \
	285, /* /soc/spi@4002f000 */ \
	286, /* /soc/temp@4000c000 */ \
	287, /* /soc/timer@40008000 */ \
	288, /* /soc/timer@4000a000 */ \
	289, /* /soc/timer@4001a000 */ \
	290, /* /soc/timer@4001b000 */ \
	291, /* /soc/timer@e000e010 */ \
	292, /* /soc/uart@40002000 */ \
	293, /* /soc/uart@40028000 */ \
	294, /* /soc/uicr@10001000 */ \
	295, /* /soc/watchdog@40010000 */ \
	296, /* /soc/flash-controller@4001e000 */ \
	303, /* /soc/power@40000000 */ \
	306, /* /soc/qspi@40029000 */ \
	309, /* /soc/radio@40001000 */ \
	311, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_nordic_nrf52840_qiaa DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52840      DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52         DT_N_S_soc
#define DT_N_INST_0_simple_bus           DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840_qiaa 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "nrf52840-qiaa"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "nrf52840"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_2 "nrf52"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"nordic,nrf52840-qiaa", "nordic,nrf52840", "nordic,nrf52", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "nordic,nrf52840-qiaa"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf52840-qiaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN nordic_nrf52840_qiaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF52840_QIAA
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "nordic,nrf52840"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf52840
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN nordic_nrf52840
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF52840
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "nordic,nrf52"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED nordic,nrf52
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN nordic_nrf52
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN NORDIC_NRF52
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2) \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000000
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000000
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000000_PATH "/soc/gpio@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000000_FULL_NAME "gpio@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_50000000_CHILD_IDX 52

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000000_ORD 7
#define DT_N_S_soc_S_gpio_50000000_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000000_SUPPORTS_ORDS \
	9, /* /kscan_0 */ \
	21, /* /vbatt */ \
	224, /* /leds/led_0 */ \
	225, /* /leds/led_1 */ \
	226, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000000
#define DT_N_NODELABEL_gpio0        DT_N_S_soc_S_gpio_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000000_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_ADDRESS 1342178560 /* 0x50000500 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000000_P_reg {1342177280 /* 0x50000000 */, 512 /* 0x200 */, 1342178560 /* 0x50000500 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2 1342178560
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_port 0
#define DT_N_S_soc_S_gpio_50000000_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_ngpios 32
#define DT_N_S_soc_S_gpio_50000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, status, 0)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000000, status, 0)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000300
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000300
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000300_PATH "/soc/gpio@50000300"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000300_FULL_NAME "gpio@50000300"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000300_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_50000300_CHILD_IDX 53

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000300_ORD 8
#define DT_N_S_soc_S_gpio_50000300_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000300_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000300_SUPPORTS_ORDS \
	9, /* /kscan_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000300_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000300
#define DT_N_NODELABEL_gpio1        DT_N_S_soc_S_gpio_50000300

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000300_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_ADDRESS 1342178048 /* 0x50000300 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_ADDRESS 1342179328 /* 0x50000800 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000300_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000300_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000300_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000300_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000300_P_reg {1342178048 /* 0x50000300 */, 512 /* 0x200 */, 1342179328 /* 0x50000800 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0 1342178048
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2 1342179328
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_port 1
#define DT_N_S_soc_S_gpio_50000300_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_ngpios 16
#define DT_N_S_soc_S_gpio_50000300_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, status, 0)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000300, status, 0)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_status_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_50000300_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /kscan_0
 *
 * Node identifier: DT_N_S_kscan_0
 *
 * Binding (compatible = zmk,kscan-gpio-matrix):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/module/dts/bindings/kscan/zmk,kscan-gpio-matrix.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_kscan_0_PATH "/kscan_0"

/* Node's name with unit-address: */
#define DT_N_S_kscan_0_FULL_NAME "kscan_0"

/* Node parent (/) identifier: */
#define DT_N_S_kscan_0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_kscan_0_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_kscan_0_FOREACH_CHILD(fn) 
#define DT_N_S_kscan_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_kscan_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_kscan_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_kscan_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_kscan_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_kscan_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_kscan_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_kscan_0_ORD 9
#define DT_N_S_kscan_0_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_kscan_0_REQUIRES_ORDS \
	0, /* / */ \
	7, /* /soc/gpio@50000000 */ \
	8, /* /soc/gpio@50000300 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_kscan_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_kscan_0_EXISTS 1
#define DT_N_INST_0_zmk_kscan_gpio_matrix DT_N_S_kscan_0
#define DT_N_NODELABEL_kscan0             DT_N_S_kscan_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_kscan_0_REG_NUM 0
#define DT_N_S_kscan_0_RANGES_NUM 0
#define DT_N_S_kscan_0_FOREACH_RANGE(fn) 
#define DT_N_S_kscan_0_IRQ_NUM 0
#define DT_N_S_kscan_0_COMPAT_MATCHES_zmk_kscan_gpio_matrix 1
#define DT_N_S_kscan_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_kscan_0_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_kscan_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_kscan_0_COMPAT_MODEL_IDX_0 "kscan-gpio-matrix"
#define DT_N_S_kscan_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_kscan_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_kscan_0_P_row_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_0_P_row_gpios_IDX_0_VAL_pin 2
#define DT_N_S_kscan_0_P_row_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_0_VAL_flags 32
#define DT_N_S_kscan_0_P_row_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_0_P_row_gpios_IDX_1_VAL_pin 3
#define DT_N_S_kscan_0_P_row_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_1_VAL_flags 32
#define DT_N_S_kscan_0_P_row_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_0_P_row_gpios_IDX_2_VAL_pin 28
#define DT_N_S_kscan_0_P_row_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_2_VAL_flags 32
#define DT_N_S_kscan_0_P_row_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_0_P_row_gpios_IDX_3_VAL_pin 29
#define DT_N_S_kscan_0_P_row_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_IDX_3_VAL_flags 32
#define DT_N_S_kscan_0_P_row_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_row_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan_0, row_gpios, 0) \
	fn(DT_N_S_kscan_0, row_gpios, 1) \
	fn(DT_N_S_kscan_0, row_gpios, 2) \
	fn(DT_N_S_kscan_0, row_gpios, 3)
#define DT_N_S_kscan_0_P_row_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan_0, row_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, row_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, row_gpios, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, row_gpios, 3)
#define DT_N_S_kscan_0_P_row_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan_0, row_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan_0, row_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan_0, row_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan_0, row_gpios, 3, __VA_ARGS__)
#define DT_N_S_kscan_0_P_row_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan_0, row_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, row_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, row_gpios, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, row_gpios, 3, __VA_ARGS__)
#define DT_N_S_kscan_0_P_row_gpios_LEN 4
#define DT_N_S_kscan_0_P_row_gpios_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_0_P_col_gpios_IDX_0_VAL_pin 4
#define DT_N_S_kscan_0_P_col_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_0_VAL_flags 0
#define DT_N_S_kscan_0_P_col_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_0_P_col_gpios_IDX_1_VAL_pin 5
#define DT_N_S_kscan_0_P_col_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_1_VAL_flags 0
#define DT_N_S_kscan_0_P_col_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_0_P_col_gpios_IDX_2_VAL_pin 15
#define DT_N_S_kscan_0_P_col_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_2_VAL_flags 0
#define DT_N_S_kscan_0_P_col_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_0_P_col_gpios_IDX_3_VAL_pin 14
#define DT_N_S_kscan_0_P_col_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_3_VAL_flags 0
#define DT_N_S_kscan_0_P_col_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_4_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_4_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_0_P_col_gpios_IDX_4_VAL_pin 13
#define DT_N_S_kscan_0_P_col_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_IDX_4_VAL_flags 0
#define DT_N_S_kscan_0_P_col_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_kscan_0_P_col_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan_0, col_gpios, 0) \
	fn(DT_N_S_kscan_0, col_gpios, 1) \
	fn(DT_N_S_kscan_0, col_gpios, 2) \
	fn(DT_N_S_kscan_0, col_gpios, 3) \
	fn(DT_N_S_kscan_0, col_gpios, 4)
#define DT_N_S_kscan_0_P_col_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan_0, col_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 4)
#define DT_N_S_kscan_0_P_col_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan_0, col_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan_0, col_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan_0, col_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan_0, col_gpios, 3, __VA_ARGS__) \
	fn(DT_N_S_kscan_0, col_gpios, 4, __VA_ARGS__)
#define DT_N_S_kscan_0_P_col_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan_0, col_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_kscan_0, col_gpios, 4, __VA_ARGS__)
#define DT_N_S_kscan_0_P_col_gpios_LEN 5
#define DT_N_S_kscan_0_P_col_gpios_EXISTS 1
#define DT_N_S_kscan_0_P_debounce_press_ms 5
#define DT_N_S_kscan_0_P_debounce_press_ms_EXISTS 1
#define DT_N_S_kscan_0_P_debounce_release_ms 5
#define DT_N_S_kscan_0_P_debounce_release_ms_EXISTS 1
#define DT_N_S_kscan_0_P_debounce_scan_period_ms 1
#define DT_N_S_kscan_0_P_debounce_scan_period_ms_EXISTS 1
#define DT_N_S_kscan_0_P_poll_period_ms 10
#define DT_N_S_kscan_0_P_poll_period_ms_EXISTS 1
#define DT_N_S_kscan_0_P_diode_direction "col2row"
#define DT_N_S_kscan_0_P_diode_direction_STRING_UNQUOTED col2row
#define DT_N_S_kscan_0_P_diode_direction_STRING_TOKEN col2row
#define DT_N_S_kscan_0_P_diode_direction_STRING_UPPER_TOKEN COL2ROW
#define DT_N_S_kscan_0_P_diode_direction_IDX_0 "col2row"
#define DT_N_S_kscan_0_P_diode_direction_IDX_0_EXISTS 1
#define DT_N_S_kscan_0_P_diode_direction_ENUM_IDX 1
#define DT_N_S_kscan_0_P_diode_direction_ENUM_VAL_col2row_EXISTS 1
#define DT_N_S_kscan_0_P_diode_direction_ENUM_TOKEN col2row
#define DT_N_S_kscan_0_P_diode_direction_ENUM_UPPER_TOKEN COL2ROW
#define DT_N_S_kscan_0_P_diode_direction_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan_0, diode_direction, 0)
#define DT_N_S_kscan_0_P_diode_direction_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan_0, diode_direction, 0)
#define DT_N_S_kscan_0_P_diode_direction_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan_0, diode_direction, 0, __VA_ARGS__)
#define DT_N_S_kscan_0_P_diode_direction_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan_0, diode_direction, 0, __VA_ARGS__)
#define DT_N_S_kscan_0_P_diode_direction_LEN 1
#define DT_N_S_kscan_0_P_diode_direction_EXISTS 1
#define DT_N_S_kscan_0_P_compatible {"zmk,kscan-gpio-matrix"}
#define DT_N_S_kscan_0_P_compatible_IDX_0 "zmk,kscan-gpio-matrix"
#define DT_N_S_kscan_0_P_compatible_IDX_0_STRING_UNQUOTED zmk,kscan-gpio-matrix
#define DT_N_S_kscan_0_P_compatible_IDX_0_STRING_TOKEN zmk_kscan_gpio_matrix
#define DT_N_S_kscan_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_KSCAN_GPIO_MATRIX
#define DT_N_S_kscan_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_kscan_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan_0, compatible, 0)
#define DT_N_S_kscan_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan_0, compatible, 0)
#define DT_N_S_kscan_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_kscan_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_kscan_0_P_compatible_LEN 1
#define DT_N_S_kscan_0_P_compatible_EXISTS 1
#define DT_N_S_kscan_0_P_label "KSCAN"
#define DT_N_S_kscan_0_P_label_STRING_UNQUOTED KSCAN
#define DT_N_S_kscan_0_P_label_STRING_TOKEN KSCAN
#define DT_N_S_kscan_0_P_label_STRING_UPPER_TOKEN KSCAN
#define DT_N_S_kscan_0_P_label_IDX_0 "KSCAN"
#define DT_N_S_kscan_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_kscan_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan_0, label, 0)
#define DT_N_S_kscan_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_kscan_0, label, 0)
#define DT_N_S_kscan_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan_0, label, 0, __VA_ARGS__)
#define DT_N_S_kscan_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_kscan_0, label, 0, __VA_ARGS__)
#define DT_N_S_kscan_0_P_label_LEN 1
#define DT_N_S_kscan_0_P_label_EXISTS 1
#define DT_N_S_kscan_0_P_wakeup_source 0
#define DT_N_S_kscan_0_P_wakeup_source_EXISTS 1
#define DT_N_S_kscan_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_kscan_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /behaviors
 *
 * Node identifier: DT_N_S_behaviors
 */

/* Node's full path: */
#define DT_N_S_behaviors_PATH "/behaviors"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_FULL_NAME "behaviors"

/* Node parent (/) identifier: */
#define DT_N_S_behaviors_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_FOREACH_CHILD(fn) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_mouse_move) fn(DT_N_S_behaviors_S_mouse_scroll) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_none) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_sticky_layer) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_caps_word) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_studio_unlock) fn(DT_N_S_behaviors_S_bt_0) fn(DT_N_S_behaviors_S_bt_1) fn(DT_N_S_behaviors_S_bt_2) fn(DT_N_S_behaviors_S_bt_3) fn(DT_N_S_behaviors_S_bt_4) fn(DT_N_S_behaviors_S_toggle_layer_on_only) fn(DT_N_S_behaviors_S_toggle_layer_off_only) fn(DT_N_S_behaviors_S_pfind) fn(DT_N_S_behaviors_S_gpfind) fn(DT_N_S_behaviors_S_tdselectcoppinglr) fn(DT_N_S_behaviors_S_lrlmo) fn(DT_N_S_behaviors_S_lrrmo) fn(DT_N_S_behaviors_S_th_mo_kp_hp) fn(DT_N_S_behaviors_S_th_kp_kp_hp) fn(DT_N_S_behaviors_S_space) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm) fn(DT_N_S_behaviors_S_th_kp_sl_hp) fn(DT_N_S_behaviors_S_lm_homerow) fn(DT_N_S_behaviors_S_lm_homerow_short) fn(DT_N_S_behaviors_S_tdselectcoppingrl) fn(DT_N_S_behaviors_S_td_find_s_ht) fn(DT_N_S_behaviors_S_td_find_g_ht) fn(DT_N_S_behaviors_S_nav_esc)
#define DT_N_S_behaviors_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_behaviors_S_mouse_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_move) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_scroll) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_none) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_caps_word) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_studio_unlock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_on_only) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_off_only) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_pfind) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_gpfind) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppinglr) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrlmo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrrmo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_mo_kp_hp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_kp_hp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_space) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_sl_hp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow_short) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppingrl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_s_ht) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_g_ht) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_nav_esc)
#define DT_N_S_behaviors_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_move, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_scroll, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_none, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_caps_word, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_studio_unlock, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_on_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_off_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_pfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_gpfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppinglr, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrlmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrrmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_mo_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_space, __VA_ARGS__) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_sl_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow_short, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppingrl, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_s_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_g_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_nav_esc, __VA_ARGS__)
#define DT_N_S_behaviors_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_move, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_scroll, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_none, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_caps_word, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_studio_unlock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_on_only, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_off_only, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_pfind, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_gpfind, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppinglr, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrlmo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrrmo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_mo_kp_hp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_kp_hp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_space, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_sl_hp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow_short, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppingrl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_s_ht, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_g_ht, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_nav_esc, __VA_ARGS__)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_mouse_move) fn(DT_N_S_behaviors_S_mouse_scroll) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_none) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_sticky_layer) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_caps_word) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_studio_unlock) fn(DT_N_S_behaviors_S_bt_0) fn(DT_N_S_behaviors_S_bt_1) fn(DT_N_S_behaviors_S_bt_2) fn(DT_N_S_behaviors_S_bt_3) fn(DT_N_S_behaviors_S_bt_4) fn(DT_N_S_behaviors_S_toggle_layer_on_only) fn(DT_N_S_behaviors_S_toggle_layer_off_only) fn(DT_N_S_behaviors_S_pfind) fn(DT_N_S_behaviors_S_gpfind) fn(DT_N_S_behaviors_S_tdselectcoppinglr) fn(DT_N_S_behaviors_S_lrlmo) fn(DT_N_S_behaviors_S_lrrmo) fn(DT_N_S_behaviors_S_th_mo_kp_hp) fn(DT_N_S_behaviors_S_th_kp_kp_hp) fn(DT_N_S_behaviors_S_space) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm) fn(DT_N_S_behaviors_S_th_kp_sl_hp) fn(DT_N_S_behaviors_S_lm_homerow) fn(DT_N_S_behaviors_S_lm_homerow_short) fn(DT_N_S_behaviors_S_tdselectcoppingrl) fn(DT_N_S_behaviors_S_td_find_s_ht) fn(DT_N_S_behaviors_S_td_find_g_ht) fn(DT_N_S_behaviors_S_nav_esc)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_behaviors_S_mouse_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_move) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_scroll) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_none) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_caps_word) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_studio_unlock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_on_only) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_off_only) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_pfind) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_gpfind) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppinglr) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrlmo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrrmo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_mo_kp_hp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_kp_hp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_space) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_sl_hp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow_short) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppingrl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_s_ht) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_g_ht) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_nav_esc)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_move, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_scroll, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_none, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_caps_word, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_studio_unlock, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_on_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_off_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_pfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_gpfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppinglr, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrlmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrrmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_mo_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_space, __VA_ARGS__) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_sl_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow_short, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppingrl, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_s_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_g_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_nav_esc, __VA_ARGS__)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_move, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_mouse_scroll, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_none, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sticky_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_caps_word, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_studio_unlock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_bt_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_on_only, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_toggle_layer_off_only, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_pfind, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_gpfind, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppinglr, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrlmo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lrrmo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_mo_kp_hp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_kp_hp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_space, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_th_kp_sl_hp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_lm_homerow_short, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_tdselectcoppingrl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_s_ht, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_td_find_g_ht, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_behaviors_S_nav_esc, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_ORD 10
#define DT_N_S_behaviors_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_SUPPORTS_ORDS \
	11, /* /behaviors/mouse_key_press */ \
	13, /* /behaviors/mouse_move */ \
	15, /* /behaviors/mouse_scroll */ \
	22, /* /behaviors/extpower */ \
	23, /* /behaviors/macro_param_2to2 */ \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	26, /* /behaviors/none */ \
	27, /* /behaviors/nav_esc */ \
	28, /* /behaviors/rgb_ug */ \
	29, /* /behaviors/studio_unlock */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	35, /* /behaviors/tdSelectCoppingRL */ \
	36, /* /behaviors/sticky_layer */ \
	37, /* /behaviors/th_kp_sl_hp */ \
	38, /* /behaviors/th_mo_kp_hp */ \
	63, /* /behaviors/macro_param_1to1 */ \
	117, /* /behaviors/toggle_layer_off_only */ \
	119, /* /behaviors/toggle_layer_on_only */ \
	154, /* /behaviors/macro_pause_for_release */ \
	155, /* /behaviors/macro_press */ \
	156, /* /behaviors/macro_release */ \
	163, /* /behaviors/pfind */ \
	164, /* /behaviors/td_find_s_ht */ \
	166, /* /behaviors/gpfind */ \
	167, /* /behaviors/td_find_g_ht */ \
	169, /* /behaviors/lrlMo */ \
	177, /* /behaviors/bootload */ \
	178, /* /behaviors/outputs */ \
	179, /* /behaviors/bluetooth */ \
	180, /* /behaviors/macro_param_1to2 */ \
	185, /* /behaviors/bt_0 */ \
	188, /* /behaviors/bt_1 */ \
	191, /* /behaviors/bt_2 */ \
	194, /* /behaviors/bt_3 */ \
	197, /* /behaviors/bt_4 */ \
	198, /* /behaviors/space */ \
	199, /* /behaviors/sysreset */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	203, /* /behaviors/lm_homerow */ \
	204, /* /behaviors/lm_homerow_short */ \
	205, /* /behaviors/thumb_layer_access_spacebarlm */ \
	207, /* /behaviors/sticky_key */ \
	210, /* /behaviors/tdSelectCoppingLR */ \
	211, /* /behaviors/macro_tap_time */ \
	214, /* /behaviors/lrrMo */ \
	218, /* /behaviors/caps_word */ \
	228, /* /behaviors/macro_param_2to1 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_REG_NUM 0
#define DT_N_S_behaviors_RANGES_NUM 0
#define DT_N_S_behaviors_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_IRQ_NUM 0
#define DT_N_S_behaviors_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/mouse_key_press
 *
 * Node identifier: DT_N_S_behaviors_S_mouse_key_press
 *
 * Binding (compatible = zmk,behavior-mouse-key-press):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-mouse-key-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_mouse_key_press_PATH "/behaviors/mouse_key_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_mouse_key_press_FULL_NAME "mouse_key_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_mouse_key_press_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_mouse_key_press_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_mouse_key_press_ORD 11
#define DT_N_S_behaviors_S_mouse_key_press_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_mouse_key_press_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_mouse_key_press_SUPPORTS_ORDS \
	12, /* /mkp_input_listener */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_mouse_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_mouse_key_press DT_N_S_behaviors_S_mouse_key_press
#define DT_N_NODELABEL_mkp                       DT_N_S_behaviors_S_mouse_key_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_mouse_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_mouse_key_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_mouse_key_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_mouse_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_MATCHES_zmk_behavior_mouse_key_press 1
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_key_press_COMPAT_MODEL_IDX_0 "behavior-mouse-key-press"
#define DT_N_S_behaviors_S_mouse_key_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_mouse_key_press_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name "Mouse Key Press"
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_STRING_UNQUOTED Mouse Key Press
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_STRING_TOKEN Mouse_Key_Press
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_STRING_UPPER_TOKEN MOUSE_KEY_PRESS
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_IDX_0 "Mouse Key Press"
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_mouse_key_press, display_name, 0)
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_mouse_key_press, display_name, 0)
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_mouse_key_press, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_mouse_key_press, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_LEN 1
#define DT_N_S_behaviors_S_mouse_key_press_P_display_name_EXISTS 1

/*
 * Devicetree node: /mkp_input_listener
 *
 * Node identifier: DT_N_S_mkp_input_listener
 *
 * Binding (compatible = zmk,input-listener):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/zmk,input-listener.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mkp_input_listener_PATH "/mkp_input_listener"

/* Node's name with unit-address: */
#define DT_N_S_mkp_input_listener_FULL_NAME "mkp_input_listener"

/* Node parent (/) identifier: */
#define DT_N_S_mkp_input_listener_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mkp_input_listener_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_mkp_input_listener_FOREACH_CHILD(fn) 
#define DT_N_S_mkp_input_listener_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mkp_input_listener_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mkp_input_listener_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mkp_input_listener_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mkp_input_listener_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mkp_input_listener_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mkp_input_listener_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mkp_input_listener_ORD 12
#define DT_N_S_mkp_input_listener_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mkp_input_listener_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /behaviors/mouse_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mkp_input_listener_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mkp_input_listener_EXISTS 1
#define DT_N_INST_0_zmk_input_listener    DT_N_S_mkp_input_listener
#define DT_N_NODELABEL_mkp_input_listener DT_N_S_mkp_input_listener

/* Macros for properties that are special in the specification: */
#define DT_N_S_mkp_input_listener_REG_NUM 0
#define DT_N_S_mkp_input_listener_RANGES_NUM 0
#define DT_N_S_mkp_input_listener_FOREACH_RANGE(fn) 
#define DT_N_S_mkp_input_listener_IRQ_NUM 0
#define DT_N_S_mkp_input_listener_COMPAT_MATCHES_zmk_input_listener 1
#define DT_N_S_mkp_input_listener_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mkp_input_listener_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_mkp_input_listener_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mkp_input_listener_COMPAT_MODEL_IDX_0 "input-listener"
#define DT_N_S_mkp_input_listener_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mkp_input_listener_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mkp_input_listener_P_device DT_N_S_behaviors_S_mouse_key_press
#define DT_N_S_mkp_input_listener_P_device_IDX_0 DT_N_S_behaviors_S_mouse_key_press
#define DT_N_S_mkp_input_listener_P_device_IDX_0_PH DT_N_S_behaviors_S_mouse_key_press
#define DT_N_S_mkp_input_listener_P_device_IDX_0_EXISTS 1
#define DT_N_S_mkp_input_listener_P_device_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mkp_input_listener, device, 0)
#define DT_N_S_mkp_input_listener_P_device_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mkp_input_listener, device, 0)
#define DT_N_S_mkp_input_listener_P_device_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mkp_input_listener, device, 0, __VA_ARGS__)
#define DT_N_S_mkp_input_listener_P_device_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mkp_input_listener, device, 0, __VA_ARGS__)
#define DT_N_S_mkp_input_listener_P_device_LEN 1
#define DT_N_S_mkp_input_listener_P_device_EXISTS 1

/*
 * Devicetree node: /behaviors/mouse_move
 *
 * Node identifier: DT_N_S_behaviors_S_mouse_move
 *
 * Binding (compatible = zmk,behavior-input-two-axis):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-input-two-axis.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_mouse_move_PATH "/behaviors/mouse_move"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_mouse_move_FULL_NAME "mouse_move"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_mouse_move_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_mouse_move_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_move_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_mouse_move_ORD 13
#define DT_N_S_behaviors_S_mouse_move_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_mouse_move_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_mouse_move_SUPPORTS_ORDS \
	14, /* /mmv_input_listener */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_mouse_move_EXISTS 1
#define DT_N_INST_0_zmk_behavior_input_two_axis DT_N_S_behaviors_S_mouse_move
#define DT_N_NODELABEL_mmv                      DT_N_S_behaviors_S_mouse_move

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_mouse_move_REG_NUM 0
#define DT_N_S_behaviors_S_mouse_move_RANGES_NUM 0
#define DT_N_S_behaviors_S_mouse_move_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_mouse_move_IRQ_NUM 0
#define DT_N_S_behaviors_S_mouse_move_COMPAT_MATCHES_zmk_behavior_input_two_axis 1
#define DT_N_S_behaviors_S_mouse_move_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_move_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_mouse_move_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_move_COMPAT_MODEL_IDX_0 "behavior-input-two-axis"
#define DT_N_S_behaviors_S_mouse_move_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_mouse_move_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_mouse_move_P_x_input_code 0
#define DT_N_S_behaviors_S_mouse_move_P_x_input_code_EXISTS 1
#define DT_N_S_behaviors_S_mouse_move_P_y_input_code 1
#define DT_N_S_behaviors_S_mouse_move_P_y_input_code_EXISTS 1
#define DT_N_S_behaviors_S_mouse_move_P_trigger_period_ms 16
#define DT_N_S_behaviors_S_mouse_move_P_trigger_period_ms_EXISTS 1
#define DT_N_S_behaviors_S_mouse_move_P_time_to_max_speed_ms 300
#define DT_N_S_behaviors_S_mouse_move_P_time_to_max_speed_ms_EXISTS 1
#define DT_N_S_behaviors_S_mouse_move_P_acceleration_exponent 1
#define DT_N_S_behaviors_S_mouse_move_P_acceleration_exponent_EXISTS 1

/*
 * Devicetree node: /mmv_input_listener
 *
 * Node identifier: DT_N_S_mmv_input_listener
 *
 * Binding (compatible = zmk,input-listener):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/zmk,input-listener.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mmv_input_listener_PATH "/mmv_input_listener"

/* Node's name with unit-address: */
#define DT_N_S_mmv_input_listener_FULL_NAME "mmv_input_listener"

/* Node parent (/) identifier: */
#define DT_N_S_mmv_input_listener_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mmv_input_listener_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_mmv_input_listener_FOREACH_CHILD(fn) 
#define DT_N_S_mmv_input_listener_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mmv_input_listener_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mmv_input_listener_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mmv_input_listener_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mmv_input_listener_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mmv_input_listener_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mmv_input_listener_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mmv_input_listener_ORD 14
#define DT_N_S_mmv_input_listener_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mmv_input_listener_REQUIRES_ORDS \
	0, /* / */ \
	13, /* /behaviors/mouse_move */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mmv_input_listener_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mmv_input_listener_EXISTS 1
#define DT_N_INST_1_zmk_input_listener    DT_N_S_mmv_input_listener
#define DT_N_NODELABEL_mmv_input_listener DT_N_S_mmv_input_listener

/* Macros for properties that are special in the specification: */
#define DT_N_S_mmv_input_listener_REG_NUM 0
#define DT_N_S_mmv_input_listener_RANGES_NUM 0
#define DT_N_S_mmv_input_listener_FOREACH_RANGE(fn) 
#define DT_N_S_mmv_input_listener_IRQ_NUM 0
#define DT_N_S_mmv_input_listener_COMPAT_MATCHES_zmk_input_listener 1
#define DT_N_S_mmv_input_listener_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mmv_input_listener_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_mmv_input_listener_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mmv_input_listener_COMPAT_MODEL_IDX_0 "input-listener"
#define DT_N_S_mmv_input_listener_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mmv_input_listener_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mmv_input_listener_P_device DT_N_S_behaviors_S_mouse_move
#define DT_N_S_mmv_input_listener_P_device_IDX_0 DT_N_S_behaviors_S_mouse_move
#define DT_N_S_mmv_input_listener_P_device_IDX_0_PH DT_N_S_behaviors_S_mouse_move
#define DT_N_S_mmv_input_listener_P_device_IDX_0_EXISTS 1
#define DT_N_S_mmv_input_listener_P_device_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mmv_input_listener, device, 0)
#define DT_N_S_mmv_input_listener_P_device_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mmv_input_listener, device, 0)
#define DT_N_S_mmv_input_listener_P_device_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mmv_input_listener, device, 0, __VA_ARGS__)
#define DT_N_S_mmv_input_listener_P_device_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mmv_input_listener, device, 0, __VA_ARGS__)
#define DT_N_S_mmv_input_listener_P_device_LEN 1
#define DT_N_S_mmv_input_listener_P_device_EXISTS 1

/*
 * Devicetree node: /behaviors/mouse_scroll
 *
 * Node identifier: DT_N_S_behaviors_S_mouse_scroll
 *
 * Binding (compatible = zmk,behavior-input-two-axis):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-input-two-axis.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_mouse_scroll_PATH "/behaviors/mouse_scroll"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_mouse_scroll_FULL_NAME "mouse_scroll"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_mouse_scroll_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_mouse_scroll_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_mouse_scroll_ORD 15
#define DT_N_S_behaviors_S_mouse_scroll_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_mouse_scroll_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_mouse_scroll_SUPPORTS_ORDS \
	16, /* /msc_input_listener */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_mouse_scroll_EXISTS 1
#define DT_N_INST_1_zmk_behavior_input_two_axis DT_N_S_behaviors_S_mouse_scroll
#define DT_N_NODELABEL_msc                      DT_N_S_behaviors_S_mouse_scroll

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_mouse_scroll_REG_NUM 0
#define DT_N_S_behaviors_S_mouse_scroll_RANGES_NUM 0
#define DT_N_S_behaviors_S_mouse_scroll_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_mouse_scroll_IRQ_NUM 0
#define DT_N_S_behaviors_S_mouse_scroll_COMPAT_MATCHES_zmk_behavior_input_two_axis 1
#define DT_N_S_behaviors_S_mouse_scroll_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_scroll_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_mouse_scroll_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_mouse_scroll_COMPAT_MODEL_IDX_0 "behavior-input-two-axis"
#define DT_N_S_behaviors_S_mouse_scroll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_mouse_scroll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_mouse_scroll_P_x_input_code 6
#define DT_N_S_behaviors_S_mouse_scroll_P_x_input_code_EXISTS 1
#define DT_N_S_behaviors_S_mouse_scroll_P_y_input_code 8
#define DT_N_S_behaviors_S_mouse_scroll_P_y_input_code_EXISTS 1
#define DT_N_S_behaviors_S_mouse_scroll_P_trigger_period_ms 16
#define DT_N_S_behaviors_S_mouse_scroll_P_trigger_period_ms_EXISTS 1
#define DT_N_S_behaviors_S_mouse_scroll_P_time_to_max_speed_ms 300
#define DT_N_S_behaviors_S_mouse_scroll_P_time_to_max_speed_ms_EXISTS 1
#define DT_N_S_behaviors_S_mouse_scroll_P_acceleration_exponent 0
#define DT_N_S_behaviors_S_mouse_scroll_P_acceleration_exponent_EXISTS 1

/*
 * Devicetree node: /msc_input_listener
 *
 * Node identifier: DT_N_S_msc_input_listener
 *
 * Binding (compatible = zmk,input-listener):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/zmk,input-listener.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_msc_input_listener_PATH "/msc_input_listener"

/* Node's name with unit-address: */
#define DT_N_S_msc_input_listener_FULL_NAME "msc_input_listener"

/* Node parent (/) identifier: */
#define DT_N_S_msc_input_listener_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_msc_input_listener_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_msc_input_listener_FOREACH_CHILD(fn) 
#define DT_N_S_msc_input_listener_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_msc_input_listener_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_msc_input_listener_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_msc_input_listener_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_msc_input_listener_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_msc_input_listener_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_msc_input_listener_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_msc_input_listener_ORD 16
#define DT_N_S_msc_input_listener_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_msc_input_listener_REQUIRES_ORDS \
	0, /* / */ \
	15, /* /behaviors/mouse_scroll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_msc_input_listener_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_msc_input_listener_EXISTS 1
#define DT_N_INST_2_zmk_input_listener    DT_N_S_msc_input_listener
#define DT_N_NODELABEL_msc_input_listener DT_N_S_msc_input_listener

/* Macros for properties that are special in the specification: */
#define DT_N_S_msc_input_listener_REG_NUM 0
#define DT_N_S_msc_input_listener_RANGES_NUM 0
#define DT_N_S_msc_input_listener_FOREACH_RANGE(fn) 
#define DT_N_S_msc_input_listener_IRQ_NUM 0
#define DT_N_S_msc_input_listener_COMPAT_MATCHES_zmk_input_listener 1
#define DT_N_S_msc_input_listener_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_msc_input_listener_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_msc_input_listener_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_msc_input_listener_COMPAT_MODEL_IDX_0 "input-listener"
#define DT_N_S_msc_input_listener_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_msc_input_listener_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_msc_input_listener_P_device DT_N_S_behaviors_S_mouse_scroll
#define DT_N_S_msc_input_listener_P_device_IDX_0 DT_N_S_behaviors_S_mouse_scroll
#define DT_N_S_msc_input_listener_P_device_IDX_0_PH DT_N_S_behaviors_S_mouse_scroll
#define DT_N_S_msc_input_listener_P_device_IDX_0_EXISTS 1
#define DT_N_S_msc_input_listener_P_device_FOREACH_PROP_ELEM(fn) fn(DT_N_S_msc_input_listener, device, 0)
#define DT_N_S_msc_input_listener_P_device_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_msc_input_listener, device, 0)
#define DT_N_S_msc_input_listener_P_device_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_msc_input_listener, device, 0, __VA_ARGS__)
#define DT_N_S_msc_input_listener_P_device_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_msc_input_listener, device, 0, __VA_ARGS__)
#define DT_N_S_msc_input_listener_P_device_LEN 1
#define DT_N_S_msc_input_listener_P_device_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 17
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	18, /* /soc/timer@40009000 */ \
	20, /* /soc/adc@40007000 */ \
	252, /* /soc/ccm@4000f000 */ \
	253, /* /soc/clock@40000000 */ \
	254, /* /soc/comparator@40013000 */ \
	255, /* /soc/crypto@5002a000 */ \
	256, /* /soc/ecb@4000e000 */ \
	257, /* /soc/egu@40014000 */ \
	258, /* /soc/egu@40015000 */ \
	259, /* /soc/egu@40016000 */ \
	260, /* /soc/egu@40017000 */ \
	261, /* /soc/egu@40018000 */ \
	262, /* /soc/egu@40019000 */ \
	264, /* /soc/gpiote@40006000 */ \
	265, /* /soc/i2c@40003000 */ \
	266, /* /soc/i2c@40004000 */ \
	267, /* /soc/i2s@40025000 */ \
	270, /* /soc/nfct@40005000 */ \
	271, /* /soc/pdm@4001d000 */ \
	273, /* /soc/pwm@4001c000 */ \
	274, /* /soc/pwm@40021000 */ \
	275, /* /soc/pwm@40022000 */ \
	276, /* /soc/pwm@4002d000 */ \
	277, /* /soc/qdec@40012000 */ \
	278, /* /soc/random@4000d000 */ \
	279, /* /soc/rtc@4000b000 */ \
	280, /* /soc/rtc@40011000 */ \
	281, /* /soc/rtc@40024000 */ \
	282, /* /soc/spi@40003000 */ \
	283, /* /soc/spi@40004000 */ \
	284, /* /soc/spi@40023000 */ \
	285, /* /soc/spi@4002f000 */ \
	286, /* /soc/temp@4000c000 */ \
	287, /* /soc/timer@40008000 */ \
	288, /* /soc/timer@4000a000 */ \
	289, /* /soc/timer@4001a000 */ \
	290, /* /soc/timer@4001b000 */ \
	292, /* /soc/uart@40002000 */ \
	293, /* /soc/uart@40028000 */ \
	295, /* /soc/watchdog@40010000 */ \
	303, /* /soc/power@40000000 */ \
	306, /* /soc/qspi@40029000 */ \
	309, /* /soc/radio@40001000 */ \
	311, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40009000
 *
 * Node identifier: DT_N_S_soc_S_timer_40009000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40009000_PATH "/soc/timer@40009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40009000_FULL_NAME "timer@40009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40009000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40009000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40009000_ORD 18
#define DT_N_S_soc_S_timer_40009000_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40009000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40009000_SUPPORTS_ORDS \
	19, /* /sw-pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40009000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_timer DT_N_S_soc_S_timer_40009000
#define DT_N_NODELABEL_timer1        DT_N_S_soc_S_timer_40009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40009000_REG_NUM 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_ADDRESS 1073778688 /* 0x40009000 */
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40009000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40009000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_40009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_40009000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40009000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40009000_P_reg {1073778688 /* 0x40009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0 1073778688
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_cc_num 4
#define DT_N_S_soc_S_timer_40009000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_40009000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_prescaler 0
#define DT_N_S_soc_S_timer_40009000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_zli 0
#define DT_N_S_soc_S_timer_40009000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status "disabled"
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40009000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40009000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, status, 0)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40009000, status, 0)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, compatible, 0)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40009000, compatible, 0)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40009000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /sw-pwm
 *
 * Node identifier: DT_N_S_sw_pwm
 *
 * Binding (compatible = nordic,nrf-sw-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-sw-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sw_pwm_PATH "/sw-pwm"

/* Node's name with unit-address: */
#define DT_N_S_sw_pwm_FULL_NAME "sw-pwm"

/* Node parent (/) identifier: */
#define DT_N_S_sw_pwm_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_sw_pwm_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_sw_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_sw_pwm_ORD 19
#define DT_N_S_sw_pwm_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sw_pwm_REQUIRES_ORDS \
	0, /* / */ \
	18, /* /soc/timer@40009000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sw_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sw_pwm_EXISTS 1
#define DT_N_INST_0_nordic_nrf_sw_pwm DT_N_S_sw_pwm
#define DT_N_NODELABEL_sw_pwm         DT_N_S_sw_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_sw_pwm_REG_NUM 0
#define DT_N_S_sw_pwm_RANGES_NUM 0
#define DT_N_S_sw_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_sw_pwm_IRQ_NUM 0
#define DT_N_S_sw_pwm_COMPAT_MATCHES_nordic_nrf_sw_pwm 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0 "nrf-sw-pwm"
#define DT_N_S_sw_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sw_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sw_pwm_P_generator DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0 DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0_PH DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_LEN 1
#define DT_N_S_sw_pwm_P_generator_EXISTS 1
#define DT_N_S_sw_pwm_P_clock_prescaler 0
#define DT_N_S_sw_pwm_P_clock_prescaler_EXISTS 1
#define DT_N_S_sw_pwm_P_status "disabled"
#define DT_N_S_sw_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_sw_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_sw_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_status_ENUM_IDX 2
#define DT_N_S_sw_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_sw_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_LEN 1
#define DT_N_S_sw_pwm_P_status_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible {"nordic,nrf-sw-pwm"}
#define DT_N_S_sw_pwm_P_compatible_IDX_0 "nordic,nrf-sw-pwm"
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-sw-pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_sw_pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SW_PWM
#define DT_N_S_sw_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_LEN 1
#define DT_N_S_sw_pwm_P_compatible_EXISTS 1
#define DT_N_S_sw_pwm_P_wakeup_source 0
#define DT_N_S_sw_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@40007000
 *
 * Node identifier: DT_N_S_soc_S_adc_40007000
 *
 * Binding (compatible = nordic,nrf-saadc):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-saadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40007000_PATH "/soc/adc@40007000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40007000_FULL_NAME "adc@40007000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40007000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40007000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40007000_ORD 20
#define DT_N_S_soc_S_adc_40007000_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40007000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40007000_SUPPORTS_ORDS \
	21, /* /vbatt */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40007000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_saadc DT_N_S_soc_S_adc_40007000
#define DT_N_NODELABEL_adc           DT_N_S_soc_S_adc_40007000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40007000_REG_NUM 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_ADDRESS 1073770496 /* 0x40007000 */
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_40007000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40007000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40007000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MATCHES_nordic_nrf_saadc 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_adc_40007000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MODEL_IDX_0 "nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40007000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40007000_P_reg {1073770496 /* 0x40007000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0 1073770496
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts {7 /* 0x7 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, status, 0)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007000, status, 0)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_status_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible {"nordic,nrf-saadc"}
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0 "nordic,nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-saadc
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_saadc
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SAADC
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, compatible, 0)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007000, compatible, 0)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40007000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vbatt
 *
 * Node identifier: DT_N_S_vbatt
 *
 * Binding (compatible = zmk,battery-voltage-divider):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/module/dts/bindings/sensor/zmk,battery-voltage-divider.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbatt_PATH "/vbatt"

/* Node's name with unit-address: */
#define DT_N_S_vbatt_FULL_NAME "vbatt"

/* Node parent (/) identifier: */
#define DT_N_S_vbatt_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbatt_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbatt_FOREACH_CHILD(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbatt_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbatt_ORD 21
#define DT_N_S_vbatt_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbatt_REQUIRES_ORDS \
	0, /* / */ \
	7, /* /soc/gpio@50000000 */ \
	20, /* /soc/adc@40007000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbatt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbatt_EXISTS 1
#define DT_N_INST_0_zmk_battery_voltage_divider DT_N_S_vbatt
#define DT_N_NODELABEL_vbatt                    DT_N_S_vbatt

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbatt_REG_NUM 0
#define DT_N_S_vbatt_RANGES_NUM 0
#define DT_N_S_vbatt_FOREACH_RANGE(fn) 
#define DT_N_S_vbatt_IRQ_NUM 0
#define DT_N_S_vbatt_COMPAT_MATCHES_zmk_battery_voltage_divider 1
#define DT_N_S_vbatt_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbatt_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_vbatt_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbatt_COMPAT_MODEL_IDX_0 "battery-voltage-divider"
#define DT_N_S_vbatt_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbatt_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbatt_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbatt_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_40007000
#define DT_N_S_vbatt_P_io_channels_IDX_0_VAL_input 7
#define DT_N_S_vbatt_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, io_channels, 0)
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbatt, io_channels, 0)
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbatt, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_io_channels_LEN 1
#define DT_N_S_vbatt_P_io_channels_EXISTS 1
#define DT_N_S_vbatt_P_output_ohms 510000
#define DT_N_S_vbatt_P_output_ohms_EXISTS 1
#define DT_N_S_vbatt_P_full_ohms 1510000
#define DT_N_S_vbatt_P_full_ohms_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_0_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_pin 14
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_flags 7
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, power_gpios, 0)
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbatt, power_gpios, 0)
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, power_gpios, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbatt, power_gpios, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_power_gpios_LEN 1
#define DT_N_S_vbatt_P_power_gpios_EXISTS 1
#define DT_N_S_vbatt_P_compatible {"zmk,battery-voltage-divider"}
#define DT_N_S_vbatt_P_compatible_IDX_0 "zmk,battery-voltage-divider"
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_UNQUOTED zmk,battery-voltage-divider
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_TOKEN zmk_battery_voltage_divider
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_BATTERY_VOLTAGE_DIVIDER
#define DT_N_S_vbatt_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, compatible, 0)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbatt, compatible, 0)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbatt, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_compatible_LEN 1
#define DT_N_S_vbatt_P_compatible_EXISTS 1
#define DT_N_S_vbatt_P_wakeup_source 0
#define DT_N_S_vbatt_P_wakeup_source_EXISTS 1
#define DT_N_S_vbatt_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbatt_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /behaviors/extpower
 *
 * Node identifier: DT_N_S_behaviors_S_extpower
 *
 * Binding (compatible = zmk,behavior-ext-power):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-ext-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_extpower_PATH "/behaviors/extpower"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_extpower_FULL_NAME "extpower"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_extpower_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_extpower_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_extpower_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_extpower_ORD 22
#define DT_N_S_behaviors_S_extpower_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_extpower_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_extpower_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_extpower_EXISTS 1
#define DT_N_INST_0_zmk_behavior_ext_power DT_N_S_behaviors_S_extpower
#define DT_N_NODELABEL_ext_power           DT_N_S_behaviors_S_extpower

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_extpower_REG_NUM 0
#define DT_N_S_behaviors_S_extpower_RANGES_NUM 0
#define DT_N_S_behaviors_S_extpower_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_extpower_IRQ_NUM 0
#define DT_N_S_behaviors_S_extpower_COMPAT_MATCHES_zmk_behavior_ext_power 1
#define DT_N_S_behaviors_S_extpower_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_extpower_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_extpower_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_extpower_COMPAT_MODEL_IDX_0 "behavior-ext-power"
#define DT_N_S_behaviors_S_extpower_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_extpower_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_extpower_P_display_name "External Power"
#define DT_N_S_behaviors_S_extpower_P_display_name_STRING_UNQUOTED External Power
#define DT_N_S_behaviors_S_extpower_P_display_name_STRING_TOKEN External_Power
#define DT_N_S_behaviors_S_extpower_P_display_name_STRING_UPPER_TOKEN EXTERNAL_POWER
#define DT_N_S_behaviors_S_extpower_P_display_name_IDX_0 "External Power"
#define DT_N_S_behaviors_S_extpower_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_extpower_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_extpower, display_name, 0)
#define DT_N_S_behaviors_S_extpower_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_extpower, display_name, 0)
#define DT_N_S_behaviors_S_extpower_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_extpower, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_extpower_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_extpower, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_extpower_P_display_name_LEN 1
#define DT_N_S_behaviors_S_extpower_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_param_2to2
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_2to2
 *
 * Binding (compatible = zmk,macro-param-2to2):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-param-2to2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_2to2_PATH "/behaviors/macro_param_2to2"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_2to2_FULL_NAME "macro_param_2to2"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_2to2_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_2to2_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_2to2_ORD 23
#define DT_N_S_behaviors_S_macro_param_2to2_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_2to2_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_2to2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_2to2_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_2to2 DT_N_S_behaviors_S_macro_param_2to2
#define DT_N_NODELABEL_macro_param_2to2  DT_N_S_behaviors_S_macro_param_2to2

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_2to2_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to2_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to2_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_2to2_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_MATCHES_zmk_macro_param_2to2 1
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to2_COMPAT_MODEL_IDX_0 "macro-param-2to2"
#define DT_N_S_behaviors_S_macro_param_2to2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_2to2_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/key_press
 *
 * Node identifier: DT_N_S_behaviors_S_key_press
 *
 * Binding (compatible = zmk,behavior-key-press):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-key-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_key_press_PATH "/behaviors/key_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_key_press_FULL_NAME "key_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_key_press_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_key_press_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_key_press_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_key_press_ORD 24
#define DT_N_S_behaviors_S_key_press_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_key_press_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_key_press_SUPPORTS_ORDS \
	27, /* /behaviors/nav_esc */ \
	33, /* /macros/scl_r_to_l */ \
	34, /* /macros/scw_r_to_l */ \
	37, /* /behaviors/th_kp_sl_hp */ \
	38, /* /behaviors/th_mo_kp_hp */ \
	40, /* /combos/c-hr-thumb-ar */ \
	41, /* /combos/c-hr-thumb-ars */ \
	42, /* /combos/c-hr-thumb-arst */ \
	43, /* /combos/c-hr-thumb-art */ \
	44, /* /combos/c-hr-thumb-as */ \
	45, /* /combos/c-hr-thumb-ast */ \
	46, /* /combos/c-hr-thumb-at */ \
	47, /* /combos/c-hr-thumb-rs */ \
	48, /* /combos/c-hr-thumb-rst */ \
	49, /* /combos/c-hr-thumb-rt */ \
	50, /* /combos/c-hr-thumb-st */ \
	54, /* /combos/cbknum_11 */ \
	55, /* /combos/cbknum_12 */ \
	56, /* /combos/cbknum_13 */ \
	57, /* /combos/cbknum_14 */ \
	58, /* /combos/cbknum_22 */ \
	59, /* /combos/cbknum_23 */ \
	60, /* /combos/cbknum_24 */ \
	61, /* /combos/cbknum_25 */ \
	62, /* /combos/cbks_0 */ \
	64, /* /macros/mc_bkctilde */ \
	66, /* /macros/mc_enne */ \
	72, /* /combos/cbks_30 */ \
	74, /* /combos/cent_0 */ \
	75, /* /combos/cent_1 */ \
	76, /* /combos/cent_10 */ \
	77, /* /combos/cent_11 */ \
	78, /* /combos/cent_12 */ \
	79, /* /combos/cent_13 */ \
	80, /* /combos/cent_14 */ \
	81, /* /combos/cent_15 */ \
	82, /* /combos/cent_16 */ \
	83, /* /combos/cent_17 */ \
	84, /* /combos/cent_18 */ \
	85, /* /combos/cent_19 */ \
	86, /* /combos/cent_2 */ \
	87, /* /combos/cent_21 */ \
	88, /* /combos/cent_22 */ \
	89, /* /combos/cent_23 */ \
	90, /* /combos/cent_24 */ \
	91, /* /combos/cent_25 */ \
	92, /* /combos/cent_26 */ \
	93, /* /combos/cent_27 */ \
	94, /* /combos/cent_28 */ \
	95, /* /combos/cent_29 */ \
	96, /* /combos/cent_3 */ \
	97, /* /combos/cent_30 */ \
	98, /* /combos/cent_4 */ \
	99, /* /combos/cent_5 */ \
	100, /* /combos/cent_6 */ \
	101, /* /combos/cent_7 */ \
	102, /* /combos/cent_8 */ \
	103, /* /combos/cent_9 */ \
	104, /* /combos/combo_COLON */ \
	105, /* /combos/combo_FSLH */ \
	106, /* /combos/combo_NUM0 */ \
	107, /* /combos/combo_NUM1 */ \
	108, /* /combos/combo_NUM2 */ \
	109, /* /combos/combo_NUM3 */ \
	110, /* /combos/combo_NUM4 */ \
	111, /* /combos/combo_NUM5 */ \
	112, /* /combos/combo_NUM6 */ \
	113, /* /combos/combo_NUM7 */ \
	114, /* /combos/combo_NUM8 */ \
	115, /* /combos/combo_NUM9 */ \
	116, /* /combos/combo_SEMI */ \
	121, /* /combos/combo_comb_az */ \
	122, /* /combos/combo_comb_cd */ \
	123, /* /combos/combo_comb_fp */ \
	124, /* /combos/combo_comb_gv */ \
	125, /* /combos/combo_comb_pb */ \
	126, /* /combos/combo_comb_pb_2 */ \
	127, /* /combos/combo_comb_rx */ \
	128, /* /combos/combo_comb_sc */ \
	129, /* /combos/combo_comb_td */ \
	130, /* /combos/combo_comb_tg */ \
	131, /* /combos/combo_comb_tg_2 */ \
	132, /* /combos/combo_comb_wf */ \
	133, /* /combos/combo_comb_xc */ \
	134, /* /combos/combo_pg_0 */ \
	135, /* /combos/combo_pg_1 */ \
	136, /* /combos/combo_pg_4 */ \
	137, /* /combos/combo_pg_5 */ \
	138, /* /combos/combo_requal */ \
	139, /* /combos/combo_rsemi */ \
	140, /* /combos/comboinv_pg_0_inv */ \
	141, /* /combos/comboinv_pg_1_inv */ \
	142, /* /combos/comboinv_pg_4_inv */ \
	143, /* /combos/comboinv_pg_5_inv */ \
	144, /* /combos/ctab_0 */ \
	145, /* /combos/ctab_1 */ \
	146, /* /combos/ctab_2 */ \
	147, /* /combos/ctab_3 */ \
	148, /* /combos/ctab_4 */ \
	149, /* /combos/ctab_5 */ \
	150, /* /combos/ctab_6 */ \
	151, /* /combos/ctab_7 */ \
	152, /* /combos/ctab_8 */ \
	153, /* /combos/ctab_9 */ \
	157, /* /macros/mhr */ \
	162, /* /combos/ctabd_14 */ \
	163, /* /behaviors/pfind */ \
	164, /* /behaviors/td_find_s_ht */ \
	166, /* /behaviors/gpfind */ \
	167, /* /behaviors/td_find_g_ht */ \
	169, /* /behaviors/lrlMo */ \
	171, /* /combos/ctabda_24 */ \
	172, /* /combos/ctabda_25 */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	203, /* /behaviors/lm_homerow */ \
	204, /* /behaviors/lm_homerow_short */ \
	205, /* /behaviors/thumb_layer_access_spacebarlm */ \
	206, /* /keymap/base_layer */ \
	207, /* /behaviors/sticky_key */ \
	208, /* /macros/scl_l_to_r */ \
	209, /* /macros/scw_l_to_r */ \
	212, /* /macros/mc_sleep */ \
	213, /* /keymap/layer_direcaacc */ \
	214, /* /behaviors/lrrMo */ \
	215, /* /keymap/layer_func */ \
	216, /* /keymap/layer_homerow */ \
	217, /* /keymap/layer_navoverleft */ \
	219, /* /keymap/layer_navoverr */ \
	220, /* /keymap/layer_numbers */ \
	221, /* /keymap/lower_layer */ \
	222, /* /keymap/raise_layer */ \
	227, /* /macros/mc_quesd */ \
	229, /* /macros/mc_tilde */ \
	230, /* /macros/scfw_l_to_r */ \
	231, /* /macros/scfw_r_to_l */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_key_press DT_N_S_behaviors_S_key_press
#define DT_N_NODELABEL_kp                  DT_N_S_behaviors_S_key_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_key_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_key_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_key_press_COMPAT_MATCHES_zmk_behavior_key_press 1
#define DT_N_S_behaviors_S_key_press_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_key_press_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_key_press_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_key_press_COMPAT_MODEL_IDX_0 "behavior-key-press"
#define DT_N_S_behaviors_S_key_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_key_press_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_key_press_P_display_name "Key Press"
#define DT_N_S_behaviors_S_key_press_P_display_name_STRING_UNQUOTED Key Press
#define DT_N_S_behaviors_S_key_press_P_display_name_STRING_TOKEN Key_Press
#define DT_N_S_behaviors_S_key_press_P_display_name_STRING_UPPER_TOKEN KEY_PRESS
#define DT_N_S_behaviors_S_key_press_P_display_name_IDX_0 "Key Press"
#define DT_N_S_behaviors_S_key_press_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_key_press_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_key_press, display_name, 0)
#define DT_N_S_behaviors_S_key_press_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_key_press, display_name, 0)
#define DT_N_S_behaviors_S_key_press_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_key_press, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_key_press_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_key_press, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_key_press_P_display_name_LEN 1
#define DT_N_S_behaviors_S_key_press_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/momentary_layer
 *
 * Node identifier: DT_N_S_behaviors_S_momentary_layer
 *
 * Binding (compatible = zmk,behavior-momentary-layer):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-momentary-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_momentary_layer_PATH "/behaviors/momentary_layer"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_momentary_layer_FULL_NAME "momentary_layer"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_momentary_layer_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_momentary_layer_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_momentary_layer_ORD 25
#define DT_N_S_behaviors_S_momentary_layer_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_momentary_layer_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_momentary_layer_SUPPORTS_ORDS \
	27, /* /behaviors/nav_esc */ \
	36, /* /behaviors/sticky_layer */ \
	38, /* /behaviors/th_mo_kp_hp */ \
	51, /* /combos/cbkl_2 */ \
	52, /* /combos/cbkl_3 */ \
	53, /* /combos/cbkl_4 */ \
	54, /* /combos/cbknum_11 */ \
	55, /* /combos/cbknum_12 */ \
	56, /* /combos/cbknum_13 */ \
	57, /* /combos/cbknum_14 */ \
	58, /* /combos/cbknum_22 */ \
	59, /* /combos/cbknum_23 */ \
	60, /* /combos/cbknum_24 */ \
	61, /* /combos/cbknum_25 */ \
	74, /* /combos/cent_0 */ \
	75, /* /combos/cent_1 */ \
	76, /* /combos/cent_10 */ \
	77, /* /combos/cent_11 */ \
	78, /* /combos/cent_12 */ \
	79, /* /combos/cent_13 */ \
	80, /* /combos/cent_14 */ \
	81, /* /combos/cent_15 */ \
	82, /* /combos/cent_16 */ \
	83, /* /combos/cent_17 */ \
	84, /* /combos/cent_18 */ \
	85, /* /combos/cent_19 */ \
	86, /* /combos/cent_2 */ \
	87, /* /combos/cent_21 */ \
	88, /* /combos/cent_22 */ \
	89, /* /combos/cent_23 */ \
	90, /* /combos/cent_24 */ \
	91, /* /combos/cent_25 */ \
	92, /* /combos/cent_26 */ \
	93, /* /combos/cent_27 */ \
	94, /* /combos/cent_28 */ \
	95, /* /combos/cent_29 */ \
	96, /* /combos/cent_3 */ \
	97, /* /combos/cent_30 */ \
	98, /* /combos/cent_4 */ \
	99, /* /combos/cent_5 */ \
	100, /* /combos/cent_6 */ \
	101, /* /combos/cent_7 */ \
	102, /* /combos/cent_8 */ \
	103, /* /combos/cent_9 */ \
	144, /* /combos/ctab_0 */ \
	145, /* /combos/ctab_1 */ \
	146, /* /combos/ctab_2 */ \
	147, /* /combos/ctab_3 */ \
	148, /* /combos/ctab_4 */ \
	149, /* /combos/ctab_5 */ \
	150, /* /combos/ctab_6 */ \
	151, /* /combos/ctab_7 */ \
	152, /* /combos/ctab_8 */ \
	153, /* /combos/ctab_9 */ \
	157, /* /macros/mhr */ \
	165, /* /combos/ctabda_21 */ \
	168, /* /combos/ctabda_22 */ \
	170, /* /combos/ctabda_23 */ \
	171, /* /combos/ctabda_24 */ \
	172, /* /combos/ctabda_25 */ \
	198, /* /behaviors/space */ \
	205, /* /behaviors/thumb_layer_access_spacebarlm */ \
	229, /* /macros/mc_tilde */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_momentary_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_momentary_layer DT_N_S_behaviors_S_momentary_layer
#define DT_N_NODELABEL_mo                        DT_N_S_behaviors_S_momentary_layer

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_momentary_layer_REG_NUM 0
#define DT_N_S_behaviors_S_momentary_layer_RANGES_NUM 0
#define DT_N_S_behaviors_S_momentary_layer_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_momentary_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_MATCHES_zmk_behavior_momentary_layer 1
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_momentary_layer_COMPAT_MODEL_IDX_0 "behavior-momentary-layer"
#define DT_N_S_behaviors_S_momentary_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_momentary_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_momentary_layer_P_display_name "Momentary Layer"
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_STRING_UNQUOTED Momentary Layer
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_STRING_TOKEN Momentary_Layer
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_STRING_UPPER_TOKEN MOMENTARY_LAYER
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_IDX_0 "Momentary Layer"
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_momentary_layer, display_name, 0)
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_momentary_layer, display_name, 0)
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_momentary_layer, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_momentary_layer, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_LEN 1
#define DT_N_S_behaviors_S_momentary_layer_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/none
 *
 * Node identifier: DT_N_S_behaviors_S_none
 *
 * Binding (compatible = zmk,behavior-none):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-none.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_none_PATH "/behaviors/none"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_none_FULL_NAME "none"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_none_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_none_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_none_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_none_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_none_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_none_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_none_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_none_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_none_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_none_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_none_ORD 26
#define DT_N_S_behaviors_S_none_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_none_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_none_SUPPORTS_ORDS \
	27, /* /behaviors/nav_esc */ \
	215, /* /keymap/layer_func */ \
	219, /* /keymap/layer_navoverr */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_none_EXISTS 1
#define DT_N_INST_0_zmk_behavior_none DT_N_S_behaviors_S_none
#define DT_N_NODELABEL_none           DT_N_S_behaviors_S_none

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_none_REG_NUM 0
#define DT_N_S_behaviors_S_none_RANGES_NUM 0
#define DT_N_S_behaviors_S_none_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_none_IRQ_NUM 0
#define DT_N_S_behaviors_S_none_COMPAT_MATCHES_zmk_behavior_none 1
#define DT_N_S_behaviors_S_none_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_none_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_none_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_none_COMPAT_MODEL_IDX_0 "behavior-none"
#define DT_N_S_behaviors_S_none_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_none_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_none_P_display_name "None"
#define DT_N_S_behaviors_S_none_P_display_name_STRING_UNQUOTED None
#define DT_N_S_behaviors_S_none_P_display_name_STRING_TOKEN None
#define DT_N_S_behaviors_S_none_P_display_name_STRING_UPPER_TOKEN NONE
#define DT_N_S_behaviors_S_none_P_display_name_IDX_0 "None"
#define DT_N_S_behaviors_S_none_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_none_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_none, display_name, 0)
#define DT_N_S_behaviors_S_none_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_none, display_name, 0)
#define DT_N_S_behaviors_S_none_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_none, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_none_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_none, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_none_P_display_name_LEN 1
#define DT_N_S_behaviors_S_none_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/nav_esc
 *
 * Node identifier: DT_N_S_behaviors_S_nav_esc
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_nav_esc_PATH "/behaviors/nav_esc"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_nav_esc_FULL_NAME "nav_esc"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_nav_esc_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_nav_esc_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_nav_esc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_nav_esc_ORD 27
#define DT_N_S_behaviors_S_nav_esc_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_nav_esc_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	26, /* /behaviors/none */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_nav_esc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_nav_esc_EXISTS 1
#define DT_N_INST_5_zmk_behavior_tap_dance DT_N_S_behaviors_S_nav_esc
#define DT_N_NODELABEL_nav_esc             DT_N_S_behaviors_S_nav_esc

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_nav_esc_REG_NUM 0
#define DT_N_S_behaviors_S_nav_esc_RANGES_NUM 0
#define DT_N_S_behaviors_S_nav_esc_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_nav_esc_IRQ_NUM 0
#define DT_N_S_behaviors_S_nav_esc_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_nav_esc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_nav_esc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_nav_esc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_nav_esc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_0_VAL_param1 4
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_1_PH DT_N_S_behaviors_S_none
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_2_VAL_param1 458793
#define DT_N_S_behaviors_S_nav_esc_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_nav_esc, bindings, 0) \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 1) \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 2)
#define DT_N_S_behaviors_S_nav_esc_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_nav_esc, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 2)
#define DT_N_S_behaviors_S_nav_esc_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_nav_esc, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_nav_esc_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_nav_esc, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_nav_esc, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_nav_esc_P_bindings_LEN 3
#define DT_N_S_behaviors_S_nav_esc_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_tapping_term_ms 500
#define DT_N_S_behaviors_S_nav_esc_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_label "NAV_ESC"
#define DT_N_S_behaviors_S_nav_esc_P_label_STRING_UNQUOTED NAV_ESC
#define DT_N_S_behaviors_S_nav_esc_P_label_STRING_TOKEN NAV_ESC
#define DT_N_S_behaviors_S_nav_esc_P_label_STRING_UPPER_TOKEN NAV_ESC
#define DT_N_S_behaviors_S_nav_esc_P_label_IDX_0 "NAV_ESC"
#define DT_N_S_behaviors_S_nav_esc_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_nav_esc_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_nav_esc, label, 0)
#define DT_N_S_behaviors_S_nav_esc_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_nav_esc, label, 0)
#define DT_N_S_behaviors_S_nav_esc_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_nav_esc, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_nav_esc_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_nav_esc, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_nav_esc_P_label_LEN 1
#define DT_N_S_behaviors_S_nav_esc_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/rgb_ug
 *
 * Node identifier: DT_N_S_behaviors_S_rgb_ug
 *
 * Binding (compatible = zmk,behavior-rgb-underglow):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-rgb-underglow.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_rgb_ug_PATH "/behaviors/rgb_ug"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_rgb_ug_FULL_NAME "rgb_ug"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_rgb_ug_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_rgb_ug_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_rgb_ug_ORD 28
#define DT_N_S_behaviors_S_rgb_ug_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_rgb_ug_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_rgb_ug_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_rgb_ug_EXISTS 1
#define DT_N_INST_0_zmk_behavior_rgb_underglow DT_N_S_behaviors_S_rgb_ug
#define DT_N_NODELABEL_rgb_ug                  DT_N_S_behaviors_S_rgb_ug

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_rgb_ug_REG_NUM 0
#define DT_N_S_behaviors_S_rgb_ug_RANGES_NUM 0
#define DT_N_S_behaviors_S_rgb_ug_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_rgb_ug_IRQ_NUM 0
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_MATCHES_zmk_behavior_rgb_underglow 1
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_rgb_ug_COMPAT_MODEL_IDX_0 "behavior-rgb-underglow"
#define DT_N_S_behaviors_S_rgb_ug_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_rgb_ug_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_rgb_ug_P_display_name "Underglow"
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_STRING_UNQUOTED Underglow
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_STRING_TOKEN Underglow
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_STRING_UPPER_TOKEN UNDERGLOW
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_IDX_0 "Underglow"
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_rgb_ug, display_name, 0)
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_rgb_ug, display_name, 0)
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_rgb_ug, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_rgb_ug, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_LEN 1
#define DT_N_S_behaviors_S_rgb_ug_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/studio_unlock
 *
 * Node identifier: DT_N_S_behaviors_S_studio_unlock
 *
 * Binding (compatible = zmk,behavior-studio-unlock):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-studio-unlock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_studio_unlock_PATH "/behaviors/studio_unlock"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_studio_unlock_FULL_NAME "studio_unlock"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_studio_unlock_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_studio_unlock_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_studio_unlock_ORD 29
#define DT_N_S_behaviors_S_studio_unlock_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_studio_unlock_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_studio_unlock_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_studio_unlock_EXISTS 1
#define DT_N_INST_0_zmk_behavior_studio_unlock DT_N_S_behaviors_S_studio_unlock
#define DT_N_NODELABEL_studio_unlock           DT_N_S_behaviors_S_studio_unlock

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_studio_unlock_REG_NUM 0
#define DT_N_S_behaviors_S_studio_unlock_RANGES_NUM 0
#define DT_N_S_behaviors_S_studio_unlock_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_studio_unlock_IRQ_NUM 0
#define DT_N_S_behaviors_S_studio_unlock_COMPAT_MATCHES_zmk_behavior_studio_unlock 1
#define DT_N_S_behaviors_S_studio_unlock_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_studio_unlock_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_studio_unlock_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_studio_unlock_COMPAT_MODEL_IDX_0 "behavior-studio-unlock"
#define DT_N_S_behaviors_S_studio_unlock_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_studio_unlock_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_studio_unlock_P_display_name "Studio Unlock"
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_STRING_UNQUOTED Studio Unlock
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_STRING_TOKEN Studio_Unlock
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_STRING_UPPER_TOKEN STUDIO_UNLOCK
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_IDX_0 "Studio Unlock"
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_studio_unlock, display_name, 0)
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_studio_unlock, display_name, 0)
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_studio_unlock, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_studio_unlock, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_LEN 1
#define DT_N_S_behaviors_S_studio_unlock_P_display_name_EXISTS 1

/*
 * Devicetree node: /macros
 *
 * Node identifier: DT_N_S_macros
 */

/* Node's full path: */
#define DT_N_S_macros_PATH "/macros"

/* Node's name with unit-address: */
#define DT_N_S_macros_FULL_NAME "macros"

/* Node parent (/) identifier: */
#define DT_N_S_macros_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_FOREACH_CHILD(fn) fn(DT_N_S_macros_S_mc_sleep) fn(DT_N_S_macros_S_mc_bkctilde) fn(DT_N_S_macros_S_mc_tilde) fn(DT_N_S_macros_S_mc_enne) fn(DT_N_S_macros_S_mac_enne_shift_delete) fn(DT_N_S_macros_S_mc_quesd) fn(DT_N_S_macros_S_mhr) fn(DT_N_S_macros_S_scl_l_to_r) fn(DT_N_S_macros_S_scl_r_to_l) fn(DT_N_S_macros_S_scw_r_to_l) fn(DT_N_S_macros_S_scw_l_to_r) fn(DT_N_S_macros_S_scfw_r_to_l) fn(DT_N_S_macros_S_scfw_l_to_r) fn(DT_N_S_macros_S_bt_disc_0) fn(DT_N_S_macros_S_bt_disc_1) fn(DT_N_S_macros_S_bt_disc_2) fn(DT_N_S_macros_S_bt_disc_3) fn(DT_N_S_macros_S_bt_disc_4) fn(DT_N_S_macros_S_bt_select_disc_0) fn(DT_N_S_macros_S_bt_select_disc_1) fn(DT_N_S_macros_S_bt_select_disc_2) fn(DT_N_S_macros_S_bt_select_disc_3) fn(DT_N_S_macros_S_bt_select_disc_4) fn(DT_N_S_macros_S_bt_select_c) fn(DT_N_S_macros_S_bt_pairing_c)
#define DT_N_S_macros_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_macros_S_mc_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_bkctilde) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_tilde) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_enne) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mac_enne_shift_delete) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_quesd) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mhr) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_l_to_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_r_to_l) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_r_to_l) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_l_to_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_r_to_l) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_l_to_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_pairing_c)
#define DT_N_S_macros_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_sleep, __VA_ARGS__) fn(DT_N_S_macros_S_mc_bkctilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_tilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_enne, __VA_ARGS__) fn(DT_N_S_macros_S_mac_enne_shift_delete, __VA_ARGS__) fn(DT_N_S_macros_S_mc_quesd, __VA_ARGS__) fn(DT_N_S_macros_S_mhr, __VA_ARGS__) fn(DT_N_S_macros_S_scl_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scl_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_c, __VA_ARGS__) fn(DT_N_S_macros_S_bt_pairing_c, __VA_ARGS__)
#define DT_N_S_macros_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_bkctilde, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_tilde, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_enne, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mac_enne_shift_delete, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_quesd, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mhr, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_l_to_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_r_to_l, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_r_to_l, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_l_to_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_r_to_l, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_l_to_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_pairing_c, __VA_ARGS__)
#define DT_N_S_macros_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_macros_S_mc_sleep) fn(DT_N_S_macros_S_mc_bkctilde) fn(DT_N_S_macros_S_mc_tilde) fn(DT_N_S_macros_S_mc_enne) fn(DT_N_S_macros_S_mac_enne_shift_delete) fn(DT_N_S_macros_S_mc_quesd) fn(DT_N_S_macros_S_mhr) fn(DT_N_S_macros_S_scl_l_to_r) fn(DT_N_S_macros_S_scl_r_to_l) fn(DT_N_S_macros_S_scw_r_to_l) fn(DT_N_S_macros_S_scw_l_to_r) fn(DT_N_S_macros_S_scfw_r_to_l) fn(DT_N_S_macros_S_scfw_l_to_r) fn(DT_N_S_macros_S_bt_disc_0) fn(DT_N_S_macros_S_bt_disc_1) fn(DT_N_S_macros_S_bt_disc_2) fn(DT_N_S_macros_S_bt_disc_3) fn(DT_N_S_macros_S_bt_disc_4) fn(DT_N_S_macros_S_bt_select_disc_0) fn(DT_N_S_macros_S_bt_select_disc_1) fn(DT_N_S_macros_S_bt_select_disc_2) fn(DT_N_S_macros_S_bt_select_disc_3) fn(DT_N_S_macros_S_bt_select_disc_4) fn(DT_N_S_macros_S_bt_select_c) fn(DT_N_S_macros_S_bt_pairing_c)
#define DT_N_S_macros_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_macros_S_mc_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_bkctilde) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_tilde) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_enne) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mac_enne_shift_delete) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_quesd) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mhr) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_l_to_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_r_to_l) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_r_to_l) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_l_to_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_r_to_l) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_l_to_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_pairing_c)
#define DT_N_S_macros_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_sleep, __VA_ARGS__) fn(DT_N_S_macros_S_mc_bkctilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_tilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_enne, __VA_ARGS__) fn(DT_N_S_macros_S_mac_enne_shift_delete, __VA_ARGS__) fn(DT_N_S_macros_S_mc_quesd, __VA_ARGS__) fn(DT_N_S_macros_S_mhr, __VA_ARGS__) fn(DT_N_S_macros_S_scl_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scl_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_c, __VA_ARGS__) fn(DT_N_S_macros_S_bt_pairing_c, __VA_ARGS__)
#define DT_N_S_macros_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_bkctilde, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_tilde, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_enne, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mac_enne_shift_delete, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mc_quesd, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_mhr, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_l_to_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scl_r_to_l, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_r_to_l, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scw_l_to_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_r_to_l, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_scfw_l_to_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_disc_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_disc_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_select_c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_macros_S_bt_pairing_c, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_macros_ORD 30
#define DT_N_S_macros_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_SUPPORTS_ORDS \
	33, /* /macros/scl_r_to_l */ \
	34, /* /macros/scw_r_to_l */ \
	64, /* /macros/mc_bkctilde */ \
	66, /* /macros/mc_enne */ \
	67, /* /macros/mac_enne_shift_delete */ \
	157, /* /macros/mhr */ \
	181, /* /macros/bt_select_c */ \
	182, /* /macros/bt_pairing_c */ \
	183, /* /macros/bt_disc_0 */ \
	184, /* /macros/bt_select_disc_0 */ \
	186, /* /macros/bt_disc_1 */ \
	187, /* /macros/bt_select_disc_1 */ \
	189, /* /macros/bt_disc_2 */ \
	190, /* /macros/bt_select_disc_2 */ \
	192, /* /macros/bt_disc_3 */ \
	193, /* /macros/bt_select_disc_3 */ \
	195, /* /macros/bt_disc_4 */ \
	196, /* /macros/bt_select_disc_4 */ \
	208, /* /macros/scl_l_to_r */ \
	209, /* /macros/scw_l_to_r */ \
	212, /* /macros/mc_sleep */ \
	227, /* /macros/mc_quesd */ \
	229, /* /macros/mc_tilde */ \
	230, /* /macros/scfw_l_to_r */ \
	231, /* /macros/scfw_r_to_l */

/* Existence and alternate IDs: */
#define DT_N_S_macros_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_REG_NUM 0
#define DT_N_S_macros_RANGES_NUM 0
#define DT_N_S_macros_FOREACH_RANGE(fn) 
#define DT_N_S_macros_IRQ_NUM 0
#define DT_N_S_macros_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_tap
 *
 * Node identifier: DT_N_S_behaviors_S_macro_tap
 *
 * Binding (compatible = zmk,macro-control-mode-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-control-mode-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_tap_PATH "/behaviors/macro_tap"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_tap_FULL_NAME "macro_tap"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_tap_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_tap_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_tap_ORD 31
#define DT_N_S_behaviors_S_macro_tap_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_tap_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_tap_SUPPORTS_ORDS \
	33, /* /macros/scl_r_to_l */ \
	34, /* /macros/scw_r_to_l */ \
	64, /* /macros/mc_bkctilde */ \
	66, /* /macros/mc_enne */ \
	67, /* /macros/mac_enne_shift_delete */ \
	163, /* /behaviors/pfind */ \
	166, /* /behaviors/gpfind */ \
	181, /* /macros/bt_select_c */ \
	182, /* /macros/bt_pairing_c */ \
	183, /* /macros/bt_disc_0 */ \
	184, /* /macros/bt_select_disc_0 */ \
	186, /* /macros/bt_disc_1 */ \
	187, /* /macros/bt_select_disc_1 */ \
	189, /* /macros/bt_disc_2 */ \
	190, /* /macros/bt_select_disc_2 */ \
	192, /* /macros/bt_disc_3 */ \
	193, /* /macros/bt_select_disc_3 */ \
	195, /* /macros/bt_disc_4 */ \
	196, /* /macros/bt_select_disc_4 */ \
	208, /* /macros/scl_l_to_r */ \
	209, /* /macros/scw_l_to_r */ \
	227, /* /macros/mc_quesd */ \
	229, /* /macros/mc_tilde */ \
	230, /* /macros/scfw_l_to_r */ \
	231, /* /macros/scfw_r_to_l */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_tap_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_tap DT_N_S_behaviors_S_macro_tap
#define DT_N_NODELABEL_macro_tap               DT_N_S_behaviors_S_macro_tap

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_tap_REG_NUM 0
#define DT_N_S_behaviors_S_macro_tap_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_tap_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_tap_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_tap_COMPAT_MATCHES_zmk_macro_control_mode_tap 1
#define DT_N_S_behaviors_S_macro_tap_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_tap_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_COMPAT_MODEL_IDX_0 "macro-control-mode-tap"
#define DT_N_S_behaviors_S_macro_tap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_tap_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_wait_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_wait_time
 *
 * Binding (compatible = zmk,macro-control-wait-time):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-control-wait-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_wait_time_PATH "/behaviors/macro_wait_time"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_wait_time_FULL_NAME "macro_wait_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_wait_time_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_wait_time_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_wait_time_ORD 32
#define DT_N_S_behaviors_S_macro_wait_time_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_wait_time_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_wait_time_SUPPORTS_ORDS \
	33, /* /macros/scl_r_to_l */ \
	34, /* /macros/scw_r_to_l */ \
	163, /* /behaviors/pfind */ \
	166, /* /behaviors/gpfind */ \
	181, /* /macros/bt_select_c */ \
	182, /* /macros/bt_pairing_c */ \
	183, /* /macros/bt_disc_0 */ \
	184, /* /macros/bt_select_disc_0 */ \
	186, /* /macros/bt_disc_1 */ \
	187, /* /macros/bt_select_disc_1 */ \
	189, /* /macros/bt_disc_2 */ \
	190, /* /macros/bt_select_disc_2 */ \
	192, /* /macros/bt_disc_3 */ \
	193, /* /macros/bt_select_disc_3 */ \
	195, /* /macros/bt_disc_4 */ \
	196, /* /macros/bt_select_disc_4 */ \
	208, /* /macros/scl_l_to_r */ \
	209, /* /macros/scw_l_to_r */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_wait_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_wait_time DT_N_S_behaviors_S_macro_wait_time
#define DT_N_NODELABEL_macro_wait_time          DT_N_S_behaviors_S_macro_wait_time

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_wait_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_wait_time_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_wait_time_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_wait_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_MATCHES_zmk_macro_control_wait_time 1
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_wait_time_COMPAT_MODEL_IDX_0 "macro-control-wait-time"
#define DT_N_S_behaviors_S_macro_wait_time_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_wait_time_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /macros/scl_r_to_l
 *
 * Node identifier: DT_N_S_macros_S_scl_r_to_l
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_scl_r_to_l_PATH "/macros/scl_r_to_l"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_scl_r_to_l_FULL_NAME "scl_r_to_l"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_scl_r_to_l_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_scl_r_to_l_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_scl_r_to_l_ORD 33
#define DT_N_S_macros_S_scl_r_to_l_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_scl_r_to_l_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_scl_r_to_l_SUPPORTS_ORDS \
	35, /* /behaviors/tdSelectCoppingRL */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_scl_r_to_l_EXISTS 1
#define DT_N_INST_5_zmk_behavior_macro DT_N_S_macros_S_scl_r_to_l
#define DT_N_NODELABEL_scl_r_to_l      DT_N_S_macros_S_scl_r_to_l

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_scl_r_to_l_REG_NUM 0
#define DT_N_S_macros_S_scl_r_to_l_RANGES_NUM 0
#define DT_N_S_macros_S_scl_r_to_l_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_scl_r_to_l_IRQ_NUM 0
#define DT_N_S_macros_S_scl_r_to_l_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_scl_r_to_l_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_scl_r_to_l_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_scl_r_to_l_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_scl_r_to_l_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_scl_r_to_l_P_label "&SCL_R_TO_L"
#define DT_N_S_macros_S_scl_r_to_l_P_label_STRING_UNQUOTED &SCL_R_TO_L
#define DT_N_S_macros_S_scl_r_to_l_P_label_STRING_TOKEN _SCL_R_TO_L
#define DT_N_S_macros_S_scl_r_to_l_P_label_STRING_UPPER_TOKEN _SCL_R_TO_L
#define DT_N_S_macros_S_scl_r_to_l_P_label_IDX_0 "&SCL_R_TO_L"
#define DT_N_S_macros_S_scl_r_to_l_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scl_r_to_l, label, 0)
#define DT_N_S_macros_S_scl_r_to_l_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scl_r_to_l, label, 0)
#define DT_N_S_macros_S_scl_r_to_l_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scl_r_to_l, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scl_r_to_l_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scl_r_to_l, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scl_r_to_l_P_label_LEN 1
#define DT_N_S_macros_S_scl_r_to_l_P_label_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_1_VAL_param1 134676559
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_2_VAL_param1 5
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_4_VAL_param1 168230992
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_5_VAL_param1 5
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_7_VAL_param1 134676486
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scl_r_to_l, bindings, 0) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 1) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 2) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 3) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 4) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 5) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 6) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 7)
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scl_r_to_l, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 7)
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scl_r_to_l, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scl_r_to_l, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_r_to_l, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_LEN 8
#define DT_N_S_macros_S_scl_r_to_l_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/scw_r_to_l
 *
 * Node identifier: DT_N_S_macros_S_scw_r_to_l
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_scw_r_to_l_PATH "/macros/scw_r_to_l"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_scw_r_to_l_FULL_NAME "scw_r_to_l"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_scw_r_to_l_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_scw_r_to_l_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_scw_r_to_l_ORD 34
#define DT_N_S_macros_S_scw_r_to_l_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_scw_r_to_l_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_scw_r_to_l_SUPPORTS_ORDS \
	35, /* /behaviors/tdSelectCoppingRL */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_scw_r_to_l_EXISTS 1
#define DT_N_INST_6_zmk_behavior_macro DT_N_S_macros_S_scw_r_to_l
#define DT_N_NODELABEL_scw_r_to_l      DT_N_S_macros_S_scw_r_to_l

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_scw_r_to_l_REG_NUM 0
#define DT_N_S_macros_S_scw_r_to_l_RANGES_NUM 0
#define DT_N_S_macros_S_scw_r_to_l_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_scw_r_to_l_IRQ_NUM 0
#define DT_N_S_macros_S_scw_r_to_l_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_scw_r_to_l_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_scw_r_to_l_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_scw_r_to_l_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_scw_r_to_l_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_scw_r_to_l_P_label "&SCW_R_TO_L"
#define DT_N_S_macros_S_scw_r_to_l_P_label_STRING_UNQUOTED &SCW_R_TO_L
#define DT_N_S_macros_S_scw_r_to_l_P_label_STRING_TOKEN _SCW_R_TO_L
#define DT_N_S_macros_S_scw_r_to_l_P_label_STRING_UPPER_TOKEN _SCW_R_TO_L
#define DT_N_S_macros_S_scw_r_to_l_P_label_IDX_0 "&SCW_R_TO_L"
#define DT_N_S_macros_S_scw_r_to_l_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scw_r_to_l, label, 0)
#define DT_N_S_macros_S_scw_r_to_l_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scw_r_to_l, label, 0)
#define DT_N_S_macros_S_scw_r_to_l_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scw_r_to_l, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scw_r_to_l_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scw_r_to_l, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scw_r_to_l_P_label_LEN 1
#define DT_N_S_macros_S_scw_r_to_l_P_label_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_1_VAL_param1 67567695
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_2_VAL_param1 5
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_4_VAL_param1 101122128
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_5_VAL_param1 5
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_7_VAL_param1 134676486
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scw_r_to_l, bindings, 0) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 1) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 2) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 3) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 4) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 5) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 6) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 7)
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scw_r_to_l, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 7)
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scw_r_to_l, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scw_r_to_l, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_r_to_l, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_LEN 8
#define DT_N_S_macros_S_scw_r_to_l_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/tdSelectCoppingRL
 *
 * Node identifier: DT_N_S_behaviors_S_tdselectcoppingrl
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_PATH "/behaviors/tdSelectCoppingRL"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_FULL_NAME "tdSelectCoppingRL"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_ORD 35
#define DT_N_S_behaviors_S_tdselectcoppingrl_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_REQUIRES_ORDS \
	10, /* /behaviors */ \
	33, /* /macros/scl_r_to_l */ \
	34, /* /macros/scw_r_to_l */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_EXISTS 1
#define DT_N_INST_10_zmk_behavior_hold_tap DT_N_S_behaviors_S_tdselectcoppingrl
#define DT_N_NODELABEL_tdselectcoppingrl   DT_N_S_behaviors_S_tdselectcoppingrl

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_REG_NUM 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_RANGES_NUM 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_IRQ_NUM 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_tdselectcoppingrl_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_tdselectcoppingrl_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_IDX_0 DT_N_S_macros_S_scl_r_to_l
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_IDX_0_PH DT_N_S_macros_S_scl_r_to_l
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_IDX_1 DT_N_S_macros_S_scw_r_to_l
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_IDX_1_PH DT_N_S_macros_S_scw_r_to_l
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 0) \
	fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 1)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 1)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_tdselectcoppingrl, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_LEN 2
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_quick_tap_ms 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_global_quick_tap 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor "tap-preferred"
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_STRING_UNQUOTED tap-preferred
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_STRING_TOKEN tap_preferred
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_STRING_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_IDX_0 "tap-preferred"
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_ENUM_IDX 2
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_ENUM_VAL_tap_preferred_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_ENUM_TOKEN tap_preferred
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_ENUM_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_tdselectcoppingrl, flavor, 0)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_tdselectcoppingrl, flavor, 0)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_tdselectcoppingrl, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_tdselectcoppingrl, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_LEN 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_retro_tap 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_tdselectcoppingrl_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /behaviors/sticky_layer
 *
 * Node identifier: DT_N_S_behaviors_S_sticky_layer
 *
 * Binding (compatible = zmk,behavior-sticky-key):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-sticky-key.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_sticky_layer_PATH "/behaviors/sticky_layer"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_sticky_layer_FULL_NAME "sticky_layer"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_sticky_layer_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_sticky_layer_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_sticky_layer_ORD 36
#define DT_N_S_behaviors_S_sticky_layer_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_sticky_layer_REQUIRES_ORDS \
	10, /* /behaviors */ \
	25, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_sticky_layer_SUPPORTS_ORDS \
	37, /* /behaviors/th_kp_sl_hp */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_sticky_layer_EXISTS 1
#define DT_N_INST_1_zmk_behavior_sticky_key DT_N_S_behaviors_S_sticky_layer
#define DT_N_NODELABEL_sl                   DT_N_S_behaviors_S_sticky_layer

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_sticky_layer_REG_NUM 0
#define DT_N_S_behaviors_S_sticky_layer_RANGES_NUM 0
#define DT_N_S_behaviors_S_sticky_layer_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_sticky_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_sticky_layer_COMPAT_MATCHES_zmk_behavior_sticky_key 1
#define DT_N_S_behaviors_S_sticky_layer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_sticky_layer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_COMPAT_MODEL_IDX_0 "behavior-sticky-key"
#define DT_N_S_behaviors_S_sticky_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_sticky_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_IDX_0 DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_sticky_layer, bindings, 0)
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_sticky_layer, bindings, 0)
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_sticky_layer, bindings, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_sticky_layer, bindings, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_LEN 1
#define DT_N_S_behaviors_S_sticky_layer_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_P_release_after_ms 1000
#define DT_N_S_behaviors_S_sticky_layer_P_release_after_ms_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_P_quick_release 1
#define DT_N_S_behaviors_S_sticky_layer_P_quick_release_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_P_lazy 0
#define DT_N_S_behaviors_S_sticky_layer_P_lazy_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_P_ignore_modifiers 0
#define DT_N_S_behaviors_S_sticky_layer_P_ignore_modifiers_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_P_display_name "Sticky Layer"
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_STRING_UNQUOTED Sticky Layer
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_STRING_TOKEN Sticky_Layer
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_STRING_UPPER_TOKEN STICKY_LAYER
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_IDX_0 "Sticky Layer"
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_sticky_layer, display_name, 0)
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_sticky_layer, display_name, 0)
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_sticky_layer, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_sticky_layer, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_LEN 1
#define DT_N_S_behaviors_S_sticky_layer_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/th_kp_sl_hp
 *
 * Node identifier: DT_N_S_behaviors_S_th_kp_sl_hp
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_PATH "/behaviors/th_kp_sl_hp"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_FULL_NAME "th_kp_sl_hp"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_ORD 37
#define DT_N_S_behaviors_S_th_kp_sl_hp_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	36, /* /behaviors/sticky_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_EXISTS 1
#define DT_N_INST_7_zmk_behavior_hold_tap DT_N_S_behaviors_S_th_kp_sl_hp
#define DT_N_NODELABEL_th_kp_sl_hp        DT_N_S_behaviors_S_th_kp_sl_hp

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_REG_NUM 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_RANGES_NUM 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_IRQ_NUM 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_th_kp_sl_hp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_th_kp_sl_hp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_IDX_0 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_IDX_1 DT_N_S_behaviors_S_sticky_layer
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_IDX_1_PH DT_N_S_behaviors_S_sticky_layer
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 0) \
	fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 1)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 1)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_th_kp_sl_hp, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_LEN 2
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_quick_tap_ms -1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_global_quick_tap 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor "hold-preferred"
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_STRING_UNQUOTED hold-preferred
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_STRING_TOKEN hold_preferred
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_STRING_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_IDX_0 "hold-preferred"
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_ENUM_IDX 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_ENUM_VAL_hold_preferred_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_ENUM_TOKEN hold_preferred
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_ENUM_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_th_kp_sl_hp, flavor, 0)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_th_kp_sl_hp, flavor, 0)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_th_kp_sl_hp, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_th_kp_sl_hp, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_LEN 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_retro_tap 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_th_kp_sl_hp_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /behaviors/th_mo_kp_hp
 *
 * Node identifier: DT_N_S_behaviors_S_th_mo_kp_hp
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_PATH "/behaviors/th_mo_kp_hp"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_FULL_NAME "th_mo_kp_hp"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_ORD 38
#define DT_N_S_behaviors_S_th_mo_kp_hp_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_EXISTS 1
#define DT_N_INST_3_zmk_behavior_hold_tap DT_N_S_behaviors_S_th_mo_kp_hp
#define DT_N_NODELABEL_th_mo_kp_hp        DT_N_S_behaviors_S_th_mo_kp_hp

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_REG_NUM 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_RANGES_NUM 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_IRQ_NUM 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_th_mo_kp_hp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_th_mo_kp_hp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_IDX_0 DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 0) \
	fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 1)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 1)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_th_mo_kp_hp, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_LEN 2
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_tapping_term_ms 220
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_quick_tap_ms 190
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_global_quick_tap 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor "hold-preferred"
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_STRING_UNQUOTED hold-preferred
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_STRING_TOKEN hold_preferred
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_STRING_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_IDX_0 "hold-preferred"
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_ENUM_IDX 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_ENUM_VAL_hold_preferred_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_ENUM_TOKEN hold_preferred
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_ENUM_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_th_mo_kp_hp, flavor, 0)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_th_mo_kp_hp, flavor, 0)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_th_mo_kp_hp, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_th_mo_kp_hp, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_LEN 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_retro_tap 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_on_release 1
#define DT_N_S_behaviors_S_th_mo_kp_hp_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /combos
 *
 * Node identifier: DT_N_S_combos
 *
 * Binding (compatible = zmk,combos):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/zmk,combos.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_PATH "/combos"

/* Node's name with unit-address: */
#define DT_N_S_combos_FULL_NAME "combos"

/* Node parent (/) identifier: */
#define DT_N_S_combos_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_FOREACH_CHILD(fn) fn(DT_N_S_combos_S_combo_comb_wf) fn(DT_N_S_combos_S_combo_comb_fp) fn(DT_N_S_combos_S_combo_comb_pb) fn(DT_N_S_combos_S_combo_comb_pb_2) fn(DT_N_S_combos_S_combo_comb_tg_2) fn(DT_N_S_combos_S_combo_comb_tg) fn(DT_N_S_combos_S_combo_comb_cd) fn(DT_N_S_combos_S_combo_comb_xc) fn(DT_N_S_combos_S_combo_comb_gv) fn(DT_N_S_combos_S_combo_comb_td) fn(DT_N_S_combos_S_combo_comb_sc) fn(DT_N_S_combos_S_combo_comb_rx) fn(DT_N_S_combos_S_combo_comb_az) fn(DT_N_S_combos_S_combo_requal) fn(DT_N_S_combos_S_combo_rsemi) fn(DT_N_S_combos_S_combo_semi) fn(DT_N_S_combos_S_combo_colon) fn(DT_N_S_combos_S_combo_fslh) fn(DT_N_S_combos_S_combo_num1) fn(DT_N_S_combos_S_combo_num2) fn(DT_N_S_combos_S_combo_num3) fn(DT_N_S_combos_S_combo_num4) fn(DT_N_S_combos_S_combo_num5) fn(DT_N_S_combos_S_combo_num6) fn(DT_N_S_combos_S_combo_num7) fn(DT_N_S_combos_S_combo_num8) fn(DT_N_S_combos_S_combo_num9) fn(DT_N_S_combos_S_combo_num0) fn(DT_N_S_combos_S_combo_pg_0) fn(DT_N_S_combos_S_combo_pg_1) fn(DT_N_S_combos_S_combo_pg_4) fn(DT_N_S_combos_S_combo_pg_5) fn(DT_N_S_combos_S_comboinv_pg_0_inv) fn(DT_N_S_combos_S_comboinv_pg_1_inv) fn(DT_N_S_combos_S_comboinv_pg_4_inv) fn(DT_N_S_combos_S_comboinv_pg_5_inv) fn(DT_N_S_combos_S_combo_adj_tog_on) fn(DT_N_S_combos_S_combo_adj_tog_off) fn(DT_N_S_combos_S_c_hr_thumb_ar) fn(DT_N_S_combos_S_c_hr_thumb_ars) fn(DT_N_S_combos_S_c_hr_thumb_arst) fn(DT_N_S_combos_S_c_hr_thumb_art) fn(DT_N_S_combos_S_c_hr_thumb_ast) fn(DT_N_S_combos_S_c_hr_thumb_rst) fn(DT_N_S_combos_S_c_hr_thumb_at) fn(DT_N_S_combos_S_c_hr_thumb_st) fn(DT_N_S_combos_S_c_hr_thumb_rs) fn(DT_N_S_combos_S_c_hr_thumb_rt) fn(DT_N_S_combos_S_c_hr_thumb_as) fn(DT_N_S_combos_S_cbks_0) fn(DT_N_S_combos_S_cbkl_2) fn(DT_N_S_combos_S_cbkl_3) fn(DT_N_S_combos_S_cbkl_4) fn(DT_N_S_combos_S_cbks_7) fn(DT_N_S_combos_S_cbks_10) fn(DT_N_S_combos_S_cbknum_11) fn(DT_N_S_combos_S_cbknum_12) fn(DT_N_S_combos_S_cbknum_13) fn(DT_N_S_combos_S_cbknum_14) fn(DT_N_S_combos_S_cbks_16) fn(DT_N_S_combos_S_cbks_17) fn(DT_N_S_combos_S_cbks_18) fn(DT_N_S_combos_S_cbks_19) fn(DT_N_S_combos_S_cbknum_22) fn(DT_N_S_combos_S_cbknum_23) fn(DT_N_S_combos_S_cbknum_24) fn(DT_N_S_combos_S_cbknum_25) fn(DT_N_S_combos_S_cbks_30) fn(DT_N_S_combos_S_ctab_0) fn(DT_N_S_combos_S_ctab_1) fn(DT_N_S_combos_S_ctab_2) fn(DT_N_S_combos_S_ctab_3) fn(DT_N_S_combos_S_ctab_4) fn(DT_N_S_combos_S_ctab_5) fn(DT_N_S_combos_S_ctab_6) fn(DT_N_S_combos_S_ctab_7) fn(DT_N_S_combos_S_ctab_8) fn(DT_N_S_combos_S_ctab_9) fn(DT_N_S_combos_S_ctabd_10) fn(DT_N_S_combos_S_ctabd_11) fn(DT_N_S_combos_S_ctabd_12) fn(DT_N_S_combos_S_ctabd_13) fn(DT_N_S_combos_S_ctabd_14) fn(DT_N_S_combos_S_ctabda_21) fn(DT_N_S_combos_S_ctabda_22) fn(DT_N_S_combos_S_ctabda_23) fn(DT_N_S_combos_S_ctabda_24) fn(DT_N_S_combos_S_ctabda_25) fn(DT_N_S_combos_S_cent_0) fn(DT_N_S_combos_S_cent_1) fn(DT_N_S_combos_S_cent_2) fn(DT_N_S_combos_S_cent_3) fn(DT_N_S_combos_S_cent_4) fn(DT_N_S_combos_S_cent_5) fn(DT_N_S_combos_S_cent_6) fn(DT_N_S_combos_S_cent_7) fn(DT_N_S_combos_S_cent_8) fn(DT_N_S_combos_S_cent_9) fn(DT_N_S_combos_S_cent_10) fn(DT_N_S_combos_S_cent_11) fn(DT_N_S_combos_S_cent_12) fn(DT_N_S_combos_S_cent_13) fn(DT_N_S_combos_S_cent_14) fn(DT_N_S_combos_S_cent_15) fn(DT_N_S_combos_S_cent_16) fn(DT_N_S_combos_S_cent_17) fn(DT_N_S_combos_S_cent_18) fn(DT_N_S_combos_S_cent_19) fn(DT_N_S_combos_S_cent_21) fn(DT_N_S_combos_S_cent_22) fn(DT_N_S_combos_S_cent_23) fn(DT_N_S_combos_S_cent_24) fn(DT_N_S_combos_S_cent_25) fn(DT_N_S_combos_S_cent_26) fn(DT_N_S_combos_S_cent_27) fn(DT_N_S_combos_S_cent_28) fn(DT_N_S_combos_S_cent_29) fn(DT_N_S_combos_S_cent_30)
#define DT_N_S_combos_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_wf) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_fp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_cd) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_xc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_gv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_td) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_sc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_az) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_requal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_rsemi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_semi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_colon) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_fslh) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_0_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_1_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_4_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_5_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ar) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ars) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_arst) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_art) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ast) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rst) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_at) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_st) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_as) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_30)
#define DT_N_S_combos_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_wf, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_fp, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_cd, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_xc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_gv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_td, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_sc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_rx, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_az, __VA_ARGS__) fn(DT_N_S_combos_S_combo_requal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_rsemi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_semi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_colon, __VA_ARGS__) fn(DT_N_S_combos_S_combo_fslh, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num3, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num5, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num6, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num7, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num8, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num9, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_5, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_0_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_1_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_4_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_5_inv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_off, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ar, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ars, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_arst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_art, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ast, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_at, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_st, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rs, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rt, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_as, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_0, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_2, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_3, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_4, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_7, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_10, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_11, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_12, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_13, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_14, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_16, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_17, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_18, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_19, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_22, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_23, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_24, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_25, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_30, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_0, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_1, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_2, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_3, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_4, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_5, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_6, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_7, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_8, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_9, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_10, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_11, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_12, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_13, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_14, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_21, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_22, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_23, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_24, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_0, __VA_ARGS__) fn(DT_N_S_combos_S_cent_1, __VA_ARGS__) fn(DT_N_S_combos_S_cent_2, __VA_ARGS__) fn(DT_N_S_combos_S_cent_3, __VA_ARGS__) fn(DT_N_S_combos_S_cent_4, __VA_ARGS__) fn(DT_N_S_combos_S_cent_5, __VA_ARGS__) fn(DT_N_S_combos_S_cent_6, __VA_ARGS__) fn(DT_N_S_combos_S_cent_7, __VA_ARGS__) fn(DT_N_S_combos_S_cent_8, __VA_ARGS__) fn(DT_N_S_combos_S_cent_9, __VA_ARGS__) fn(DT_N_S_combos_S_cent_10, __VA_ARGS__) fn(DT_N_S_combos_S_cent_11, __VA_ARGS__) fn(DT_N_S_combos_S_cent_12, __VA_ARGS__) fn(DT_N_S_combos_S_cent_13, __VA_ARGS__) fn(DT_N_S_combos_S_cent_14, __VA_ARGS__) fn(DT_N_S_combos_S_cent_15, __VA_ARGS__) fn(DT_N_S_combos_S_cent_16, __VA_ARGS__) fn(DT_N_S_combos_S_cent_17, __VA_ARGS__) fn(DT_N_S_combos_S_cent_18, __VA_ARGS__) fn(DT_N_S_combos_S_cent_19, __VA_ARGS__) fn(DT_N_S_combos_S_cent_21, __VA_ARGS__) fn(DT_N_S_combos_S_cent_22, __VA_ARGS__) fn(DT_N_S_combos_S_cent_23, __VA_ARGS__) fn(DT_N_S_combos_S_cent_24, __VA_ARGS__) fn(DT_N_S_combos_S_cent_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_26, __VA_ARGS__) fn(DT_N_S_combos_S_cent_27, __VA_ARGS__) fn(DT_N_S_combos_S_cent_28, __VA_ARGS__) fn(DT_N_S_combos_S_cent_29, __VA_ARGS__) fn(DT_N_S_combos_S_cent_30, __VA_ARGS__)
#define DT_N_S_combos_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_wf, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_fp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_cd, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_xc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_gv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_td, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_sc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_az, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_requal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_rsemi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_semi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_colon, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_fslh, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_0_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_1_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_4_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_5_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ar, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ars, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_arst, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_art, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ast, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rst, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_at, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_st, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_as, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_30, __VA_ARGS__)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_combos_S_combo_comb_wf) fn(DT_N_S_combos_S_combo_comb_fp) fn(DT_N_S_combos_S_combo_comb_pb) fn(DT_N_S_combos_S_combo_comb_pb_2) fn(DT_N_S_combos_S_combo_comb_tg_2) fn(DT_N_S_combos_S_combo_comb_tg) fn(DT_N_S_combos_S_combo_comb_cd) fn(DT_N_S_combos_S_combo_comb_xc) fn(DT_N_S_combos_S_combo_comb_gv) fn(DT_N_S_combos_S_combo_comb_td) fn(DT_N_S_combos_S_combo_comb_sc) fn(DT_N_S_combos_S_combo_comb_rx) fn(DT_N_S_combos_S_combo_comb_az) fn(DT_N_S_combos_S_combo_requal) fn(DT_N_S_combos_S_combo_rsemi) fn(DT_N_S_combos_S_combo_semi) fn(DT_N_S_combos_S_combo_colon) fn(DT_N_S_combos_S_combo_fslh) fn(DT_N_S_combos_S_combo_num1) fn(DT_N_S_combos_S_combo_num2) fn(DT_N_S_combos_S_combo_num3) fn(DT_N_S_combos_S_combo_num4) fn(DT_N_S_combos_S_combo_num5) fn(DT_N_S_combos_S_combo_num6) fn(DT_N_S_combos_S_combo_num7) fn(DT_N_S_combos_S_combo_num8) fn(DT_N_S_combos_S_combo_num9) fn(DT_N_S_combos_S_combo_num0) fn(DT_N_S_combos_S_combo_pg_0) fn(DT_N_S_combos_S_combo_pg_1) fn(DT_N_S_combos_S_combo_pg_4) fn(DT_N_S_combos_S_combo_pg_5) fn(DT_N_S_combos_S_comboinv_pg_0_inv) fn(DT_N_S_combos_S_comboinv_pg_1_inv) fn(DT_N_S_combos_S_comboinv_pg_4_inv) fn(DT_N_S_combos_S_comboinv_pg_5_inv) fn(DT_N_S_combos_S_combo_adj_tog_on) fn(DT_N_S_combos_S_combo_adj_tog_off) fn(DT_N_S_combos_S_c_hr_thumb_ar) fn(DT_N_S_combos_S_c_hr_thumb_ars) fn(DT_N_S_combos_S_c_hr_thumb_arst) fn(DT_N_S_combos_S_c_hr_thumb_art) fn(DT_N_S_combos_S_c_hr_thumb_ast) fn(DT_N_S_combos_S_c_hr_thumb_rst) fn(DT_N_S_combos_S_c_hr_thumb_at) fn(DT_N_S_combos_S_c_hr_thumb_st) fn(DT_N_S_combos_S_c_hr_thumb_rs) fn(DT_N_S_combos_S_c_hr_thumb_rt) fn(DT_N_S_combos_S_c_hr_thumb_as) fn(DT_N_S_combos_S_cbks_0) fn(DT_N_S_combos_S_cbkl_2) fn(DT_N_S_combos_S_cbkl_3) fn(DT_N_S_combos_S_cbkl_4) fn(DT_N_S_combos_S_cbks_7) fn(DT_N_S_combos_S_cbks_10) fn(DT_N_S_combos_S_cbknum_11) fn(DT_N_S_combos_S_cbknum_12) fn(DT_N_S_combos_S_cbknum_13) fn(DT_N_S_combos_S_cbknum_14) fn(DT_N_S_combos_S_cbks_16) fn(DT_N_S_combos_S_cbks_17) fn(DT_N_S_combos_S_cbks_18) fn(DT_N_S_combos_S_cbks_19) fn(DT_N_S_combos_S_cbknum_22) fn(DT_N_S_combos_S_cbknum_23) fn(DT_N_S_combos_S_cbknum_24) fn(DT_N_S_combos_S_cbknum_25) fn(DT_N_S_combos_S_cbks_30) fn(DT_N_S_combos_S_ctab_0) fn(DT_N_S_combos_S_ctab_1) fn(DT_N_S_combos_S_ctab_2) fn(DT_N_S_combos_S_ctab_3) fn(DT_N_S_combos_S_ctab_4) fn(DT_N_S_combos_S_ctab_5) fn(DT_N_S_combos_S_ctab_6) fn(DT_N_S_combos_S_ctab_7) fn(DT_N_S_combos_S_ctab_8) fn(DT_N_S_combos_S_ctab_9) fn(DT_N_S_combos_S_ctabd_10) fn(DT_N_S_combos_S_ctabd_11) fn(DT_N_S_combos_S_ctabd_12) fn(DT_N_S_combos_S_ctabd_13) fn(DT_N_S_combos_S_ctabd_14) fn(DT_N_S_combos_S_ctabda_21) fn(DT_N_S_combos_S_ctabda_22) fn(DT_N_S_combos_S_ctabda_23) fn(DT_N_S_combos_S_ctabda_24) fn(DT_N_S_combos_S_ctabda_25) fn(DT_N_S_combos_S_cent_0) fn(DT_N_S_combos_S_cent_1) fn(DT_N_S_combos_S_cent_2) fn(DT_N_S_combos_S_cent_3) fn(DT_N_S_combos_S_cent_4) fn(DT_N_S_combos_S_cent_5) fn(DT_N_S_combos_S_cent_6) fn(DT_N_S_combos_S_cent_7) fn(DT_N_S_combos_S_cent_8) fn(DT_N_S_combos_S_cent_9) fn(DT_N_S_combos_S_cent_10) fn(DT_N_S_combos_S_cent_11) fn(DT_N_S_combos_S_cent_12) fn(DT_N_S_combos_S_cent_13) fn(DT_N_S_combos_S_cent_14) fn(DT_N_S_combos_S_cent_15) fn(DT_N_S_combos_S_cent_16) fn(DT_N_S_combos_S_cent_17) fn(DT_N_S_combos_S_cent_18) fn(DT_N_S_combos_S_cent_19) fn(DT_N_S_combos_S_cent_21) fn(DT_N_S_combos_S_cent_22) fn(DT_N_S_combos_S_cent_23) fn(DT_N_S_combos_S_cent_24) fn(DT_N_S_combos_S_cent_25) fn(DT_N_S_combos_S_cent_26) fn(DT_N_S_combos_S_cent_27) fn(DT_N_S_combos_S_cent_28) fn(DT_N_S_combos_S_cent_29) fn(DT_N_S_combos_S_cent_30)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_wf) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_fp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_cd) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_xc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_gv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_td) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_sc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_az) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_requal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_rsemi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_semi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_colon) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_fslh) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_0_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_1_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_4_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_5_inv) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_on) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_off) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ar) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ars) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_arst) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_art) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ast) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rst) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_at) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_st) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_as) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_30)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_wf, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_fp, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_cd, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_xc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_gv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_td, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_sc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_rx, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_az, __VA_ARGS__) fn(DT_N_S_combos_S_combo_requal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_rsemi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_semi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_colon, __VA_ARGS__) fn(DT_N_S_combos_S_combo_fslh, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num3, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num5, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num6, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num7, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num8, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num9, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_5, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_0_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_1_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_4_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_5_inv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_off, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ar, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ars, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_arst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_art, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ast, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_at, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_st, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rs, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rt, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_as, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_0, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_2, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_3, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_4, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_7, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_10, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_11, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_12, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_13, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_14, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_16, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_17, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_18, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_19, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_22, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_23, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_24, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_25, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_30, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_0, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_1, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_2, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_3, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_4, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_5, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_6, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_7, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_8, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_9, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_10, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_11, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_12, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_13, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_14, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_21, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_22, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_23, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_24, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_0, __VA_ARGS__) fn(DT_N_S_combos_S_cent_1, __VA_ARGS__) fn(DT_N_S_combos_S_cent_2, __VA_ARGS__) fn(DT_N_S_combos_S_cent_3, __VA_ARGS__) fn(DT_N_S_combos_S_cent_4, __VA_ARGS__) fn(DT_N_S_combos_S_cent_5, __VA_ARGS__) fn(DT_N_S_combos_S_cent_6, __VA_ARGS__) fn(DT_N_S_combos_S_cent_7, __VA_ARGS__) fn(DT_N_S_combos_S_cent_8, __VA_ARGS__) fn(DT_N_S_combos_S_cent_9, __VA_ARGS__) fn(DT_N_S_combos_S_cent_10, __VA_ARGS__) fn(DT_N_S_combos_S_cent_11, __VA_ARGS__) fn(DT_N_S_combos_S_cent_12, __VA_ARGS__) fn(DT_N_S_combos_S_cent_13, __VA_ARGS__) fn(DT_N_S_combos_S_cent_14, __VA_ARGS__) fn(DT_N_S_combos_S_cent_15, __VA_ARGS__) fn(DT_N_S_combos_S_cent_16, __VA_ARGS__) fn(DT_N_S_combos_S_cent_17, __VA_ARGS__) fn(DT_N_S_combos_S_cent_18, __VA_ARGS__) fn(DT_N_S_combos_S_cent_19, __VA_ARGS__) fn(DT_N_S_combos_S_cent_21, __VA_ARGS__) fn(DT_N_S_combos_S_cent_22, __VA_ARGS__) fn(DT_N_S_combos_S_cent_23, __VA_ARGS__) fn(DT_N_S_combos_S_cent_24, __VA_ARGS__) fn(DT_N_S_combos_S_cent_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_26, __VA_ARGS__) fn(DT_N_S_combos_S_cent_27, __VA_ARGS__) fn(DT_N_S_combos_S_cent_28, __VA_ARGS__) fn(DT_N_S_combos_S_cent_29, __VA_ARGS__) fn(DT_N_S_combos_S_cent_30, __VA_ARGS__)
#define DT_N_S_combos_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_wf, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_fp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_pb_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_tg, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_cd, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_xc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_gv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_td, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_sc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_comb_az, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_requal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_rsemi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_semi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_colon, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_fslh, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_num0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_pg_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_0_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_1_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_4_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_comboinv_pg_5_inv, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_on, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_combo_adj_tog_off, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ar, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ars, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_arst, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_art, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_ast, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rst, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_at, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_st, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_rt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_c_hr_thumb_as, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbkl_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbknum_25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cbks_30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctab_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabd_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_ctabda_25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_combos_S_cent_30, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_combos_ORD 39
#define DT_N_S_combos_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_SUPPORTS_ORDS \
	40, /* /combos/c-hr-thumb-ar */ \
	41, /* /combos/c-hr-thumb-ars */ \
	42, /* /combos/c-hr-thumb-arst */ \
	43, /* /combos/c-hr-thumb-art */ \
	44, /* /combos/c-hr-thumb-as */ \
	45, /* /combos/c-hr-thumb-ast */ \
	46, /* /combos/c-hr-thumb-at */ \
	47, /* /combos/c-hr-thumb-rs */ \
	48, /* /combos/c-hr-thumb-rst */ \
	49, /* /combos/c-hr-thumb-rt */ \
	50, /* /combos/c-hr-thumb-st */ \
	51, /* /combos/cbkl_2 */ \
	52, /* /combos/cbkl_3 */ \
	53, /* /combos/cbkl_4 */ \
	54, /* /combos/cbknum_11 */ \
	55, /* /combos/cbknum_12 */ \
	56, /* /combos/cbknum_13 */ \
	57, /* /combos/cbknum_14 */ \
	58, /* /combos/cbknum_22 */ \
	59, /* /combos/cbknum_23 */ \
	60, /* /combos/cbknum_24 */ \
	61, /* /combos/cbknum_25 */ \
	62, /* /combos/cbks_0 */ \
	65, /* /combos/cbks_10 */ \
	68, /* /combos/cbks_16 */ \
	69, /* /combos/cbks_17 */ \
	70, /* /combos/cbks_18 */ \
	71, /* /combos/cbks_19 */ \
	72, /* /combos/cbks_30 */ \
	73, /* /combos/cbks_7 */ \
	74, /* /combos/cent_0 */ \
	75, /* /combos/cent_1 */ \
	76, /* /combos/cent_10 */ \
	77, /* /combos/cent_11 */ \
	78, /* /combos/cent_12 */ \
	79, /* /combos/cent_13 */ \
	80, /* /combos/cent_14 */ \
	81, /* /combos/cent_15 */ \
	82, /* /combos/cent_16 */ \
	83, /* /combos/cent_17 */ \
	84, /* /combos/cent_18 */ \
	85, /* /combos/cent_19 */ \
	86, /* /combos/cent_2 */ \
	87, /* /combos/cent_21 */ \
	88, /* /combos/cent_22 */ \
	89, /* /combos/cent_23 */ \
	90, /* /combos/cent_24 */ \
	91, /* /combos/cent_25 */ \
	92, /* /combos/cent_26 */ \
	93, /* /combos/cent_27 */ \
	94, /* /combos/cent_28 */ \
	95, /* /combos/cent_29 */ \
	96, /* /combos/cent_3 */ \
	97, /* /combos/cent_30 */ \
	98, /* /combos/cent_4 */ \
	99, /* /combos/cent_5 */ \
	100, /* /combos/cent_6 */ \
	101, /* /combos/cent_7 */ \
	102, /* /combos/cent_8 */ \
	103, /* /combos/cent_9 */ \
	104, /* /combos/combo_COLON */ \
	105, /* /combos/combo_FSLH */ \
	106, /* /combos/combo_NUM0 */ \
	107, /* /combos/combo_NUM1 */ \
	108, /* /combos/combo_NUM2 */ \
	109, /* /combos/combo_NUM3 */ \
	110, /* /combos/combo_NUM4 */ \
	111, /* /combos/combo_NUM5 */ \
	112, /* /combos/combo_NUM6 */ \
	113, /* /combos/combo_NUM7 */ \
	114, /* /combos/combo_NUM8 */ \
	115, /* /combos/combo_NUM9 */ \
	116, /* /combos/combo_SEMI */ \
	118, /* /combos/combo_adj_tog_off */ \
	120, /* /combos/combo_adj_tog_on */ \
	121, /* /combos/combo_comb_az */ \
	122, /* /combos/combo_comb_cd */ \
	123, /* /combos/combo_comb_fp */ \
	124, /* /combos/combo_comb_gv */ \
	125, /* /combos/combo_comb_pb */ \
	126, /* /combos/combo_comb_pb_2 */ \
	127, /* /combos/combo_comb_rx */ \
	128, /* /combos/combo_comb_sc */ \
	129, /* /combos/combo_comb_td */ \
	130, /* /combos/combo_comb_tg */ \
	131, /* /combos/combo_comb_tg_2 */ \
	132, /* /combos/combo_comb_wf */ \
	133, /* /combos/combo_comb_xc */ \
	134, /* /combos/combo_pg_0 */ \
	135, /* /combos/combo_pg_1 */ \
	136, /* /combos/combo_pg_4 */ \
	137, /* /combos/combo_pg_5 */ \
	138, /* /combos/combo_requal */ \
	139, /* /combos/combo_rsemi */ \
	140, /* /combos/comboinv_pg_0_inv */ \
	141, /* /combos/comboinv_pg_1_inv */ \
	142, /* /combos/comboinv_pg_4_inv */ \
	143, /* /combos/comboinv_pg_5_inv */ \
	144, /* /combos/ctab_0 */ \
	145, /* /combos/ctab_1 */ \
	146, /* /combos/ctab_2 */ \
	147, /* /combos/ctab_3 */ \
	148, /* /combos/ctab_4 */ \
	149, /* /combos/ctab_5 */ \
	150, /* /combos/ctab_6 */ \
	151, /* /combos/ctab_7 */ \
	152, /* /combos/ctab_8 */ \
	153, /* /combos/ctab_9 */ \
	158, /* /combos/ctabd_10 */ \
	159, /* /combos/ctabd_11 */ \
	160, /* /combos/ctabd_12 */ \
	161, /* /combos/ctabd_13 */ \
	162, /* /combos/ctabd_14 */ \
	165, /* /combos/ctabda_21 */ \
	168, /* /combos/ctabda_22 */ \
	170, /* /combos/ctabda_23 */ \
	171, /* /combos/ctabda_24 */ \
	172, /* /combos/ctabda_25 */

/* Existence and alternate IDs: */
#define DT_N_S_combos_EXISTS 1
#define DT_N_INST_0_zmk_combos DT_N_S_combos

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_REG_NUM 0
#define DT_N_S_combos_RANGES_NUM 0
#define DT_N_S_combos_FOREACH_RANGE(fn) 
#define DT_N_S_combos_IRQ_NUM 0
#define DT_N_S_combos_COMPAT_MATCHES_zmk_combos 1
#define DT_N_S_combos_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_combos_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_combos_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_combos_COMPAT_MODEL_IDX_0 "combos"
#define DT_N_S_combos_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_P_compatible {"zmk,combos"}
#define DT_N_S_combos_P_compatible_IDX_0 "zmk,combos"
#define DT_N_S_combos_P_compatible_IDX_0_STRING_UNQUOTED zmk,combos
#define DT_N_S_combos_P_compatible_IDX_0_STRING_TOKEN zmk_combos
#define DT_N_S_combos_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_COMBOS
#define DT_N_S_combos_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos, compatible, 0)
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos, compatible, 0)
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos, compatible, 0, __VA_ARGS__)
#define DT_N_S_combos_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos, compatible, 0, __VA_ARGS__)
#define DT_N_S_combos_P_compatible_LEN 1
#define DT_N_S_combos_P_compatible_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-ar
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_ar
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_ar_PATH "/combos/c-hr-thumb-ar"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_ar_FULL_NAME "c-hr-thumb-ar"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_ar_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_ar_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_ar_ORD 40
#define DT_N_S_combos_S_c_hr_thumb_ar_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_ar_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_ar_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_ar_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_ar_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ar_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ar_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ar_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ar_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_ar_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_IDX_0_VAL_param1 34013408
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ar, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ar, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ar, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ar, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions {34 /* 0x22 */, 10 /* 0xa */, 11 /* 0xb */}
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_IDX_2 11
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ar, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_LEN 3
#define DT_N_S_combos_S_c_hr_thumb_ar_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_ar_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ar, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ar, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ar, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ar, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_ar_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-ars
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_ars
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_ars_PATH "/combos/c-hr-thumb-ars"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_ars_FULL_NAME "c-hr-thumb-ars"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_ars_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_ars_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_ars_ORD 41
#define DT_N_S_combos_S_c_hr_thumb_ars_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_ars_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_ars_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_ars_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_ars_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ars_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ars_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ars_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ars_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_ars_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_IDX_0_VAL_param1 101122272
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ars, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ars, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ars, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ars, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions {34 /* 0x22 */, 10 /* 0xa */, 11 /* 0xb */, 12 /* 0xc */}
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_2 11
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_3 12
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_IDX_3_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 2) \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ars, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_LEN 4
#define DT_N_S_combos_S_c_hr_thumb_ars_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_ars_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ars, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ars, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ars, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ars, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_ars_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-arst
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_arst
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_arst_PATH "/combos/c-hr-thumb-arst"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_arst_FULL_NAME "c-hr-thumb-arst"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_arst_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_arst_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_arst_ORD 42
#define DT_N_S_combos_S_c_hr_thumb_arst_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_arst_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_arst_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_arst_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_arst_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_arst_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_arst_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_arst_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_arst_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_arst_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_IDX_0_VAL_param1 235340000
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_arst, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_arst, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_arst, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_arst, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions {34 /* 0x22 */, 10 /* 0xa */, 11 /* 0xb */, 12 /* 0xc */, 13 /* 0xd */}
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_2 11
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_3 12
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_3_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_4 13
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_IDX_4_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 2) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 3) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 4)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 4)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 4, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_arst, key_positions, 4, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_LEN 5
#define DT_N_S_combos_S_c_hr_thumb_arst_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_arst_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_arst, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_arst, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_arst, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_arst, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_arst_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-art
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_art
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_art_PATH "/combos/c-hr-thumb-art"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_art_FULL_NAME "c-hr-thumb-art"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_art_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_art_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_art_ORD 43
#define DT_N_S_combos_S_c_hr_thumb_art_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_art_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_art_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_art_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_art_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_art_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_art_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_art_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_art_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_art_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_IDX_0_VAL_param1 50790627
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_art, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_art, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_art, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_art, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions {34 /* 0x22 */, 10 /* 0xa */, 11 /* 0xb */, 13 /* 0xd */}
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_2 11
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_3 13
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_IDX_3_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 2) \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_art, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_LEN 4
#define DT_N_S_combos_S_c_hr_thumb_art_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_art_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_art_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_art, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_art, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_art, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_art, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_art_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-as
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_as
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_as_PATH "/combos/c-hr-thumb-as"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_as_FULL_NAME "c-hr-thumb-as"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_as_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_as_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_as_ORD 44
#define DT_N_S_combos_S_c_hr_thumb_as_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_as_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_as_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_as_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_as_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_as_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_as_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_as_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_as_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_as_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_IDX_0_VAL_param1 34013410
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_as, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_as, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_as, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_as, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions {34 /* 0x22 */, 10 /* 0xa */, 12 /* 0xc */}
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_IDX_2 12
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_as, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_LEN 3
#define DT_N_S_combos_S_c_hr_thumb_as_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_as_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_as_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_as, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_as, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_as, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_as, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_as_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-ast
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_ast
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_ast_PATH "/combos/c-hr-thumb-ast"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_ast_FULL_NAME "c-hr-thumb-ast"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_ast_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_ast_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_ast_ORD 45
#define DT_N_S_combos_S_c_hr_thumb_ast_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_ast_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_ast_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_ast_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_ast_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ast_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ast_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_ast_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_ast_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_ast_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_IDX_0_VAL_param1 101122275
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ast, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ast, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ast, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ast, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions {34 /* 0x22 */, 10 /* 0xa */, 13 /* 0xd */, 12 /* 0xc */}
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_2 13
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_3 12
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_IDX_3_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 2) \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_ast, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_LEN 4
#define DT_N_S_combos_S_c_hr_thumb_ast_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_ast_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_ast, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_ast, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_ast, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_ast, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_ast_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-at
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_at
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_at_PATH "/combos/c-hr-thumb-at"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_at_FULL_NAME "c-hr-thumb-at"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_at_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_at_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_at_ORD 46
#define DT_N_S_combos_S_c_hr_thumb_at_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_at_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_at_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_at_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_at_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_at_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_at_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_at_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_at_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_at_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_IDX_0_VAL_param1 34013411
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_at, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_at, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_at, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_at, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions {34 /* 0x22 */, 13 /* 0xd */, 10 /* 0xa */}
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_IDX_1 13
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_IDX_2 10
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_at, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_LEN 3
#define DT_N_S_combos_S_c_hr_thumb_at_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_at_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_at_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_at, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_at, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_at, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_at, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_at_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-rs
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_rs
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_rs_PATH "/combos/c-hr-thumb-rs"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_rs_FULL_NAME "c-hr-thumb-rs"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_rs_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_rs_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_rs_ORD 47
#define DT_N_S_combos_S_c_hr_thumb_rs_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_rs_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_rs_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_rs_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_rs_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rs_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rs_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rs_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rs_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_rs_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_IDX_0_VAL_param1 17236194
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rs, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rs, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rs, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rs, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions {34 /* 0x22 */, 12 /* 0xc */, 11 /* 0xb */}
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_IDX_1 12
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_IDX_2 11
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rs, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_LEN 3
#define DT_N_S_combos_S_c_hr_thumb_rs_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_rs_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rs, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rs, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rs, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rs, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_rs_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-rst
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_rst
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_rst_PATH "/combos/c-hr-thumb-rst"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_rst_FULL_NAME "c-hr-thumb-rst"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_rst_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_rst_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_rst_ORD 48
#define DT_N_S_combos_S_c_hr_thumb_rst_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_rst_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_rst_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_rst_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_rst_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rst_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rst_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rst_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rst_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_rst_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_IDX_0_VAL_param1 84345059
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rst, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rst, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rst, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rst, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions {34 /* 0x22 */, 13 /* 0xd */, 12 /* 0xc */, 11 /* 0xb */}
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_1 13
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_2 12
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_3 11
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_IDX_3_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 2) \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 3)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rst, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_LEN 4
#define DT_N_S_combos_S_c_hr_thumb_rst_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_rst_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rst, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rst, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rst, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rst, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_rst_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-rt
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_rt
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_rt_PATH "/combos/c-hr-thumb-rt"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_rt_FULL_NAME "c-hr-thumb-rt"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_rt_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_rt_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_rt_ORD 49
#define DT_N_S_combos_S_c_hr_thumb_rt_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_rt_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_rt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_rt_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_rt_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rt_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rt_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_rt_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_rt_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_rt_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_IDX_0_VAL_param1 17236195
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rt, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rt, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rt, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rt, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions {34 /* 0x22 */, 13 /* 0xd */, 11 /* 0xb */}
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_IDX_1 13
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_IDX_2 11
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_rt, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_LEN 3
#define DT_N_S_combos_S_c_hr_thumb_rt_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_rt_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_rt, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_rt, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_rt, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_rt, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_rt_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/c-hr-thumb-st
 *
 * Node identifier: DT_N_S_combos_S_c_hr_thumb_st
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_c_hr_thumb_st_PATH "/combos/c-hr-thumb-st"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_c_hr_thumb_st_FULL_NAME "c-hr-thumb-st"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_c_hr_thumb_st_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_c_hr_thumb_st_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_c_hr_thumb_st_ORD 50
#define DT_N_S_combos_S_c_hr_thumb_st_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_c_hr_thumb_st_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_c_hr_thumb_st_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_c_hr_thumb_st_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_c_hr_thumb_st_REG_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_st_RANGES_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_st_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_c_hr_thumb_st_IRQ_NUM 0
#define DT_N_S_combos_S_c_hr_thumb_st_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_c_hr_thumb_st_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_IDX_0_VAL_param1 67567843
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_st, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_st, bindings, 0)
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_st, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_st, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_bindings_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions {34 /* 0x22 */, 12 /* 0xc */, 13 /* 0xd */}
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_IDX_0 34
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_IDX_1 12
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_IDX_2 13
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 0) \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 1) \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 2)
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_c_hr_thumb_st, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_LEN 3
#define DT_N_S_combos_S_c_hr_thumb_st_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_timeout_ms 2000
#define DT_N_S_combos_S_c_hr_thumb_st_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_c_hr_thumb_st_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_slow_release 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_IDX_0 0
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_c_hr_thumb_st, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_c_hr_thumb_st, layers, 0)
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_c_hr_thumb_st, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_c_hr_thumb_st, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_LEN 1
#define DT_N_S_combos_S_c_hr_thumb_st_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbkl_2
 *
 * Node identifier: DT_N_S_combos_S_cbkl_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbkl_2_PATH "/combos/cbkl_2"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbkl_2_FULL_NAME "cbkl_2"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbkl_2_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbkl_2_CHILD_IDX 50

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbkl_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbkl_2_ORD 51
#define DT_N_S_combos_S_cbkl_2_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbkl_2_REQUIRES_ORDS \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbkl_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbkl_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbkl_2_REG_NUM 0
#define DT_N_S_combos_S_cbkl_2_RANGES_NUM 0
#define DT_N_S_combos_S_cbkl_2_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbkl_2_IRQ_NUM 0
#define DT_N_S_combos_S_cbkl_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbkl_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbkl_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbkl_2_P_bindings_IDX_0_VAL_param1 6
#define DT_N_S_combos_S_cbkl_2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_2, bindings, 0)
#define DT_N_S_combos_S_cbkl_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_2, bindings, 0)
#define DT_N_S_combos_S_cbkl_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_bindings_LEN 1
#define DT_N_S_combos_S_cbkl_2_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_key_positions {2 /* 0x2 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbkl_2_P_key_positions_IDX_0 2
#define DT_N_S_combos_S_cbkl_2_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbkl_2_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_2, key_positions, 0) \
	fn(DT_N_S_combos_S_cbkl_2, key_positions, 1)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_2, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, key_positions, 1)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_2, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_2, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbkl_2_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader {2 /* 0x2 */}
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_IDX_0 2
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_2, key_positions_leader, 0)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_2, key_positions_leader, 0)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_2, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_2, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbkl_2_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_timeout_ms 2000
#define DT_N_S_combos_S_cbkl_2_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbkl_2_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_slow_release 1
#define DT_N_S_combos_S_cbkl_2_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbkl_2_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbkl_2_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_2, layers, 0) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 1) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 2) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 3) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 4) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 5)
#define DT_N_S_combos_S_cbkl_2_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_2, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 5)
#define DT_N_S_combos_S_cbkl_2_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_2, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_2, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_2, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_2, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_2_P_layers_LEN 6
#define DT_N_S_combos_S_cbkl_2_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbkl_3
 *
 * Node identifier: DT_N_S_combos_S_cbkl_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbkl_3_PATH "/combos/cbkl_3"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbkl_3_FULL_NAME "cbkl_3"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbkl_3_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbkl_3_CHILD_IDX 51

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbkl_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbkl_3_ORD 52
#define DT_N_S_combos_S_cbkl_3_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbkl_3_REQUIRES_ORDS \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbkl_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbkl_3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbkl_3_REG_NUM 0
#define DT_N_S_combos_S_cbkl_3_RANGES_NUM 0
#define DT_N_S_combos_S_cbkl_3_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbkl_3_IRQ_NUM 0
#define DT_N_S_combos_S_cbkl_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbkl_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbkl_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbkl_3_P_bindings_IDX_0_VAL_param1 8
#define DT_N_S_combos_S_cbkl_3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_3, bindings, 0)
#define DT_N_S_combos_S_cbkl_3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_3, bindings, 0)
#define DT_N_S_combos_S_cbkl_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_3, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_3, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_bindings_LEN 1
#define DT_N_S_combos_S_cbkl_3_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_key_positions {3 /* 0x3 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbkl_3_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_cbkl_3_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbkl_3_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_3, key_positions, 0) \
	fn(DT_N_S_combos_S_cbkl_3, key_positions, 1)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_3, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, key_positions, 1)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_3, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_3, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbkl_3_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader {3 /* 0x3 */}
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_IDX_0 3
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_3, key_positions_leader, 0)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_3, key_positions_leader, 0)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_3, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_3, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbkl_3_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_timeout_ms 2000
#define DT_N_S_combos_S_cbkl_3_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbkl_3_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_slow_release 1
#define DT_N_S_combos_S_cbkl_3_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbkl_3_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbkl_3_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_3, layers, 0) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 1) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 2) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 3) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 4) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 5)
#define DT_N_S_combos_S_cbkl_3_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_3, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 5)
#define DT_N_S_combos_S_cbkl_3_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_3, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_3, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_3, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_3, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_3_P_layers_LEN 6
#define DT_N_S_combos_S_cbkl_3_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbkl_4
 *
 * Node identifier: DT_N_S_combos_S_cbkl_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbkl_4_PATH "/combos/cbkl_4"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbkl_4_FULL_NAME "cbkl_4"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbkl_4_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbkl_4_CHILD_IDX 52

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbkl_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbkl_4_ORD 53
#define DT_N_S_combos_S_cbkl_4_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbkl_4_REQUIRES_ORDS \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbkl_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbkl_4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbkl_4_REG_NUM 0
#define DT_N_S_combos_S_cbkl_4_RANGES_NUM 0
#define DT_N_S_combos_S_cbkl_4_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbkl_4_IRQ_NUM 0
#define DT_N_S_combos_S_cbkl_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbkl_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbkl_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbkl_4_P_bindings_IDX_0_VAL_param1 5
#define DT_N_S_combos_S_cbkl_4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_4, bindings, 0)
#define DT_N_S_combos_S_cbkl_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_4, bindings, 0)
#define DT_N_S_combos_S_cbkl_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_4, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_4, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_bindings_LEN 1
#define DT_N_S_combos_S_cbkl_4_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_key_positions {4 /* 0x4 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbkl_4_P_key_positions_IDX_0 4
#define DT_N_S_combos_S_cbkl_4_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbkl_4_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_4, key_positions, 0) \
	fn(DT_N_S_combos_S_cbkl_4, key_positions, 1)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_4, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, key_positions, 1)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_4, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_4, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbkl_4_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader {4 /* 0x4 */}
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_IDX_0 4
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_4, key_positions_leader, 0)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_4, key_positions_leader, 0)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_4, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_4, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbkl_4_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_timeout_ms 2000
#define DT_N_S_combos_S_cbkl_4_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbkl_4_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_slow_release 1
#define DT_N_S_combos_S_cbkl_4_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbkl_4_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbkl_4_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbkl_4, layers, 0) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 1) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 2) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 3) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 4) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 5)
#define DT_N_S_combos_S_cbkl_4_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbkl_4, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 5)
#define DT_N_S_combos_S_cbkl_4_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbkl_4, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbkl_4, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbkl_4, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbkl_4, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbkl_4_P_layers_LEN 6
#define DT_N_S_combos_S_cbkl_4_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_11
 *
 * Node identifier: DT_N_S_combos_S_cbknum_11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_11_PATH "/combos/cbknum_11"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_11_FULL_NAME "cbknum_11"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_11_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_11_CHILD_IDX 55

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_11_ORD 54
#define DT_N_S_combos_S_cbknum_11_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_11_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_11_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_11_REG_NUM 0
#define DT_N_S_combos_S_cbknum_11_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_11_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_11_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_1_VAL_param1 458826
#define DT_N_S_combos_S_cbknum_11_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_11, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_11, bindings, 1)
#define DT_N_S_combos_S_cbknum_11_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_11, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, bindings, 1)
#define DT_N_S_combos_S_cbknum_11_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_11, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_11, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_11, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_11_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_key_positions {11 /* 0xb */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_11_P_key_positions_IDX_0 11
#define DT_N_S_combos_S_cbknum_11_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_11_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_11, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_11, key_positions, 1)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_11, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, key_positions, 1)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_11, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_11, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_11, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_11_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader {11 /* 0xb */}
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_IDX_0 11
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_11, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_11, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_11, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_11, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_11_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_11_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_11_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_slow_release 1
#define DT_N_S_combos_S_cbknum_11_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_11_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_11_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_11, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 5)
#define DT_N_S_combos_S_cbknum_11_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_11, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 5)
#define DT_N_S_combos_S_cbknum_11_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_11, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_11, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_11, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_11, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_11_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_11_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_12
 *
 * Node identifier: DT_N_S_combos_S_cbknum_12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_12_PATH "/combos/cbknum_12"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_12_FULL_NAME "cbknum_12"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_12_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_12_CHILD_IDX 56

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_12_ORD 55
#define DT_N_S_combos_S_cbknum_12_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_12_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_12_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_12_REG_NUM 0
#define DT_N_S_combos_S_cbknum_12_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_12_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_12_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_1_VAL_param1 458834
#define DT_N_S_combos_S_cbknum_12_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_12, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_12, bindings, 1)
#define DT_N_S_combos_S_cbknum_12_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_12, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, bindings, 1)
#define DT_N_S_combos_S_cbknum_12_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_12, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_12, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_12, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_12_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_key_positions {12 /* 0xc */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_12_P_key_positions_IDX_0 12
#define DT_N_S_combos_S_cbknum_12_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_12_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_12, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_12, key_positions, 1)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_12, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, key_positions, 1)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_12, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_12, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_12, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_12_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader {12 /* 0xc */}
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_IDX_0 12
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_12, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_12, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_12, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_12, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_12_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_12_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_12_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_slow_release 1
#define DT_N_S_combos_S_cbknum_12_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_12_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_12_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_12, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 5)
#define DT_N_S_combos_S_cbknum_12_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_12, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 5)
#define DT_N_S_combos_S_cbknum_12_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_12, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_12, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_12, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_12, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_12_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_12_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_13
 *
 * Node identifier: DT_N_S_combos_S_cbknum_13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_13_PATH "/combos/cbknum_13"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_13_FULL_NAME "cbknum_13"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_13_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_13_CHILD_IDX 57

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_13_ORD 56
#define DT_N_S_combos_S_cbknum_13_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_13_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_13_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_13_REG_NUM 0
#define DT_N_S_combos_S_cbknum_13_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_13_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_13_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_1_VAL_param1 458829
#define DT_N_S_combos_S_cbknum_13_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_13, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_13, bindings, 1)
#define DT_N_S_combos_S_cbknum_13_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_13, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, bindings, 1)
#define DT_N_S_combos_S_cbknum_13_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_13, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_13, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_13, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_13_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_key_positions {13 /* 0xd */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_13_P_key_positions_IDX_0 13
#define DT_N_S_combos_S_cbknum_13_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_13_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_13, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_13, key_positions, 1)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_13, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, key_positions, 1)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_13, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_13, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_13, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_13_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader {13 /* 0xd */}
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_IDX_0 13
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_13, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_13, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_13, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_13, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_13_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_13_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_13_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_slow_release 1
#define DT_N_S_combos_S_cbknum_13_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_13_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_13_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_13, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 5)
#define DT_N_S_combos_S_cbknum_13_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_13, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 5)
#define DT_N_S_combos_S_cbknum_13_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_13, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_13, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_13, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_13, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_13_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_13_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_14
 *
 * Node identifier: DT_N_S_combos_S_cbknum_14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_14_PATH "/combos/cbknum_14"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_14_FULL_NAME "cbknum_14"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_14_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_14_CHILD_IDX 58

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_14_ORD 57
#define DT_N_S_combos_S_cbknum_14_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_14_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_14_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_14_REG_NUM 0
#define DT_N_S_combos_S_cbknum_14_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_14_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_14_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_1_VAL_param1 458827
#define DT_N_S_combos_S_cbknum_14_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_14, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_14, bindings, 1)
#define DT_N_S_combos_S_cbknum_14_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_14, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, bindings, 1)
#define DT_N_S_combos_S_cbknum_14_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_14, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_14, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_14, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_14_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_key_positions {14 /* 0xe */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_14_P_key_positions_IDX_0 14
#define DT_N_S_combos_S_cbknum_14_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_14_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_14, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_14, key_positions, 1)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_14, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, key_positions, 1)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_14, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_14, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_14, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_14_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader {14 /* 0xe */}
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_IDX_0 14
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_14, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_14, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_14, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_14, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_14_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_14_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_14_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_slow_release 1
#define DT_N_S_combos_S_cbknum_14_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_14_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_14_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_14, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 5)
#define DT_N_S_combos_S_cbknum_14_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_14, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 5)
#define DT_N_S_combos_S_cbknum_14_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_14, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_14, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_14, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_14, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_14_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_14_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_22
 *
 * Node identifier: DT_N_S_combos_S_cbknum_22
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_22_PATH "/combos/cbknum_22"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_22_FULL_NAME "cbknum_22"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_22_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_22_CHILD_IDX 63

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_22_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_22_ORD 58
#define DT_N_S_combos_S_cbknum_22_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_22_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_22_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_22_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_22_REG_NUM 0
#define DT_N_S_combos_S_cbknum_22_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_22_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_22_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_22_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_22_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_1_VAL_param1 458832
#define DT_N_S_combos_S_cbknum_22_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_22, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_22, bindings, 1)
#define DT_N_S_combos_S_cbknum_22_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_22, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, bindings, 1)
#define DT_N_S_combos_S_cbknum_22_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_22, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_22, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_22, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_22_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_key_positions {22 /* 0x16 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_22_P_key_positions_IDX_0 22
#define DT_N_S_combos_S_cbknum_22_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_22_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_22, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_22, key_positions, 1)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_22, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, key_positions, 1)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_22, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_22, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_22, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_22_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader {22 /* 0x16 */}
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_IDX_0 22
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_22, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_22, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_22, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_22, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_22_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_22_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_22_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_slow_release 1
#define DT_N_S_combos_S_cbknum_22_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_22_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_22_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_22, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 5)
#define DT_N_S_combos_S_cbknum_22_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_22, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 5)
#define DT_N_S_combos_S_cbknum_22_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_22, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_22, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_22, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_22, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_22_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_22_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_23
 *
 * Node identifier: DT_N_S_combos_S_cbknum_23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_23_PATH "/combos/cbknum_23"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_23_FULL_NAME "cbknum_23"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_23_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_23_CHILD_IDX 64

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_23_ORD 59
#define DT_N_S_combos_S_cbknum_23_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_23_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_23_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_23_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_23_REG_NUM 0
#define DT_N_S_combos_S_cbknum_23_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_23_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_23_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_1_VAL_param1 458833
#define DT_N_S_combos_S_cbknum_23_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_23, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_23, bindings, 1)
#define DT_N_S_combos_S_cbknum_23_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_23, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, bindings, 1)
#define DT_N_S_combos_S_cbknum_23_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_23, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_23, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_23, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_23_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_key_positions {23 /* 0x17 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_23_P_key_positions_IDX_0 23
#define DT_N_S_combos_S_cbknum_23_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_23_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_23, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_23, key_positions, 1)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_23, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, key_positions, 1)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_23, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_23, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_23, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_23_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader {23 /* 0x17 */}
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_IDX_0 23
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_23, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_23, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_23, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_23, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_23_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_23_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_23_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_slow_release 1
#define DT_N_S_combos_S_cbknum_23_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_23_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_23_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_23, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 5)
#define DT_N_S_combos_S_cbknum_23_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_23, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 5)
#define DT_N_S_combos_S_cbknum_23_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_23, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_23, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_23, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_23, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_23_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_23_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_24
 *
 * Node identifier: DT_N_S_combos_S_cbknum_24
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_24_PATH "/combos/cbknum_24"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_24_FULL_NAME "cbknum_24"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_24_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_24_CHILD_IDX 65

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_24_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_24_ORD 60
#define DT_N_S_combos_S_cbknum_24_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_24_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_24_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_24_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_24_REG_NUM 0
#define DT_N_S_combos_S_cbknum_24_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_24_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_24_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_24_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_24_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_1_VAL_param1 458831
#define DT_N_S_combos_S_cbknum_24_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_24, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_24, bindings, 1)
#define DT_N_S_combos_S_cbknum_24_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_24, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, bindings, 1)
#define DT_N_S_combos_S_cbknum_24_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_24, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_24, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_24, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_24_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_key_positions {24 /* 0x18 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_24_P_key_positions_IDX_0 24
#define DT_N_S_combos_S_cbknum_24_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_24_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_24, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_24, key_positions, 1)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_24, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, key_positions, 1)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_24, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_24, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_24, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_24_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader {24 /* 0x18 */}
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_IDX_0 24
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_24, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_24, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_24, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_24, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_24_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_24_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_24_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_slow_release 1
#define DT_N_S_combos_S_cbknum_24_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_24_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_24_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_24, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 5)
#define DT_N_S_combos_S_cbknum_24_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_24, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 5)
#define DT_N_S_combos_S_cbknum_24_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_24, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_24, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_24, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_24, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_24_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_24_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbknum_25
 *
 * Node identifier: DT_N_S_combos_S_cbknum_25
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbknum_25_PATH "/combos/cbknum_25"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbknum_25_FULL_NAME "cbknum_25"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbknum_25_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbknum_25_CHILD_IDX 66

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbknum_25_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbknum_25_ORD 61
#define DT_N_S_combos_S_cbknum_25_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbknum_25_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbknum_25_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbknum_25_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbknum_25_REG_NUM 0
#define DT_N_S_combos_S_cbknum_25_RANGES_NUM 0
#define DT_N_S_combos_S_cbknum_25_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbknum_25_IRQ_NUM 0
#define DT_N_S_combos_S_cbknum_25_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbknum_25_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_0_VAL_param1 9
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_1_VAL_param1 458830
#define DT_N_S_combos_S_cbknum_25_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_25, bindings, 0) \
	fn(DT_N_S_combos_S_cbknum_25, bindings, 1)
#define DT_N_S_combos_S_cbknum_25_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_25, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, bindings, 1)
#define DT_N_S_combos_S_cbknum_25_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_25, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_25, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_25, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_bindings_LEN 2
#define DT_N_S_combos_S_cbknum_25_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_key_positions {25 /* 0x19 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbknum_25_P_key_positions_IDX_0 25
#define DT_N_S_combos_S_cbknum_25_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbknum_25_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_25, key_positions, 0) \
	fn(DT_N_S_combos_S_cbknum_25, key_positions, 1)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_25, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, key_positions, 1)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_25, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_25, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_25, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbknum_25_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader {25 /* 0x19 */}
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_IDX_0 25
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_25, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_25, key_positions_leader, 0)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_25, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_25, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbknum_25_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_timeout_ms 2000
#define DT_N_S_combos_S_cbknum_25_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbknum_25_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_slow_release 1
#define DT_N_S_combos_S_cbknum_25_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbknum_25_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbknum_25_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbknum_25, layers, 0) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 1) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 2) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 3) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 4) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 5)
#define DT_N_S_combos_S_cbknum_25_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbknum_25, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 5)
#define DT_N_S_combos_S_cbknum_25_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbknum_25, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbknum_25, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbknum_25, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbknum_25, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbknum_25_P_layers_LEN 6
#define DT_N_S_combos_S_cbknum_25_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbks_0
 *
 * Node identifier: DT_N_S_combos_S_cbks_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_0_PATH "/combos/cbks_0"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_0_FULL_NAME "cbks_0"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_0_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_0_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_0_ORD 62
#define DT_N_S_combos_S_cbks_0_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_0_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_0_REG_NUM 0
#define DT_N_S_combos_S_cbks_0_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_0_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_0_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbks_0_P_bindings_IDX_0_VAL_param1 67567646
#define DT_N_S_combos_S_cbks_0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_0, bindings, 0)
#define DT_N_S_combos_S_cbks_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_0, bindings, 0)
#define DT_N_S_combos_S_cbks_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_0, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_0, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_0_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_key_positions {0 /* 0x0 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_0_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_cbks_0_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_0_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_0, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_0, key_positions, 1)
#define DT_N_S_combos_S_cbks_0_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_0, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, key_positions, 1)
#define DT_N_S_combos_S_cbks_0_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_0, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_0, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_0_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader {0 /* 0x0 */}
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_IDX_0 0
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_0, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_0, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_0, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_0, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_0_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_0_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_0, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_0, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_0, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_0, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_0_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_slow_release 0
#define DT_N_S_combos_S_cbks_0_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_0_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_0_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_0, layers, 0) \
	fn(DT_N_S_combos_S_cbks_0, layers, 1) \
	fn(DT_N_S_combos_S_cbks_0, layers, 2) \
	fn(DT_N_S_combos_S_cbks_0, layers, 3) \
	fn(DT_N_S_combos_S_cbks_0, layers, 4) \
	fn(DT_N_S_combos_S_cbks_0, layers, 5)
#define DT_N_S_combos_S_cbks_0_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_0, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 5)
#define DT_N_S_combos_S_cbks_0_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_0, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_0, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_0, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_0, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_0, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_0, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_0, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_0, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_0_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_0_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_param_1to1
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_1to1
 *
 * Binding (compatible = zmk,macro-param-1to1):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-param-1to1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_1to1_PATH "/behaviors/macro_param_1to1"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_1to1_FULL_NAME "macro_param_1to1"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_1to1_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_1to1_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_1to1_ORD 63
#define DT_N_S_behaviors_S_macro_param_1to1_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_1to1_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_1to1_SUPPORTS_ORDS \
	64, /* /macros/mc_bkctilde */ \
	66, /* /macros/mc_enne */ \
	67, /* /macros/mac_enne_shift_delete */ \
	157, /* /macros/mhr */ \
	182, /* /macros/bt_pairing_c */ \
	229, /* /macros/mc_tilde */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_1to1_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_1to1 DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_NODELABEL_macro_param_1to1  DT_N_S_behaviors_S_macro_param_1to1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_1to1_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to1_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to1_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_1to1_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_MATCHES_zmk_macro_param_1to1 1
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to1_COMPAT_MODEL_IDX_0 "macro-param-1to1"
#define DT_N_S_behaviors_S_macro_param_1to1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_1to1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /macros/mc_bkctilde
 *
 * Node identifier: DT_N_S_macros_S_mc_bkctilde
 *
 * Binding (compatible = zmk,behavior-macro-one-param):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro-one-param.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_mc_bkctilde_PATH "/macros/mc_bkctilde"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_mc_bkctilde_FULL_NAME "mc_bkctilde"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_mc_bkctilde_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_mc_bkctilde_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_mc_bkctilde_ORD 64
#define DT_N_S_macros_S_mc_bkctilde_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_mc_bkctilde_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	63, /* /behaviors/macro_param_1to1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_mc_bkctilde_SUPPORTS_ORDS \
	65, /* /combos/cbks_10 */ \
	69, /* /combos/cbks_17 */ \
	70, /* /combos/cbks_18 */ \
	71, /* /combos/cbks_19 */ \
	73, /* /combos/cbks_7 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_mc_bkctilde_EXISTS 1
#define DT_N_INST_0_zmk_behavior_macro_one_param DT_N_S_macros_S_mc_bkctilde
#define DT_N_NODELABEL_mc_bkctilde               DT_N_S_macros_S_mc_bkctilde

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_mc_bkctilde_REG_NUM 0
#define DT_N_S_macros_S_mc_bkctilde_RANGES_NUM 0
#define DT_N_S_macros_S_mc_bkctilde_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_mc_bkctilde_IRQ_NUM 0
#define DT_N_S_macros_S_mc_bkctilde_COMPAT_MATCHES_zmk_behavior_macro_one_param 1
#define DT_N_S_macros_S_mc_bkctilde_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_mc_bkctilde_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_COMPAT_MODEL_IDX_0 "behavior-macro-one-param"
#define DT_N_S_macros_S_mc_bkctilde_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_mc_bkctilde_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_mc_bkctilde_P_label "&TILDE"
#define DT_N_S_macros_S_mc_bkctilde_P_label_STRING_UNQUOTED &TILDE
#define DT_N_S_macros_S_mc_bkctilde_P_label_STRING_TOKEN _TILDE
#define DT_N_S_macros_S_mc_bkctilde_P_label_STRING_UPPER_TOKEN _TILDE
#define DT_N_S_macros_S_mc_bkctilde_P_label_IDX_0 "&TILDE"
#define DT_N_S_macros_S_mc_bkctilde_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mc_bkctilde, label, 0)
#define DT_N_S_macros_S_mc_bkctilde_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mc_bkctilde, label, 0)
#define DT_N_S_macros_S_mc_bkctilde_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_bkctilde, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_mc_bkctilde_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_bkctilde, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_mc_bkctilde_P_label_LEN 1
#define DT_N_S_macros_S_mc_bkctilde_P_label_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_0_VAL_param1 67567624
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_1_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_3_VAL_param1 0
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mc_bkctilde, bindings, 0) \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 1) \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 2) \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 3)
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mc_bkctilde, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 3)
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_bkctilde, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 3, __VA_ARGS__)
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_bkctilde, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_bkctilde, bindings, 3, __VA_ARGS__)
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_LEN 4
#define DT_N_S_macros_S_mc_bkctilde_P_bindings_EXISTS 1

/*
 * Devicetree node: /combos/cbks_10
 *
 * Node identifier: DT_N_S_combos_S_cbks_10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_10_PATH "/combos/cbks_10"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_10_FULL_NAME "cbks_10"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_10_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_10_CHILD_IDX 54

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_10_ORD 65
#define DT_N_S_combos_S_cbks_10_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_10_REQUIRES_ORDS \
	39, /* /combos */ \
	64, /* /macros/mc_bkctilde */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_10_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_10_REG_NUM 0
#define DT_N_S_combos_S_cbks_10_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_10_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_10_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_10_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_bindings_IDX_0_PH DT_N_S_macros_S_mc_bkctilde
#define DT_N_S_combos_S_cbks_10_P_bindings_IDX_0_VAL_param1 458756
#define DT_N_S_combos_S_cbks_10_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_10, bindings, 0)
#define DT_N_S_combos_S_cbks_10_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_10, bindings, 0)
#define DT_N_S_combos_S_cbks_10_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_10, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_10, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_10_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_key_positions {10 /* 0xa */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_10_P_key_positions_IDX_0 10
#define DT_N_S_combos_S_cbks_10_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_10_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_10, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_10, key_positions, 1)
#define DT_N_S_combos_S_cbks_10_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_10, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, key_positions, 1)
#define DT_N_S_combos_S_cbks_10_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_10, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_10, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_10, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_10_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader {10 /* 0xa */}
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_IDX_0 10
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_10, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_10, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_10, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_10, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_10_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_10_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_10, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_10, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_10, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_10, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_10_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_slow_release 0
#define DT_N_S_combos_S_cbks_10_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_10_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_10_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_10, layers, 0) \
	fn(DT_N_S_combos_S_cbks_10, layers, 1) \
	fn(DT_N_S_combos_S_cbks_10, layers, 2) \
	fn(DT_N_S_combos_S_cbks_10, layers, 3) \
	fn(DT_N_S_combos_S_cbks_10, layers, 4) \
	fn(DT_N_S_combos_S_cbks_10, layers, 5)
#define DT_N_S_combos_S_cbks_10_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_10, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 5)
#define DT_N_S_combos_S_cbks_10_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_10, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_10, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_10, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_10, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_10, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_10, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_10, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_10, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_10_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_10_P_layers_EXISTS 1

/*
 * Devicetree node: /macros/mc_enne
 *
 * Node identifier: DT_N_S_macros_S_mc_enne
 *
 * Binding (compatible = zmk,behavior-macro-one-param):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro-one-param.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_mc_enne_PATH "/macros/mc_enne"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_mc_enne_FULL_NAME "mc_enne"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_mc_enne_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_mc_enne_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_enne_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_mc_enne_ORD 66
#define DT_N_S_macros_S_mc_enne_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_mc_enne_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	63, /* /behaviors/macro_param_1to1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_mc_enne_SUPPORTS_ORDS \
	67, /* /macros/mac_enne_shift_delete */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_mc_enne_EXISTS 1
#define DT_N_INST_1_zmk_behavior_macro_one_param DT_N_S_macros_S_mc_enne
#define DT_N_NODELABEL_mc_enne                   DT_N_S_macros_S_mc_enne

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_mc_enne_REG_NUM 0
#define DT_N_S_macros_S_mc_enne_RANGES_NUM 0
#define DT_N_S_macros_S_mc_enne_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_mc_enne_IRQ_NUM 0
#define DT_N_S_macros_S_mc_enne_COMPAT_MATCHES_zmk_behavior_macro_one_param 1
#define DT_N_S_macros_S_mc_enne_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_enne_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_mc_enne_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_enne_COMPAT_MODEL_IDX_0 "behavior-macro-one-param"
#define DT_N_S_macros_S_mc_enne_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_mc_enne_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_mc_enne_P_label "&ENNE"
#define DT_N_S_macros_S_mc_enne_P_label_STRING_UNQUOTED &ENNE
#define DT_N_S_macros_S_mc_enne_P_label_STRING_TOKEN _ENNE
#define DT_N_S_macros_S_mc_enne_P_label_STRING_UPPER_TOKEN _ENNE
#define DT_N_S_macros_S_mc_enne_P_label_IDX_0 "&ENNE"
#define DT_N_S_macros_S_mc_enne_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mc_enne, label, 0)
#define DT_N_S_macros_S_mc_enne_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mc_enne, label, 0)
#define DT_N_S_macros_S_mc_enne_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_enne, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_mc_enne_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_enne, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_mc_enne_P_label_LEN 1
#define DT_N_S_macros_S_mc_enne_P_label_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_1_VAL_param1 67567633
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_3_VAL_param1 0
#define DT_N_S_macros_S_mc_enne_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_enne_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mc_enne, bindings, 0) \
	fn(DT_N_S_macros_S_mc_enne, bindings, 1) \
	fn(DT_N_S_macros_S_mc_enne, bindings, 2) \
	fn(DT_N_S_macros_S_mc_enne, bindings, 3)
#define DT_N_S_macros_S_mc_enne_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mc_enne, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_enne, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_enne, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_enne, bindings, 3)
#define DT_N_S_macros_S_mc_enne_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_enne, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_enne, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_enne, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_enne, bindings, 3, __VA_ARGS__)
#define DT_N_S_macros_S_mc_enne_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_enne, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_enne, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_enne, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_enne, bindings, 3, __VA_ARGS__)
#define DT_N_S_macros_S_mc_enne_P_bindings_LEN 4
#define DT_N_S_macros_S_mc_enne_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/mac_enne_shift_delete
 *
 * Node identifier: DT_N_S_macros_S_mac_enne_shift_delete
 *
 * Binding (compatible = zmk,behavior-macro-one-param):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro-one-param.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_mac_enne_shift_delete_PATH "/macros/mac_enne_shift_delete"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_mac_enne_shift_delete_FULL_NAME "mac_enne_shift_delete"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_mac_enne_shift_delete_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_mac_enne_shift_delete_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_mac_enne_shift_delete_ORD 67
#define DT_N_S_macros_S_mac_enne_shift_delete_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_mac_enne_shift_delete_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	63, /* /behaviors/macro_param_1to1 */ \
	66, /* /macros/mc_enne */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_mac_enne_shift_delete_SUPPORTS_ORDS \
	68, /* /combos/cbks_16 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_mac_enne_shift_delete_EXISTS 1
#define DT_N_INST_2_zmk_behavior_macro_one_param DT_N_S_macros_S_mac_enne_shift_delete
#define DT_N_NODELABEL_mc_ennesd                 DT_N_S_macros_S_mac_enne_shift_delete

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_mac_enne_shift_delete_REG_NUM 0
#define DT_N_S_macros_S_mac_enne_shift_delete_RANGES_NUM 0
#define DT_N_S_macros_S_mac_enne_shift_delete_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_mac_enne_shift_delete_IRQ_NUM 0
#define DT_N_S_macros_S_mac_enne_shift_delete_COMPAT_MATCHES_zmk_behavior_macro_one_param 1
#define DT_N_S_macros_S_mac_enne_shift_delete_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_mac_enne_shift_delete_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_COMPAT_MODEL_IDX_0 "behavior-macro-one-param"
#define DT_N_S_macros_S_mac_enne_shift_delete_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_mac_enne_shift_delete_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_1_PH DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_2_PH DT_N_S_macros_S_mc_enne
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_2_VAL_param1 0
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 0) \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 1) \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 2)
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 2)
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 2, __VA_ARGS__)
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mac_enne_shift_delete, bindings, 2, __VA_ARGS__)
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_LEN 3
#define DT_N_S_macros_S_mac_enne_shift_delete_P_bindings_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_P_wait_ms 0
#define DT_N_S_macros_S_mac_enne_shift_delete_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_mac_enne_shift_delete_P_tap_ms 0
#define DT_N_S_macros_S_mac_enne_shift_delete_P_tap_ms_EXISTS 1

/*
 * Devicetree node: /combos/cbks_16
 *
 * Node identifier: DT_N_S_combos_S_cbks_16
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_16_PATH "/combos/cbks_16"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_16_FULL_NAME "cbks_16"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_16_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_16_CHILD_IDX 59

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_16_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_16_ORD 68
#define DT_N_S_combos_S_cbks_16_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_16_REQUIRES_ORDS \
	39, /* /combos */ \
	67, /* /macros/mac_enne_shift_delete */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_16_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_16_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_16_REG_NUM 0
#define DT_N_S_combos_S_cbks_16_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_16_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_16_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_16_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_16_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_16_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_bindings_IDX_0_PH DT_N_S_macros_S_mac_enne_shift_delete
#define DT_N_S_combos_S_cbks_16_P_bindings_IDX_0_VAL_param1 458769
#define DT_N_S_combos_S_cbks_16_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_16, bindings, 0)
#define DT_N_S_combos_S_cbks_16_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_16, bindings, 0)
#define DT_N_S_combos_S_cbks_16_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_16, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_16, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_16_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_key_positions {16 /* 0x10 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_16_P_key_positions_IDX_0 16
#define DT_N_S_combos_S_cbks_16_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_16_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_16, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_16, key_positions, 1)
#define DT_N_S_combos_S_cbks_16_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_16, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, key_positions, 1)
#define DT_N_S_combos_S_cbks_16_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_16, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_16, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_16, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_16_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader {16 /* 0x10 */}
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_IDX_0 16
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_16, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_16, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_16, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_16, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_16_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_16_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_16, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_16, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_16, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_16, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_16_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_slow_release 0
#define DT_N_S_combos_S_cbks_16_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_16_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_16_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_16, layers, 0) \
	fn(DT_N_S_combos_S_cbks_16, layers, 1) \
	fn(DT_N_S_combos_S_cbks_16, layers, 2) \
	fn(DT_N_S_combos_S_cbks_16, layers, 3) \
	fn(DT_N_S_combos_S_cbks_16, layers, 4) \
	fn(DT_N_S_combos_S_cbks_16, layers, 5)
#define DT_N_S_combos_S_cbks_16_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_16, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 5)
#define DT_N_S_combos_S_cbks_16_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_16, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_16, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_16, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_16, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_16, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_16, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_16, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_16, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_16_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_16_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbks_17
 *
 * Node identifier: DT_N_S_combos_S_cbks_17
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_17_PATH "/combos/cbks_17"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_17_FULL_NAME "cbks_17"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_17_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_17_CHILD_IDX 60

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_17_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_17_ORD 69
#define DT_N_S_combos_S_cbks_17_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_17_REQUIRES_ORDS \
	39, /* /combos */ \
	64, /* /macros/mc_bkctilde */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_17_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_17_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_17_REG_NUM 0
#define DT_N_S_combos_S_cbks_17_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_17_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_17_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_17_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_17_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_17_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_bindings_IDX_0_PH DT_N_S_macros_S_mc_bkctilde
#define DT_N_S_combos_S_cbks_17_P_bindings_IDX_0_VAL_param1 458760
#define DT_N_S_combos_S_cbks_17_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_17, bindings, 0)
#define DT_N_S_combos_S_cbks_17_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_17, bindings, 0)
#define DT_N_S_combos_S_cbks_17_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_17, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_17, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_17_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_key_positions {17 /* 0x11 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_17_P_key_positions_IDX_0 17
#define DT_N_S_combos_S_cbks_17_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_17_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_17, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_17, key_positions, 1)
#define DT_N_S_combos_S_cbks_17_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_17, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, key_positions, 1)
#define DT_N_S_combos_S_cbks_17_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_17, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_17, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_17, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_17_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader {17 /* 0x11 */}
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_IDX_0 17
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_17, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_17, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_17, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_17, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_17_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_17_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_17, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_17, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_17, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_17, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_17_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_slow_release 0
#define DT_N_S_combos_S_cbks_17_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_17_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_17_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_17, layers, 0) \
	fn(DT_N_S_combos_S_cbks_17, layers, 1) \
	fn(DT_N_S_combos_S_cbks_17, layers, 2) \
	fn(DT_N_S_combos_S_cbks_17, layers, 3) \
	fn(DT_N_S_combos_S_cbks_17, layers, 4) \
	fn(DT_N_S_combos_S_cbks_17, layers, 5)
#define DT_N_S_combos_S_cbks_17_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_17, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 5)
#define DT_N_S_combos_S_cbks_17_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_17, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_17, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_17, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_17, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_17, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_17, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_17, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_17, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_17_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_17_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbks_18
 *
 * Node identifier: DT_N_S_combos_S_cbks_18
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_18_PATH "/combos/cbks_18"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_18_FULL_NAME "cbks_18"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_18_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_18_CHILD_IDX 61

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_18_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_18_ORD 70
#define DT_N_S_combos_S_cbks_18_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_18_REQUIRES_ORDS \
	39, /* /combos */ \
	64, /* /macros/mc_bkctilde */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_18_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_18_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_18_REG_NUM 0
#define DT_N_S_combos_S_cbks_18_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_18_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_18_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_18_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_18_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_18_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_bindings_IDX_0_PH DT_N_S_macros_S_mc_bkctilde
#define DT_N_S_combos_S_cbks_18_P_bindings_IDX_0_VAL_param1 458764
#define DT_N_S_combos_S_cbks_18_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_18, bindings, 0)
#define DT_N_S_combos_S_cbks_18_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_18, bindings, 0)
#define DT_N_S_combos_S_cbks_18_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_18, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_18, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_18_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_key_positions {18 /* 0x12 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_18_P_key_positions_IDX_0 18
#define DT_N_S_combos_S_cbks_18_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_18_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_18, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_18, key_positions, 1)
#define DT_N_S_combos_S_cbks_18_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_18, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, key_positions, 1)
#define DT_N_S_combos_S_cbks_18_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_18, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_18, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_18, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_18_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader {18 /* 0x12 */}
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_IDX_0 18
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_18, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_18, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_18, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_18, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_18_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_18_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_18, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_18, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_18, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_18, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_18_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_slow_release 0
#define DT_N_S_combos_S_cbks_18_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_18_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_18_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_18, layers, 0) \
	fn(DT_N_S_combos_S_cbks_18, layers, 1) \
	fn(DT_N_S_combos_S_cbks_18, layers, 2) \
	fn(DT_N_S_combos_S_cbks_18, layers, 3) \
	fn(DT_N_S_combos_S_cbks_18, layers, 4) \
	fn(DT_N_S_combos_S_cbks_18, layers, 5)
#define DT_N_S_combos_S_cbks_18_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_18, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 5)
#define DT_N_S_combos_S_cbks_18_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_18, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_18, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_18, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_18, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_18, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_18, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_18, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_18, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_18_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_18_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbks_19
 *
 * Node identifier: DT_N_S_combos_S_cbks_19
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_19_PATH "/combos/cbks_19"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_19_FULL_NAME "cbks_19"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_19_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_19_CHILD_IDX 62

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_19_ORD 71
#define DT_N_S_combos_S_cbks_19_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_19_REQUIRES_ORDS \
	39, /* /combos */ \
	64, /* /macros/mc_bkctilde */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_19_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_19_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_19_REG_NUM 0
#define DT_N_S_combos_S_cbks_19_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_19_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_19_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_19_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_bindings_IDX_0_PH DT_N_S_macros_S_mc_bkctilde
#define DT_N_S_combos_S_cbks_19_P_bindings_IDX_0_VAL_param1 458770
#define DT_N_S_combos_S_cbks_19_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_19, bindings, 0)
#define DT_N_S_combos_S_cbks_19_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_19, bindings, 0)
#define DT_N_S_combos_S_cbks_19_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_19, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_19, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_19_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_key_positions {19 /* 0x13 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_19_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_cbks_19_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_19_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_19, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_19, key_positions, 1)
#define DT_N_S_combos_S_cbks_19_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_19, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, key_positions, 1)
#define DT_N_S_combos_S_cbks_19_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_19, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_19, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_19, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_19_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader {19 /* 0x13 */}
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_IDX_0 19
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_19, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_19, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_19, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_19, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_19_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_19_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_19, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_19, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_19, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_19, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_19_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_slow_release 0
#define DT_N_S_combos_S_cbks_19_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_19_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_19_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_19, layers, 0) \
	fn(DT_N_S_combos_S_cbks_19, layers, 1) \
	fn(DT_N_S_combos_S_cbks_19, layers, 2) \
	fn(DT_N_S_combos_S_cbks_19, layers, 3) \
	fn(DT_N_S_combos_S_cbks_19, layers, 4) \
	fn(DT_N_S_combos_S_cbks_19, layers, 5)
#define DT_N_S_combos_S_cbks_19_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_19, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 5)
#define DT_N_S_combos_S_cbks_19_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_19, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_19, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_19, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_19, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_19, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_19, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_19, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_19, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_19_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_19_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbks_30
 *
 * Node identifier: DT_N_S_combos_S_cbks_30
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_30_PATH "/combos/cbks_30"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_30_FULL_NAME "cbks_30"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_30_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_30_CHILD_IDX 67

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_30_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_30_ORD 72
#define DT_N_S_combos_S_cbks_30_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_30_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_30_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_30_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_30_REG_NUM 0
#define DT_N_S_combos_S_cbks_30_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_30_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_30_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_30_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_30_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_30_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cbks_30_P_bindings_IDX_0_VAL_param1 101122104
#define DT_N_S_combos_S_cbks_30_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_30, bindings, 0)
#define DT_N_S_combos_S_cbks_30_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_30, bindings, 0)
#define DT_N_S_combos_S_cbks_30_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_30, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_30, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_30_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_key_positions {30 /* 0x1e */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_30_P_key_positions_IDX_0 30
#define DT_N_S_combos_S_cbks_30_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_30_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_30, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_30, key_positions, 1)
#define DT_N_S_combos_S_cbks_30_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_30, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, key_positions, 1)
#define DT_N_S_combos_S_cbks_30_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_30, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_30, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_30, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_30_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader {30 /* 0x1e */}
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_IDX_0 30
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_30, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_30, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_30, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_30, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_30_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_30_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_30, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_30, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_30, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_30, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_30_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_slow_release 0
#define DT_N_S_combos_S_cbks_30_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_30_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_30_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_30, layers, 0) \
	fn(DT_N_S_combos_S_cbks_30, layers, 1) \
	fn(DT_N_S_combos_S_cbks_30, layers, 2) \
	fn(DT_N_S_combos_S_cbks_30, layers, 3) \
	fn(DT_N_S_combos_S_cbks_30, layers, 4) \
	fn(DT_N_S_combos_S_cbks_30, layers, 5)
#define DT_N_S_combos_S_cbks_30_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_30, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 5)
#define DT_N_S_combos_S_cbks_30_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_30, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_30, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_30, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_30, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_30, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_30, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_30, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_30, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_30_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_30_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cbks_7
 *
 * Node identifier: DT_N_S_combos_S_cbks_7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cbks_7_PATH "/combos/cbks_7"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cbks_7_FULL_NAME "cbks_7"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cbks_7_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cbks_7_CHILD_IDX 53

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cbks_7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cbks_7_ORD 73
#define DT_N_S_combos_S_cbks_7_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cbks_7_REQUIRES_ORDS \
	39, /* /combos */ \
	64, /* /macros/mc_bkctilde */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cbks_7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cbks_7_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cbks_7_REG_NUM 0
#define DT_N_S_combos_S_cbks_7_RANGES_NUM 0
#define DT_N_S_combos_S_cbks_7_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cbks_7_IRQ_NUM 0
#define DT_N_S_combos_S_cbks_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cbks_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cbks_7_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_bindings_IDX_0_PH DT_N_S_macros_S_mc_bkctilde
#define DT_N_S_combos_S_cbks_7_P_bindings_IDX_0_VAL_param1 458776
#define DT_N_S_combos_S_cbks_7_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_7, bindings, 0)
#define DT_N_S_combos_S_cbks_7_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_7, bindings, 0)
#define DT_N_S_combos_S_cbks_7_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_7, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_7, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_bindings_LEN 1
#define DT_N_S_combos_S_cbks_7_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_key_positions {7 /* 0x7 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_7_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_cbks_7_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_IDX_1 33
#define DT_N_S_combos_S_cbks_7_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_7, key_positions, 0) \
	fn(DT_N_S_combos_S_cbks_7, key_positions, 1)
#define DT_N_S_combos_S_cbks_7_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_7, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, key_positions, 1)
#define DT_N_S_combos_S_cbks_7_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_7, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_7, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_key_positions_LEN 2
#define DT_N_S_combos_S_cbks_7_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader {7 /* 0x7 */}
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_IDX_0 7
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_7, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_7, key_positions_leader, 0)
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_7, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_7, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_timeout_ms 2000
#define DT_N_S_combos_S_cbks_7_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cbks_7_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude {33 /* 0x21 */}
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_IDX_0 33
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_7, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_7, key_positions_exclude, 0)
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_7, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_7, key_positions_exclude, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_LEN 1
#define DT_N_S_combos_S_cbks_7_P_key_positions_exclude_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_slow_release 0
#define DT_N_S_combos_S_cbks_7_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_0 0
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_1 5
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_2 3
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_3 2
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_4 1
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_5 6
#define DT_N_S_combos_S_cbks_7_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cbks_7_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cbks_7, layers, 0) \
	fn(DT_N_S_combos_S_cbks_7, layers, 1) \
	fn(DT_N_S_combos_S_cbks_7, layers, 2) \
	fn(DT_N_S_combos_S_cbks_7, layers, 3) \
	fn(DT_N_S_combos_S_cbks_7, layers, 4) \
	fn(DT_N_S_combos_S_cbks_7, layers, 5)
#define DT_N_S_combos_S_cbks_7_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cbks_7, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 5)
#define DT_N_S_combos_S_cbks_7_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cbks_7, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_7, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_7, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_7, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_7, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cbks_7, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cbks_7, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cbks_7, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cbks_7_P_layers_LEN 6
#define DT_N_S_combos_S_cbks_7_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_0
 *
 * Node identifier: DT_N_S_combos_S_cent_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_0_PATH "/combos/cent_0"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_0_FULL_NAME "cent_0"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_0_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_0_CHILD_IDX 88

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_0_ORD 74
#define DT_N_S_combos_S_cent_0_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_0_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_0_REG_NUM 0
#define DT_N_S_combos_S_cent_0_RANGES_NUM 0
#define DT_N_S_combos_S_cent_0_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_0_IRQ_NUM 0
#define DT_N_S_combos_S_cent_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_1_VAL_param1 34013214
#define DT_N_S_combos_S_cent_0_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_0, bindings, 0) \
	fn(DT_N_S_combos_S_cent_0, bindings, 1)
#define DT_N_S_combos_S_cent_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_0, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, bindings, 1)
#define DT_N_S_combos_S_cent_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_0, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_0, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_0_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_key_positions {0 /* 0x0 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_0_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_cent_0_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_0_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_0, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_0, key_positions, 1)
#define DT_N_S_combos_S_cent_0_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_0, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, key_positions, 1)
#define DT_N_S_combos_S_cent_0_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_0, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_0, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_0_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_key_positions_leader {0 /* 0x0 */}
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_IDX_0 0
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_0, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_0, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_0, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_0, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_0_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_0_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_0_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_slow_release 1
#define DT_N_S_combos_S_cent_0_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_0_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_0_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_0_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_0_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_0_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_0_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_0_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_0_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_0, layers, 0) \
	fn(DT_N_S_combos_S_cent_0, layers, 1) \
	fn(DT_N_S_combos_S_cent_0, layers, 2) \
	fn(DT_N_S_combos_S_cent_0, layers, 3) \
	fn(DT_N_S_combos_S_cent_0, layers, 4) \
	fn(DT_N_S_combos_S_cent_0, layers, 5)
#define DT_N_S_combos_S_cent_0_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_0, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 5)
#define DT_N_S_combos_S_cent_0_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_0, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_0, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_0, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_0, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_0, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_0, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_0, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_0, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_0_P_layers_LEN 6
#define DT_N_S_combos_S_cent_0_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_1
 *
 * Node identifier: DT_N_S_combos_S_cent_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_1_PATH "/combos/cent_1"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_1_FULL_NAME "cent_1"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_1_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_1_CHILD_IDX 89

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_1_ORD 75
#define DT_N_S_combos_S_cent_1_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_1_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_1_REG_NUM 0
#define DT_N_S_combos_S_cent_1_RANGES_NUM 0
#define DT_N_S_combos_S_cent_1_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_1_IRQ_NUM 0
#define DT_N_S_combos_S_cent_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_1_VAL_param1 34013215
#define DT_N_S_combos_S_cent_1_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_1, bindings, 0) \
	fn(DT_N_S_combos_S_cent_1, bindings, 1)
#define DT_N_S_combos_S_cent_1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_1, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, bindings, 1)
#define DT_N_S_combos_S_cent_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_1, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_1, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_1_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_key_positions {1 /* 0x1 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_1_P_key_positions_IDX_0 1
#define DT_N_S_combos_S_cent_1_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_1_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_1, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_1, key_positions, 1)
#define DT_N_S_combos_S_cent_1_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_1, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, key_positions, 1)
#define DT_N_S_combos_S_cent_1_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_1, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_1, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_1_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_key_positions_leader {1 /* 0x1 */}
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_IDX_0 1
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_1, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_1, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_1, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_1, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_1_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_1_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_1_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_slow_release 1
#define DT_N_S_combos_S_cent_1_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_1_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_1_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_1_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_1_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_1_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_1_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_1_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_1_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_1, layers, 0) \
	fn(DT_N_S_combos_S_cent_1, layers, 1) \
	fn(DT_N_S_combos_S_cent_1, layers, 2) \
	fn(DT_N_S_combos_S_cent_1, layers, 3) \
	fn(DT_N_S_combos_S_cent_1, layers, 4) \
	fn(DT_N_S_combos_S_cent_1, layers, 5)
#define DT_N_S_combos_S_cent_1_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_1, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 5)
#define DT_N_S_combos_S_cent_1_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_1, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_1, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_1, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_1, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_1, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_1, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_1, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_1, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_1_P_layers_LEN 6
#define DT_N_S_combos_S_cent_1_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_10
 *
 * Node identifier: DT_N_S_combos_S_cent_10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_10_PATH "/combos/cent_10"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_10_FULL_NAME "cent_10"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_10_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_10_CHILD_IDX 98

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_10_ORD 76
#define DT_N_S_combos_S_cent_10_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_10_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_10_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_10_REG_NUM 0
#define DT_N_S_combos_S_cent_10_RANGES_NUM 0
#define DT_N_S_combos_S_cent_10_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_10_IRQ_NUM 0
#define DT_N_S_combos_S_cent_10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_1_VAL_param1 34013233
#define DT_N_S_combos_S_cent_10_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_10, bindings, 0) \
	fn(DT_N_S_combos_S_cent_10, bindings, 1)
#define DT_N_S_combos_S_cent_10_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_10, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, bindings, 1)
#define DT_N_S_combos_S_cent_10_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_10, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_10, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_10, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_10_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_key_positions {10 /* 0xa */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_10_P_key_positions_IDX_0 10
#define DT_N_S_combos_S_cent_10_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_10_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_10, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_10, key_positions, 1)
#define DT_N_S_combos_S_cent_10_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_10, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, key_positions, 1)
#define DT_N_S_combos_S_cent_10_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_10, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_10, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_10, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_10_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_key_positions_leader {10 /* 0xa */}
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_IDX_0 10
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_10, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_10, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_10, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_10, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_10_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_10_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_10_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_slow_release 1
#define DT_N_S_combos_S_cent_10_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_10_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_10_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_10_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_10_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_10_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_10_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_10_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_10_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_10, layers, 0) \
	fn(DT_N_S_combos_S_cent_10, layers, 1) \
	fn(DT_N_S_combos_S_cent_10, layers, 2) \
	fn(DT_N_S_combos_S_cent_10, layers, 3) \
	fn(DT_N_S_combos_S_cent_10, layers, 4) \
	fn(DT_N_S_combos_S_cent_10, layers, 5)
#define DT_N_S_combos_S_cent_10_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_10, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 5)
#define DT_N_S_combos_S_cent_10_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_10, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_10, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_10, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_10, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_10, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_10, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_10, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_10, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_10_P_layers_LEN 6
#define DT_N_S_combos_S_cent_10_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_11
 *
 * Node identifier: DT_N_S_combos_S_cent_11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_11_PATH "/combos/cent_11"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_11_FULL_NAME "cent_11"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_11_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_11_CHILD_IDX 99

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_11_ORD 77
#define DT_N_S_combos_S_cent_11_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_11_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_11_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_11_REG_NUM 0
#define DT_N_S_combos_S_cent_11_RANGES_NUM 0
#define DT_N_S_combos_S_cent_11_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_11_IRQ_NUM 0
#define DT_N_S_combos_S_cent_11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_1_VAL_param1 34013231
#define DT_N_S_combos_S_cent_11_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_11, bindings, 0) \
	fn(DT_N_S_combos_S_cent_11, bindings, 1)
#define DT_N_S_combos_S_cent_11_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_11, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, bindings, 1)
#define DT_N_S_combos_S_cent_11_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_11, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_11, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_11, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_11_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_key_positions {11 /* 0xb */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_11_P_key_positions_IDX_0 11
#define DT_N_S_combos_S_cent_11_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_11_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_11, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_11, key_positions, 1)
#define DT_N_S_combos_S_cent_11_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_11, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, key_positions, 1)
#define DT_N_S_combos_S_cent_11_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_11, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_11, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_11, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_11_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_key_positions_leader {11 /* 0xb */}
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_IDX_0 11
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_11, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_11, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_11, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_11, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_11_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_11_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_11_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_slow_release 1
#define DT_N_S_combos_S_cent_11_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_11_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_11_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_11_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_11_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_11_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_11_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_11_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_11_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_11, layers, 0) \
	fn(DT_N_S_combos_S_cent_11, layers, 1) \
	fn(DT_N_S_combos_S_cent_11, layers, 2) \
	fn(DT_N_S_combos_S_cent_11, layers, 3) \
	fn(DT_N_S_combos_S_cent_11, layers, 4) \
	fn(DT_N_S_combos_S_cent_11, layers, 5)
#define DT_N_S_combos_S_cent_11_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_11, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 5)
#define DT_N_S_combos_S_cent_11_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_11, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_11, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_11, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_11, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_11, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_11, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_11, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_11, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_11_P_layers_LEN 6
#define DT_N_S_combos_S_cent_11_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_12
 *
 * Node identifier: DT_N_S_combos_S_cent_12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_12_PATH "/combos/cent_12"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_12_FULL_NAME "cent_12"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_12_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_12_CHILD_IDX 100

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_12_ORD 78
#define DT_N_S_combos_S_cent_12_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_12_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_12_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_12_REG_NUM 0
#define DT_N_S_combos_S_cent_12_RANGES_NUM 0
#define DT_N_S_combos_S_cent_12_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_12_IRQ_NUM 0
#define DT_N_S_combos_S_cent_12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_1_VAL_param1 34013232
#define DT_N_S_combos_S_cent_12_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_12, bindings, 0) \
	fn(DT_N_S_combos_S_cent_12, bindings, 1)
#define DT_N_S_combos_S_cent_12_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_12, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, bindings, 1)
#define DT_N_S_combos_S_cent_12_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_12, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_12, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_12, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_12_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_key_positions {12 /* 0xc */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_12_P_key_positions_IDX_0 12
#define DT_N_S_combos_S_cent_12_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_12_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_12, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_12, key_positions, 1)
#define DT_N_S_combos_S_cent_12_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_12, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, key_positions, 1)
#define DT_N_S_combos_S_cent_12_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_12, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_12, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_12, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_12_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_key_positions_leader {12 /* 0xc */}
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_IDX_0 12
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_12, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_12, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_12, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_12, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_12_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_12_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_12_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_slow_release 1
#define DT_N_S_combos_S_cent_12_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_12_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_12_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_12_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_12_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_12_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_12_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_12_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_12_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_12, layers, 0) \
	fn(DT_N_S_combos_S_cent_12, layers, 1) \
	fn(DT_N_S_combos_S_cent_12, layers, 2) \
	fn(DT_N_S_combos_S_cent_12, layers, 3) \
	fn(DT_N_S_combos_S_cent_12, layers, 4) \
	fn(DT_N_S_combos_S_cent_12, layers, 5)
#define DT_N_S_combos_S_cent_12_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_12, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 5)
#define DT_N_S_combos_S_cent_12_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_12, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_12, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_12, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_12, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_12, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_12, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_12, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_12, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_12_P_layers_LEN 6
#define DT_N_S_combos_S_cent_12_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_13
 *
 * Node identifier: DT_N_S_combos_S_cent_13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_13_PATH "/combos/cent_13"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_13_FULL_NAME "cent_13"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_13_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_13_CHILD_IDX 101

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_13_ORD 79
#define DT_N_S_combos_S_cent_13_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_13_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_13_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_13_REG_NUM 0
#define DT_N_S_combos_S_cent_13_RANGES_NUM 0
#define DT_N_S_combos_S_cent_13_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_13_IRQ_NUM 0
#define DT_N_S_combos_S_cent_13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_1_VAL_param1 34013237
#define DT_N_S_combos_S_cent_13_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_13, bindings, 0) \
	fn(DT_N_S_combos_S_cent_13, bindings, 1)
#define DT_N_S_combos_S_cent_13_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_13, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, bindings, 1)
#define DT_N_S_combos_S_cent_13_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_13, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_13, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_13, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_13_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_key_positions {13 /* 0xd */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_13_P_key_positions_IDX_0 13
#define DT_N_S_combos_S_cent_13_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_13_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_13, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_13, key_positions, 1)
#define DT_N_S_combos_S_cent_13_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_13, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, key_positions, 1)
#define DT_N_S_combos_S_cent_13_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_13, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_13, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_13, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_13_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_key_positions_leader {13 /* 0xd */}
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_IDX_0 13
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_13, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_13, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_13, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_13, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_13_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_13_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_13_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_slow_release 1
#define DT_N_S_combos_S_cent_13_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_13_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_13_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_13_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_13_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_13_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_13_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_13_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_13_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_13, layers, 0) \
	fn(DT_N_S_combos_S_cent_13, layers, 1) \
	fn(DT_N_S_combos_S_cent_13, layers, 2) \
	fn(DT_N_S_combos_S_cent_13, layers, 3) \
	fn(DT_N_S_combos_S_cent_13, layers, 4) \
	fn(DT_N_S_combos_S_cent_13, layers, 5)
#define DT_N_S_combos_S_cent_13_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_13, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 5)
#define DT_N_S_combos_S_cent_13_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_13, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_13, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_13, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_13, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_13, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_13, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_13, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_13, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_13_P_layers_LEN 6
#define DT_N_S_combos_S_cent_13_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_14
 *
 * Node identifier: DT_N_S_combos_S_cent_14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_14_PATH "/combos/cent_14"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_14_FULL_NAME "cent_14"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_14_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_14_CHILD_IDX 102

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_14_ORD 80
#define DT_N_S_combos_S_cent_14_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_14_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_14_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_14_REG_NUM 0
#define DT_N_S_combos_S_cent_14_RANGES_NUM 0
#define DT_N_S_combos_S_cent_14_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_14_IRQ_NUM 0
#define DT_N_S_combos_S_cent_14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_1_VAL_param1 34013229
#define DT_N_S_combos_S_cent_14_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_14, bindings, 0) \
	fn(DT_N_S_combos_S_cent_14, bindings, 1)
#define DT_N_S_combos_S_cent_14_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_14, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, bindings, 1)
#define DT_N_S_combos_S_cent_14_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_14, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_14, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_14, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_14_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_key_positions {14 /* 0xe */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_14_P_key_positions_IDX_0 14
#define DT_N_S_combos_S_cent_14_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_14_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_14, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_14, key_positions, 1)
#define DT_N_S_combos_S_cent_14_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_14, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, key_positions, 1)
#define DT_N_S_combos_S_cent_14_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_14, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_14, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_14, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_14_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_key_positions_leader {14 /* 0xe */}
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_IDX_0 14
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_14, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_14, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_14, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_14, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_14_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_14_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_14_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_slow_release 1
#define DT_N_S_combos_S_cent_14_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_14_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_14_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_14_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_14_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_14_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_14_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_14_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_14_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_14, layers, 0) \
	fn(DT_N_S_combos_S_cent_14, layers, 1) \
	fn(DT_N_S_combos_S_cent_14, layers, 2) \
	fn(DT_N_S_combos_S_cent_14, layers, 3) \
	fn(DT_N_S_combos_S_cent_14, layers, 4) \
	fn(DT_N_S_combos_S_cent_14, layers, 5)
#define DT_N_S_combos_S_cent_14_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_14, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 5)
#define DT_N_S_combos_S_cent_14_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_14, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_14, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_14, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_14, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_14, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_14, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_14, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_14, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_14_P_layers_LEN 6
#define DT_N_S_combos_S_cent_14_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_15
 *
 * Node identifier: DT_N_S_combos_S_cent_15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_15_PATH "/combos/cent_15"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_15_FULL_NAME "cent_15"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_15_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_15_CHILD_IDX 103

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_15_ORD 81
#define DT_N_S_combos_S_cent_15_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_15_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_15_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_15_REG_NUM 0
#define DT_N_S_combos_S_cent_15_RANGES_NUM 0
#define DT_N_S_combos_S_cent_15_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_15_IRQ_NUM 0
#define DT_N_S_combos_S_cent_15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_1_VAL_param1 34013230
#define DT_N_S_combos_S_cent_15_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_15, bindings, 0) \
	fn(DT_N_S_combos_S_cent_15, bindings, 1)
#define DT_N_S_combos_S_cent_15_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_15, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, bindings, 1)
#define DT_N_S_combos_S_cent_15_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_15, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_15, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_15, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_15_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_key_positions {15 /* 0xf */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_15_P_key_positions_IDX_0 15
#define DT_N_S_combos_S_cent_15_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_15_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_15, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_15, key_positions, 1)
#define DT_N_S_combos_S_cent_15_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_15, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, key_positions, 1)
#define DT_N_S_combos_S_cent_15_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_15, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_15, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_15, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_15_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_key_positions_leader {15 /* 0xf */}
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_IDX_0 15
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_15, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_15, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_15, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_15, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_15_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_15_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_15_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_slow_release 1
#define DT_N_S_combos_S_cent_15_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_15_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_15_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_15_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_15_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_15_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_15_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_15_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_15_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_15, layers, 0) \
	fn(DT_N_S_combos_S_cent_15, layers, 1) \
	fn(DT_N_S_combos_S_cent_15, layers, 2) \
	fn(DT_N_S_combos_S_cent_15, layers, 3) \
	fn(DT_N_S_combos_S_cent_15, layers, 4) \
	fn(DT_N_S_combos_S_cent_15, layers, 5)
#define DT_N_S_combos_S_cent_15_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_15, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 5)
#define DT_N_S_combos_S_cent_15_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_15, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_15, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_15, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_15, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_15, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_15, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_15, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_15, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_15_P_layers_LEN 6
#define DT_N_S_combos_S_cent_15_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_16
 *
 * Node identifier: DT_N_S_combos_S_cent_16
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_16_PATH "/combos/cent_16"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_16_FULL_NAME "cent_16"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_16_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_16_CHILD_IDX 104

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_16_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_16_ORD 82
#define DT_N_S_combos_S_cent_16_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_16_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_16_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_16_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_16_REG_NUM 0
#define DT_N_S_combos_S_cent_16_RANGES_NUM 0
#define DT_N_S_combos_S_cent_16_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_16_IRQ_NUM 0
#define DT_N_S_combos_S_cent_16_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_16_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_1_VAL_param1 34013235
#define DT_N_S_combos_S_cent_16_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_16, bindings, 0) \
	fn(DT_N_S_combos_S_cent_16, bindings, 1)
#define DT_N_S_combos_S_cent_16_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_16, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, bindings, 1)
#define DT_N_S_combos_S_cent_16_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_16, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_16, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_16, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_16_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_key_positions {16 /* 0x10 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_16_P_key_positions_IDX_0 16
#define DT_N_S_combos_S_cent_16_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_16_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_16, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_16, key_positions, 1)
#define DT_N_S_combos_S_cent_16_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_16, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, key_positions, 1)
#define DT_N_S_combos_S_cent_16_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_16, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_16, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_16, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_16_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_key_positions_leader {16 /* 0x10 */}
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_IDX_0 16
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_16, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_16, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_16, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_16, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_16_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_16_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_16_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_slow_release 1
#define DT_N_S_combos_S_cent_16_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_16_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_16_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_16_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_16_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_16_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_16_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_16_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_16_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_16, layers, 0) \
	fn(DT_N_S_combos_S_cent_16, layers, 1) \
	fn(DT_N_S_combos_S_cent_16, layers, 2) \
	fn(DT_N_S_combos_S_cent_16, layers, 3) \
	fn(DT_N_S_combos_S_cent_16, layers, 4) \
	fn(DT_N_S_combos_S_cent_16, layers, 5)
#define DT_N_S_combos_S_cent_16_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_16, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 5)
#define DT_N_S_combos_S_cent_16_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_16, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_16, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_16, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_16, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_16, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_16, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_16, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_16, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_16_P_layers_LEN 6
#define DT_N_S_combos_S_cent_16_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_17
 *
 * Node identifier: DT_N_S_combos_S_cent_17
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_17_PATH "/combos/cent_17"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_17_FULL_NAME "cent_17"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_17_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_17_CHILD_IDX 105

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_17_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_17_ORD 83
#define DT_N_S_combos_S_cent_17_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_17_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_17_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_17_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_17_REG_NUM 0
#define DT_N_S_combos_S_cent_17_RANGES_NUM 0
#define DT_N_S_combos_S_cent_17_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_17_IRQ_NUM 0
#define DT_N_S_combos_S_cent_17_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_17_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_1_VAL_param1 34013238
#define DT_N_S_combos_S_cent_17_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_17, bindings, 0) \
	fn(DT_N_S_combos_S_cent_17, bindings, 1)
#define DT_N_S_combos_S_cent_17_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_17, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, bindings, 1)
#define DT_N_S_combos_S_cent_17_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_17, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_17, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_17, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_17_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_key_positions {17 /* 0x11 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_17_P_key_positions_IDX_0 17
#define DT_N_S_combos_S_cent_17_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_17_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_17, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_17, key_positions, 1)
#define DT_N_S_combos_S_cent_17_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_17, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, key_positions, 1)
#define DT_N_S_combos_S_cent_17_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_17, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_17, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_17, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_17_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_key_positions_leader {17 /* 0x11 */}
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_IDX_0 17
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_17, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_17, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_17, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_17, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_17_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_17_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_17_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_slow_release 1
#define DT_N_S_combos_S_cent_17_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_17_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_17_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_17_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_17_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_17_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_17_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_17_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_17_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_17, layers, 0) \
	fn(DT_N_S_combos_S_cent_17, layers, 1) \
	fn(DT_N_S_combos_S_cent_17, layers, 2) \
	fn(DT_N_S_combos_S_cent_17, layers, 3) \
	fn(DT_N_S_combos_S_cent_17, layers, 4) \
	fn(DT_N_S_combos_S_cent_17, layers, 5)
#define DT_N_S_combos_S_cent_17_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_17, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 5)
#define DT_N_S_combos_S_cent_17_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_17, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_17, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_17, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_17, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_17, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_17, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_17, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_17, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_17_P_layers_LEN 6
#define DT_N_S_combos_S_cent_17_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_18
 *
 * Node identifier: DT_N_S_combos_S_cent_18
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_18_PATH "/combos/cent_18"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_18_FULL_NAME "cent_18"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_18_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_18_CHILD_IDX 106

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_18_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_18_ORD 84
#define DT_N_S_combos_S_cent_18_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_18_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_18_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_18_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_18_REG_NUM 0
#define DT_N_S_combos_S_cent_18_RANGES_NUM 0
#define DT_N_S_combos_S_cent_18_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_18_IRQ_NUM 0
#define DT_N_S_combos_S_cent_18_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_18_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_1_VAL_param1 34013239
#define DT_N_S_combos_S_cent_18_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_18, bindings, 0) \
	fn(DT_N_S_combos_S_cent_18, bindings, 1)
#define DT_N_S_combos_S_cent_18_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_18, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, bindings, 1)
#define DT_N_S_combos_S_cent_18_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_18, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_18, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_18, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_18_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_key_positions {18 /* 0x12 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_18_P_key_positions_IDX_0 18
#define DT_N_S_combos_S_cent_18_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_18_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_18, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_18, key_positions, 1)
#define DT_N_S_combos_S_cent_18_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_18, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, key_positions, 1)
#define DT_N_S_combos_S_cent_18_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_18, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_18, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_18, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_18_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_key_positions_leader {18 /* 0x12 */}
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_IDX_0 18
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_18, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_18, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_18, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_18, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_18_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_18_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_18_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_slow_release 1
#define DT_N_S_combos_S_cent_18_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_18_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_18_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_18_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_18_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_18_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_18_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_18_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_18_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_18, layers, 0) \
	fn(DT_N_S_combos_S_cent_18, layers, 1) \
	fn(DT_N_S_combos_S_cent_18, layers, 2) \
	fn(DT_N_S_combos_S_cent_18, layers, 3) \
	fn(DT_N_S_combos_S_cent_18, layers, 4) \
	fn(DT_N_S_combos_S_cent_18, layers, 5)
#define DT_N_S_combos_S_cent_18_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_18, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 5)
#define DT_N_S_combos_S_cent_18_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_18, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_18, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_18, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_18, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_18, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_18, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_18, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_18, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_18_P_layers_LEN 6
#define DT_N_S_combos_S_cent_18_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_19
 *
 * Node identifier: DT_N_S_combos_S_cent_19
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_19_PATH "/combos/cent_19"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_19_FULL_NAME "cent_19"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_19_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_19_CHILD_IDX 107

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_19_ORD 85
#define DT_N_S_combos_S_cent_19_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_19_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_19_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_19_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_19_REG_NUM 0
#define DT_N_S_combos_S_cent_19_RANGES_NUM 0
#define DT_N_S_combos_S_cent_19_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_19_IRQ_NUM 0
#define DT_N_S_combos_S_cent_19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_1_VAL_param1 34013240
#define DT_N_S_combos_S_cent_19_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_19, bindings, 0) \
	fn(DT_N_S_combos_S_cent_19, bindings, 1)
#define DT_N_S_combos_S_cent_19_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_19, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, bindings, 1)
#define DT_N_S_combos_S_cent_19_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_19, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_19, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_19, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_19_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_key_positions {19 /* 0x13 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_19_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_cent_19_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_19_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_19, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_19, key_positions, 1)
#define DT_N_S_combos_S_cent_19_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_19, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, key_positions, 1)
#define DT_N_S_combos_S_cent_19_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_19, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_19, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_19, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_19_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_key_positions_leader {19 /* 0x13 */}
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_IDX_0 19
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_19, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_19, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_19, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_19, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_19_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_19_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_19_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_slow_release 1
#define DT_N_S_combos_S_cent_19_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_19_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_19_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_19_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_19_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_19_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_19_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_19_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_19_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_19, layers, 0) \
	fn(DT_N_S_combos_S_cent_19, layers, 1) \
	fn(DT_N_S_combos_S_cent_19, layers, 2) \
	fn(DT_N_S_combos_S_cent_19, layers, 3) \
	fn(DT_N_S_combos_S_cent_19, layers, 4) \
	fn(DT_N_S_combos_S_cent_19, layers, 5)
#define DT_N_S_combos_S_cent_19_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_19, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 5)
#define DT_N_S_combos_S_cent_19_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_19, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_19, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_19, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_19, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_19, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_19, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_19, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_19, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_19_P_layers_LEN 6
#define DT_N_S_combos_S_cent_19_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_2
 *
 * Node identifier: DT_N_S_combos_S_cent_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_2_PATH "/combos/cent_2"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_2_FULL_NAME "cent_2"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_2_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_2_CHILD_IDX 90

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_2_ORD 86
#define DT_N_S_combos_S_cent_2_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_2_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_2_REG_NUM 0
#define DT_N_S_combos_S_cent_2_RANGES_NUM 0
#define DT_N_S_combos_S_cent_2_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_2_IRQ_NUM 0
#define DT_N_S_combos_S_cent_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_1_VAL_param1 34013216
#define DT_N_S_combos_S_cent_2_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_2, bindings, 0) \
	fn(DT_N_S_combos_S_cent_2, bindings, 1)
#define DT_N_S_combos_S_cent_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_2, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, bindings, 1)
#define DT_N_S_combos_S_cent_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_2, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_2, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_2_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_key_positions {2 /* 0x2 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_2_P_key_positions_IDX_0 2
#define DT_N_S_combos_S_cent_2_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_2_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_2, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_2, key_positions, 1)
#define DT_N_S_combos_S_cent_2_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_2, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, key_positions, 1)
#define DT_N_S_combos_S_cent_2_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_2, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_2, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_2_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_key_positions_leader {2 /* 0x2 */}
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_IDX_0 2
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_2, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_2, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_2, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_2, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_2_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_2_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_2_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_slow_release 1
#define DT_N_S_combos_S_cent_2_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_2_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_2_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_2_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_2_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_2_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_2_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_2_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_2_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_2, layers, 0) \
	fn(DT_N_S_combos_S_cent_2, layers, 1) \
	fn(DT_N_S_combos_S_cent_2, layers, 2) \
	fn(DT_N_S_combos_S_cent_2, layers, 3) \
	fn(DT_N_S_combos_S_cent_2, layers, 4) \
	fn(DT_N_S_combos_S_cent_2, layers, 5)
#define DT_N_S_combos_S_cent_2_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_2, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 5)
#define DT_N_S_combos_S_cent_2_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_2, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_2, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_2, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_2, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_2, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_2, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_2, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_2, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_2_P_layers_LEN 6
#define DT_N_S_combos_S_cent_2_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_21
 *
 * Node identifier: DT_N_S_combos_S_cent_21
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_21_PATH "/combos/cent_21"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_21_FULL_NAME "cent_21"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_21_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_21_CHILD_IDX 108

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_21_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_21_ORD 87
#define DT_N_S_combos_S_cent_21_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_21_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_21_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_21_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_21_REG_NUM 0
#define DT_N_S_combos_S_cent_21_RANGES_NUM 0
#define DT_N_S_combos_S_cent_21_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_21_IRQ_NUM 0
#define DT_N_S_combos_S_cent_21_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_21_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_1_VAL_param1 458801
#define DT_N_S_combos_S_cent_21_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_21, bindings, 0) \
	fn(DT_N_S_combos_S_cent_21, bindings, 1)
#define DT_N_S_combos_S_cent_21_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_21, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, bindings, 1)
#define DT_N_S_combos_S_cent_21_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_21, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_21, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_21, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_21_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_key_positions {21 /* 0x15 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_21_P_key_positions_IDX_0 21
#define DT_N_S_combos_S_cent_21_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_21_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_21, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_21, key_positions, 1)
#define DT_N_S_combos_S_cent_21_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_21, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, key_positions, 1)
#define DT_N_S_combos_S_cent_21_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_21, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_21, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_21, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_21_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_key_positions_leader {21 /* 0x15 */}
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_IDX_0 21
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_21, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_21, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_21, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_21, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_21_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_21_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_21_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_slow_release 1
#define DT_N_S_combos_S_cent_21_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_21_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_21_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_21_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_21_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_21_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_21_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_21_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_21_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_21, layers, 0) \
	fn(DT_N_S_combos_S_cent_21, layers, 1) \
	fn(DT_N_S_combos_S_cent_21, layers, 2) \
	fn(DT_N_S_combos_S_cent_21, layers, 3) \
	fn(DT_N_S_combos_S_cent_21, layers, 4) \
	fn(DT_N_S_combos_S_cent_21, layers, 5)
#define DT_N_S_combos_S_cent_21_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_21, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 5)
#define DT_N_S_combos_S_cent_21_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_21, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_21, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_21, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_21, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_21, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_21, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_21, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_21, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_21_P_layers_LEN 6
#define DT_N_S_combos_S_cent_21_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_22
 *
 * Node identifier: DT_N_S_combos_S_cent_22
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_22_PATH "/combos/cent_22"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_22_FULL_NAME "cent_22"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_22_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_22_CHILD_IDX 109

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_22_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_22_ORD 88
#define DT_N_S_combos_S_cent_22_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_22_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_22_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_22_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_22_REG_NUM 0
#define DT_N_S_combos_S_cent_22_RANGES_NUM 0
#define DT_N_S_combos_S_cent_22_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_22_IRQ_NUM 0
#define DT_N_S_combos_S_cent_22_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_22_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_1_VAL_param1 458799
#define DT_N_S_combos_S_cent_22_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_22, bindings, 0) \
	fn(DT_N_S_combos_S_cent_22, bindings, 1)
#define DT_N_S_combos_S_cent_22_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_22, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, bindings, 1)
#define DT_N_S_combos_S_cent_22_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_22, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_22, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_22, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_22_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_key_positions {22 /* 0x16 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_22_P_key_positions_IDX_0 22
#define DT_N_S_combos_S_cent_22_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_22_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_22, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_22, key_positions, 1)
#define DT_N_S_combos_S_cent_22_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_22, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, key_positions, 1)
#define DT_N_S_combos_S_cent_22_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_22, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_22, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_22, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_22_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_key_positions_leader {22 /* 0x16 */}
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_IDX_0 22
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_22, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_22, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_22, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_22, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_22_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_22_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_22_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_slow_release 1
#define DT_N_S_combos_S_cent_22_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_22_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_22_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_22_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_22_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_22_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_22_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_22_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_22_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_22, layers, 0) \
	fn(DT_N_S_combos_S_cent_22, layers, 1) \
	fn(DT_N_S_combos_S_cent_22, layers, 2) \
	fn(DT_N_S_combos_S_cent_22, layers, 3) \
	fn(DT_N_S_combos_S_cent_22, layers, 4) \
	fn(DT_N_S_combos_S_cent_22, layers, 5)
#define DT_N_S_combos_S_cent_22_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_22, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 5)
#define DT_N_S_combos_S_cent_22_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_22, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_22, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_22, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_22, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_22, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_22, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_22, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_22, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_22_P_layers_LEN 6
#define DT_N_S_combos_S_cent_22_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_23
 *
 * Node identifier: DT_N_S_combos_S_cent_23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_23_PATH "/combos/cent_23"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_23_FULL_NAME "cent_23"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_23_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_23_CHILD_IDX 110

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_23_ORD 89
#define DT_N_S_combos_S_cent_23_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_23_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_23_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_23_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_23_REG_NUM 0
#define DT_N_S_combos_S_cent_23_RANGES_NUM 0
#define DT_N_S_combos_S_cent_23_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_23_IRQ_NUM 0
#define DT_N_S_combos_S_cent_23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_1_VAL_param1 458800
#define DT_N_S_combos_S_cent_23_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_23, bindings, 0) \
	fn(DT_N_S_combos_S_cent_23, bindings, 1)
#define DT_N_S_combos_S_cent_23_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_23, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, bindings, 1)
#define DT_N_S_combos_S_cent_23_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_23, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_23, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_23, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_23_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_key_positions {23 /* 0x17 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_23_P_key_positions_IDX_0 23
#define DT_N_S_combos_S_cent_23_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_23_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_23, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_23, key_positions, 1)
#define DT_N_S_combos_S_cent_23_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_23, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, key_positions, 1)
#define DT_N_S_combos_S_cent_23_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_23, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_23, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_23, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_23_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_key_positions_leader {23 /* 0x17 */}
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_IDX_0 23
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_23, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_23, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_23, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_23, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_23_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_23_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_23_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_slow_release 1
#define DT_N_S_combos_S_cent_23_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_23_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_23_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_23_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_23_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_23_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_23_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_23_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_23_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_23, layers, 0) \
	fn(DT_N_S_combos_S_cent_23, layers, 1) \
	fn(DT_N_S_combos_S_cent_23, layers, 2) \
	fn(DT_N_S_combos_S_cent_23, layers, 3) \
	fn(DT_N_S_combos_S_cent_23, layers, 4) \
	fn(DT_N_S_combos_S_cent_23, layers, 5)
#define DT_N_S_combos_S_cent_23_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_23, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 5)
#define DT_N_S_combos_S_cent_23_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_23, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_23, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_23, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_23, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_23, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_23, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_23, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_23, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_23_P_layers_LEN 6
#define DT_N_S_combos_S_cent_23_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_24
 *
 * Node identifier: DT_N_S_combos_S_cent_24
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_24_PATH "/combos/cent_24"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_24_FULL_NAME "cent_24"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_24_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_24_CHILD_IDX 111

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_24_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_24_ORD 90
#define DT_N_S_combos_S_cent_24_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_24_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_24_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_24_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_24_REG_NUM 0
#define DT_N_S_combos_S_cent_24_RANGES_NUM 0
#define DT_N_S_combos_S_cent_24_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_24_IRQ_NUM 0
#define DT_N_S_combos_S_cent_24_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_24_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_1_VAL_param1 458805
#define DT_N_S_combos_S_cent_24_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_24, bindings, 0) \
	fn(DT_N_S_combos_S_cent_24, bindings, 1)
#define DT_N_S_combos_S_cent_24_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_24, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, bindings, 1)
#define DT_N_S_combos_S_cent_24_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_24, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_24, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_24, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_24_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_key_positions {24 /* 0x18 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_24_P_key_positions_IDX_0 24
#define DT_N_S_combos_S_cent_24_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_24_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_24, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_24, key_positions, 1)
#define DT_N_S_combos_S_cent_24_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_24, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, key_positions, 1)
#define DT_N_S_combos_S_cent_24_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_24, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_24, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_24, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_24_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_key_positions_leader {24 /* 0x18 */}
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_IDX_0 24
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_24, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_24, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_24, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_24, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_24_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_24_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_24_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_slow_release 1
#define DT_N_S_combos_S_cent_24_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_24_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_24_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_24_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_24_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_24_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_24_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_24_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_24_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_24, layers, 0) \
	fn(DT_N_S_combos_S_cent_24, layers, 1) \
	fn(DT_N_S_combos_S_cent_24, layers, 2) \
	fn(DT_N_S_combos_S_cent_24, layers, 3) \
	fn(DT_N_S_combos_S_cent_24, layers, 4) \
	fn(DT_N_S_combos_S_cent_24, layers, 5)
#define DT_N_S_combos_S_cent_24_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_24, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 5)
#define DT_N_S_combos_S_cent_24_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_24, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_24, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_24, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_24, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_24, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_24, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_24, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_24, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_24_P_layers_LEN 6
#define DT_N_S_combos_S_cent_24_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_25
 *
 * Node identifier: DT_N_S_combos_S_cent_25
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_25_PATH "/combos/cent_25"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_25_FULL_NAME "cent_25"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_25_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_25_CHILD_IDX 112

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_25_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_25_ORD 91
#define DT_N_S_combos_S_cent_25_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_25_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_25_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_25_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_25_REG_NUM 0
#define DT_N_S_combos_S_cent_25_RANGES_NUM 0
#define DT_N_S_combos_S_cent_25_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_25_IRQ_NUM 0
#define DT_N_S_combos_S_cent_25_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_25_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_1_VAL_param1 458797
#define DT_N_S_combos_S_cent_25_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_25, bindings, 0) \
	fn(DT_N_S_combos_S_cent_25, bindings, 1)
#define DT_N_S_combos_S_cent_25_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_25, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, bindings, 1)
#define DT_N_S_combos_S_cent_25_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_25, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_25, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_25, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_25_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_key_positions {25 /* 0x19 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_25_P_key_positions_IDX_0 25
#define DT_N_S_combos_S_cent_25_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_25_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_25, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_25, key_positions, 1)
#define DT_N_S_combos_S_cent_25_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_25, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, key_positions, 1)
#define DT_N_S_combos_S_cent_25_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_25, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_25, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_25, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_25_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_key_positions_leader {25 /* 0x19 */}
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_IDX_0 25
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_25, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_25, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_25, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_25, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_25_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_25_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_25_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_slow_release 1
#define DT_N_S_combos_S_cent_25_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_25_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_25_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_25_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_25_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_25_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_25_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_25_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_25_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_25, layers, 0) \
	fn(DT_N_S_combos_S_cent_25, layers, 1) \
	fn(DT_N_S_combos_S_cent_25, layers, 2) \
	fn(DT_N_S_combos_S_cent_25, layers, 3) \
	fn(DT_N_S_combos_S_cent_25, layers, 4) \
	fn(DT_N_S_combos_S_cent_25, layers, 5)
#define DT_N_S_combos_S_cent_25_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_25, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 5)
#define DT_N_S_combos_S_cent_25_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_25, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_25, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_25, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_25, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_25, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_25, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_25, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_25, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_25_P_layers_LEN 6
#define DT_N_S_combos_S_cent_25_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_26
 *
 * Node identifier: DT_N_S_combos_S_cent_26
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_26_PATH "/combos/cent_26"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_26_FULL_NAME "cent_26"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_26_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_26_CHILD_IDX 113

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_26_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_26_ORD 92
#define DT_N_S_combos_S_cent_26_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_26_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_26_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_26_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_26_REG_NUM 0
#define DT_N_S_combos_S_cent_26_RANGES_NUM 0
#define DT_N_S_combos_S_cent_26_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_26_IRQ_NUM 0
#define DT_N_S_combos_S_cent_26_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_26_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_1_VAL_param1 458798
#define DT_N_S_combos_S_cent_26_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_26, bindings, 0) \
	fn(DT_N_S_combos_S_cent_26, bindings, 1)
#define DT_N_S_combos_S_cent_26_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_26, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, bindings, 1)
#define DT_N_S_combos_S_cent_26_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_26, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_26, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_26, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_26_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_key_positions {26 /* 0x1a */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_26_P_key_positions_IDX_0 26
#define DT_N_S_combos_S_cent_26_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_26_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_26, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_26, key_positions, 1)
#define DT_N_S_combos_S_cent_26_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_26, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, key_positions, 1)
#define DT_N_S_combos_S_cent_26_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_26, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_26, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_26, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_26_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_key_positions_leader {26 /* 0x1a */}
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_IDX_0 26
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_26, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_26, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_26, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_26, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_26_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_26_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_26_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_slow_release 1
#define DT_N_S_combos_S_cent_26_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_26_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_26_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_26_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_26_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_26_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_26_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_26_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_26_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_26, layers, 0) \
	fn(DT_N_S_combos_S_cent_26, layers, 1) \
	fn(DT_N_S_combos_S_cent_26, layers, 2) \
	fn(DT_N_S_combos_S_cent_26, layers, 3) \
	fn(DT_N_S_combos_S_cent_26, layers, 4) \
	fn(DT_N_S_combos_S_cent_26, layers, 5)
#define DT_N_S_combos_S_cent_26_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_26, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 5)
#define DT_N_S_combos_S_cent_26_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_26, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_26, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_26, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_26, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_26, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_26, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_26, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_26, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_26_P_layers_LEN 6
#define DT_N_S_combos_S_cent_26_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_27
 *
 * Node identifier: DT_N_S_combos_S_cent_27
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_27_PATH "/combos/cent_27"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_27_FULL_NAME "cent_27"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_27_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_27_CHILD_IDX 114

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_27_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_27_ORD 93
#define DT_N_S_combos_S_cent_27_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_27_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_27_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_27_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_27_REG_NUM 0
#define DT_N_S_combos_S_cent_27_RANGES_NUM 0
#define DT_N_S_combos_S_cent_27_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_27_IRQ_NUM 0
#define DT_N_S_combos_S_cent_27_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_27_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_1_VAL_param1 458803
#define DT_N_S_combos_S_cent_27_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_27, bindings, 0) \
	fn(DT_N_S_combos_S_cent_27, bindings, 1)
#define DT_N_S_combos_S_cent_27_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_27, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, bindings, 1)
#define DT_N_S_combos_S_cent_27_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_27, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_27, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_27, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_27_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_key_positions {27 /* 0x1b */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_27_P_key_positions_IDX_0 27
#define DT_N_S_combos_S_cent_27_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_27_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_27, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_27, key_positions, 1)
#define DT_N_S_combos_S_cent_27_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_27, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, key_positions, 1)
#define DT_N_S_combos_S_cent_27_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_27, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_27, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_27, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_27_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_key_positions_leader {27 /* 0x1b */}
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_IDX_0 27
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_27, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_27, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_27, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_27, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_27_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_27_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_27_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_slow_release 1
#define DT_N_S_combos_S_cent_27_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_27_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_27_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_27_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_27_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_27_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_27_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_27_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_27_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_27, layers, 0) \
	fn(DT_N_S_combos_S_cent_27, layers, 1) \
	fn(DT_N_S_combos_S_cent_27, layers, 2) \
	fn(DT_N_S_combos_S_cent_27, layers, 3) \
	fn(DT_N_S_combos_S_cent_27, layers, 4) \
	fn(DT_N_S_combos_S_cent_27, layers, 5)
#define DT_N_S_combos_S_cent_27_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_27, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 5)
#define DT_N_S_combos_S_cent_27_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_27, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_27, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_27, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_27, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_27, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_27, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_27, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_27, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_27_P_layers_LEN 6
#define DT_N_S_combos_S_cent_27_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_28
 *
 * Node identifier: DT_N_S_combos_S_cent_28
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_28_PATH "/combos/cent_28"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_28_FULL_NAME "cent_28"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_28_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_28_CHILD_IDX 115

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_28_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_28_ORD 94
#define DT_N_S_combos_S_cent_28_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_28_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_28_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_28_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_28_REG_NUM 0
#define DT_N_S_combos_S_cent_28_RANGES_NUM 0
#define DT_N_S_combos_S_cent_28_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_28_IRQ_NUM 0
#define DT_N_S_combos_S_cent_28_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_28_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_1_VAL_param1 458806
#define DT_N_S_combos_S_cent_28_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_28, bindings, 0) \
	fn(DT_N_S_combos_S_cent_28, bindings, 1)
#define DT_N_S_combos_S_cent_28_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_28, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, bindings, 1)
#define DT_N_S_combos_S_cent_28_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_28, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_28, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_28, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_28_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_key_positions {28 /* 0x1c */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_28_P_key_positions_IDX_0 28
#define DT_N_S_combos_S_cent_28_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_28_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_28, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_28, key_positions, 1)
#define DT_N_S_combos_S_cent_28_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_28, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, key_positions, 1)
#define DT_N_S_combos_S_cent_28_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_28, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_28, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_28, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_28_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_key_positions_leader {28 /* 0x1c */}
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_IDX_0 28
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_28, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_28, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_28, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_28, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_28_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_28_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_28_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_slow_release 1
#define DT_N_S_combos_S_cent_28_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_28_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_28_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_28_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_28_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_28_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_28_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_28_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_28_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_28, layers, 0) \
	fn(DT_N_S_combos_S_cent_28, layers, 1) \
	fn(DT_N_S_combos_S_cent_28, layers, 2) \
	fn(DT_N_S_combos_S_cent_28, layers, 3) \
	fn(DT_N_S_combos_S_cent_28, layers, 4) \
	fn(DT_N_S_combos_S_cent_28, layers, 5)
#define DT_N_S_combos_S_cent_28_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_28, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 5)
#define DT_N_S_combos_S_cent_28_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_28, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_28, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_28, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_28, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_28, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_28, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_28, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_28, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_28_P_layers_LEN 6
#define DT_N_S_combos_S_cent_28_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_29
 *
 * Node identifier: DT_N_S_combos_S_cent_29
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_29_PATH "/combos/cent_29"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_29_FULL_NAME "cent_29"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_29_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_29_CHILD_IDX 116

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_29_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_29_ORD 95
#define DT_N_S_combos_S_cent_29_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_29_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_29_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_29_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_29_REG_NUM 0
#define DT_N_S_combos_S_cent_29_RANGES_NUM 0
#define DT_N_S_combos_S_cent_29_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_29_IRQ_NUM 0
#define DT_N_S_combos_S_cent_29_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_29_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_1_VAL_param1 458807
#define DT_N_S_combos_S_cent_29_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_29, bindings, 0) \
	fn(DT_N_S_combos_S_cent_29, bindings, 1)
#define DT_N_S_combos_S_cent_29_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_29, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, bindings, 1)
#define DT_N_S_combos_S_cent_29_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_29, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_29, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_29, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_29_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_key_positions {29 /* 0x1d */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_29_P_key_positions_IDX_0 29
#define DT_N_S_combos_S_cent_29_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_29_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_29, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_29, key_positions, 1)
#define DT_N_S_combos_S_cent_29_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_29, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, key_positions, 1)
#define DT_N_S_combos_S_cent_29_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_29, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_29, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_29, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_29_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_key_positions_leader {29 /* 0x1d */}
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_IDX_0 29
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_29, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_29, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_29, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_29, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_29_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_29_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_29_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_slow_release 1
#define DT_N_S_combos_S_cent_29_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_29_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_29_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_29_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_29_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_29_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_29_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_29_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_29_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_29, layers, 0) \
	fn(DT_N_S_combos_S_cent_29, layers, 1) \
	fn(DT_N_S_combos_S_cent_29, layers, 2) \
	fn(DT_N_S_combos_S_cent_29, layers, 3) \
	fn(DT_N_S_combos_S_cent_29, layers, 4) \
	fn(DT_N_S_combos_S_cent_29, layers, 5)
#define DT_N_S_combos_S_cent_29_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_29, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 5)
#define DT_N_S_combos_S_cent_29_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_29, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_29, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_29, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_29, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_29, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_29, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_29, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_29, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_29_P_layers_LEN 6
#define DT_N_S_combos_S_cent_29_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_3
 *
 * Node identifier: DT_N_S_combos_S_cent_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_3_PATH "/combos/cent_3"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_3_FULL_NAME "cent_3"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_3_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_3_CHILD_IDX 91

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_3_ORD 96
#define DT_N_S_combos_S_cent_3_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_3_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_3_REG_NUM 0
#define DT_N_S_combos_S_cent_3_RANGES_NUM 0
#define DT_N_S_combos_S_cent_3_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_3_IRQ_NUM 0
#define DT_N_S_combos_S_cent_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_1_VAL_param1 34013217
#define DT_N_S_combos_S_cent_3_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_3, bindings, 0) \
	fn(DT_N_S_combos_S_cent_3, bindings, 1)
#define DT_N_S_combos_S_cent_3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_3, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, bindings, 1)
#define DT_N_S_combos_S_cent_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_3, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_3, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_3_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_key_positions {3 /* 0x3 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_3_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_cent_3_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_3_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_3, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_3, key_positions, 1)
#define DT_N_S_combos_S_cent_3_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_3, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, key_positions, 1)
#define DT_N_S_combos_S_cent_3_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_3, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_3, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_3_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_key_positions_leader {3 /* 0x3 */}
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_IDX_0 3
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_3, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_3, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_3, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_3, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_3_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_3_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_3_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_slow_release 1
#define DT_N_S_combos_S_cent_3_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_3_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_3_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_3_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_3_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_3_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_3_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_3_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_3_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_3, layers, 0) \
	fn(DT_N_S_combos_S_cent_3, layers, 1) \
	fn(DT_N_S_combos_S_cent_3, layers, 2) \
	fn(DT_N_S_combos_S_cent_3, layers, 3) \
	fn(DT_N_S_combos_S_cent_3, layers, 4) \
	fn(DT_N_S_combos_S_cent_3, layers, 5)
#define DT_N_S_combos_S_cent_3_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_3, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 5)
#define DT_N_S_combos_S_cent_3_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_3, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_3, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_3, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_3, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_3, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_3, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_3, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_3, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_3_P_layers_LEN 6
#define DT_N_S_combos_S_cent_3_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_30
 *
 * Node identifier: DT_N_S_combos_S_cent_30
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_30_PATH "/combos/cent_30"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_30_FULL_NAME "cent_30"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_30_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_30_CHILD_IDX 117

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_30_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_30_ORD 97
#define DT_N_S_combos_S_cent_30_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_30_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_30_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_30_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_30_REG_NUM 0
#define DT_N_S_combos_S_cent_30_RANGES_NUM 0
#define DT_N_S_combos_S_cent_30_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_30_IRQ_NUM 0
#define DT_N_S_combos_S_cent_30_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_30_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_1_VAL_param1 458808
#define DT_N_S_combos_S_cent_30_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_30, bindings, 0) \
	fn(DT_N_S_combos_S_cent_30, bindings, 1)
#define DT_N_S_combos_S_cent_30_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_30, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, bindings, 1)
#define DT_N_S_combos_S_cent_30_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_30, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_30, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_30, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_30_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_key_positions {30 /* 0x1e */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_30_P_key_positions_IDX_0 30
#define DT_N_S_combos_S_cent_30_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_30_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_30, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_30, key_positions, 1)
#define DT_N_S_combos_S_cent_30_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_30, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, key_positions, 1)
#define DT_N_S_combos_S_cent_30_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_30, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_30, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_30, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_30_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_key_positions_leader {30 /* 0x1e */}
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_IDX_0 30
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_30, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_30, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_30, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_30, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_30_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_30_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_30_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_slow_release 1
#define DT_N_S_combos_S_cent_30_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_30_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_30_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_30_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_30_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_30_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_30_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_30_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_30_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_30, layers, 0) \
	fn(DT_N_S_combos_S_cent_30, layers, 1) \
	fn(DT_N_S_combos_S_cent_30, layers, 2) \
	fn(DT_N_S_combos_S_cent_30, layers, 3) \
	fn(DT_N_S_combos_S_cent_30, layers, 4) \
	fn(DT_N_S_combos_S_cent_30, layers, 5)
#define DT_N_S_combos_S_cent_30_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_30, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 5)
#define DT_N_S_combos_S_cent_30_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_30, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_30, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_30, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_30, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_30, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_30, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_30, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_30, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_30_P_layers_LEN 6
#define DT_N_S_combos_S_cent_30_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_4
 *
 * Node identifier: DT_N_S_combos_S_cent_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_4_PATH "/combos/cent_4"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_4_FULL_NAME "cent_4"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_4_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_4_CHILD_IDX 92

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_4_ORD 98
#define DT_N_S_combos_S_cent_4_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_4_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_4_REG_NUM 0
#define DT_N_S_combos_S_cent_4_RANGES_NUM 0
#define DT_N_S_combos_S_cent_4_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_4_IRQ_NUM 0
#define DT_N_S_combos_S_cent_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_1_VAL_param1 34013218
#define DT_N_S_combos_S_cent_4_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_4, bindings, 0) \
	fn(DT_N_S_combos_S_cent_4, bindings, 1)
#define DT_N_S_combos_S_cent_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_4, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, bindings, 1)
#define DT_N_S_combos_S_cent_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_4, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_4, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_4_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_key_positions {4 /* 0x4 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_4_P_key_positions_IDX_0 4
#define DT_N_S_combos_S_cent_4_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_4_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_4, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_4, key_positions, 1)
#define DT_N_S_combos_S_cent_4_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_4, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, key_positions, 1)
#define DT_N_S_combos_S_cent_4_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_4, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_4, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_4_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_key_positions_leader {4 /* 0x4 */}
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_IDX_0 4
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_4, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_4, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_4, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_4, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_4_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_4_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_4_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_slow_release 1
#define DT_N_S_combos_S_cent_4_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_4_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_4_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_4_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_4_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_4_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_4_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_4_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_4_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_4, layers, 0) \
	fn(DT_N_S_combos_S_cent_4, layers, 1) \
	fn(DT_N_S_combos_S_cent_4, layers, 2) \
	fn(DT_N_S_combos_S_cent_4, layers, 3) \
	fn(DT_N_S_combos_S_cent_4, layers, 4) \
	fn(DT_N_S_combos_S_cent_4, layers, 5)
#define DT_N_S_combos_S_cent_4_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_4, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 5)
#define DT_N_S_combos_S_cent_4_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_4, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_4, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_4, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_4, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_4, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_4, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_4, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_4, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_4_P_layers_LEN 6
#define DT_N_S_combos_S_cent_4_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_5
 *
 * Node identifier: DT_N_S_combos_S_cent_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_5_PATH "/combos/cent_5"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_5_FULL_NAME "cent_5"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_5_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_5_CHILD_IDX 93

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_5_ORD 99
#define DT_N_S_combos_S_cent_5_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_5_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_5_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_5_REG_NUM 0
#define DT_N_S_combos_S_cent_5_RANGES_NUM 0
#define DT_N_S_combos_S_cent_5_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_5_IRQ_NUM 0
#define DT_N_S_combos_S_cent_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_1_VAL_param1 34013219
#define DT_N_S_combos_S_cent_5_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_5, bindings, 0) \
	fn(DT_N_S_combos_S_cent_5, bindings, 1)
#define DT_N_S_combos_S_cent_5_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_5, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, bindings, 1)
#define DT_N_S_combos_S_cent_5_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_5, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_5, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_5, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_5_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_key_positions {5 /* 0x5 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_5_P_key_positions_IDX_0 5
#define DT_N_S_combos_S_cent_5_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_5_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_5, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_5, key_positions, 1)
#define DT_N_S_combos_S_cent_5_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_5, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, key_positions, 1)
#define DT_N_S_combos_S_cent_5_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_5, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_5, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_5_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_key_positions_leader {5 /* 0x5 */}
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_IDX_0 5
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_5, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_5, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_5, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_5, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_5_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_5_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_5_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_slow_release 1
#define DT_N_S_combos_S_cent_5_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_5_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_5_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_5_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_5_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_5_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_5_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_5_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_5_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_5, layers, 0) \
	fn(DT_N_S_combos_S_cent_5, layers, 1) \
	fn(DT_N_S_combos_S_cent_5, layers, 2) \
	fn(DT_N_S_combos_S_cent_5, layers, 3) \
	fn(DT_N_S_combos_S_cent_5, layers, 4) \
	fn(DT_N_S_combos_S_cent_5, layers, 5)
#define DT_N_S_combos_S_cent_5_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_5, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 5)
#define DT_N_S_combos_S_cent_5_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_5, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_5, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_5, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_5, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_5, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_5, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_5, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_5, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_5_P_layers_LEN 6
#define DT_N_S_combos_S_cent_5_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_6
 *
 * Node identifier: DT_N_S_combos_S_cent_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_6_PATH "/combos/cent_6"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_6_FULL_NAME "cent_6"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_6_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_6_CHILD_IDX 94

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_6_ORD 100
#define DT_N_S_combos_S_cent_6_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_6_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_6_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_6_REG_NUM 0
#define DT_N_S_combos_S_cent_6_RANGES_NUM 0
#define DT_N_S_combos_S_cent_6_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_6_IRQ_NUM 0
#define DT_N_S_combos_S_cent_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_1_VAL_param1 34013220
#define DT_N_S_combos_S_cent_6_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_6, bindings, 0) \
	fn(DT_N_S_combos_S_cent_6, bindings, 1)
#define DT_N_S_combos_S_cent_6_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_6, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, bindings, 1)
#define DT_N_S_combos_S_cent_6_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_6, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_6, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_6, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_6_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_key_positions {6 /* 0x6 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_6_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_cent_6_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_6_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_6, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_6, key_positions, 1)
#define DT_N_S_combos_S_cent_6_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_6, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, key_positions, 1)
#define DT_N_S_combos_S_cent_6_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_6, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_6, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_6, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_6_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_key_positions_leader {6 /* 0x6 */}
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_IDX_0 6
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_6, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_6, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_6, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_6, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_6_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_6_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_6_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_slow_release 1
#define DT_N_S_combos_S_cent_6_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_6_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_6_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_6_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_6_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_6_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_6_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_6_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_6_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_6, layers, 0) \
	fn(DT_N_S_combos_S_cent_6, layers, 1) \
	fn(DT_N_S_combos_S_cent_6, layers, 2) \
	fn(DT_N_S_combos_S_cent_6, layers, 3) \
	fn(DT_N_S_combos_S_cent_6, layers, 4) \
	fn(DT_N_S_combos_S_cent_6, layers, 5)
#define DT_N_S_combos_S_cent_6_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_6, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 5)
#define DT_N_S_combos_S_cent_6_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_6, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_6, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_6, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_6, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_6, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_6, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_6, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_6, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_6_P_layers_LEN 6
#define DT_N_S_combos_S_cent_6_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_7
 *
 * Node identifier: DT_N_S_combos_S_cent_7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_7_PATH "/combos/cent_7"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_7_FULL_NAME "cent_7"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_7_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_7_CHILD_IDX 95

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_7_ORD 101
#define DT_N_S_combos_S_cent_7_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_7_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_7_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_7_REG_NUM 0
#define DT_N_S_combos_S_cent_7_RANGES_NUM 0
#define DT_N_S_combos_S_cent_7_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_7_IRQ_NUM 0
#define DT_N_S_combos_S_cent_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_1_VAL_param1 34013221
#define DT_N_S_combos_S_cent_7_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_7, bindings, 0) \
	fn(DT_N_S_combos_S_cent_7, bindings, 1)
#define DT_N_S_combos_S_cent_7_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_7, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, bindings, 1)
#define DT_N_S_combos_S_cent_7_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_7, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_7, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_7, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_7_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_key_positions {7 /* 0x7 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_7_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_cent_7_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_7_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_7, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_7, key_positions, 1)
#define DT_N_S_combos_S_cent_7_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_7, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, key_positions, 1)
#define DT_N_S_combos_S_cent_7_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_7, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_7, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_7_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_key_positions_leader {7 /* 0x7 */}
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_IDX_0 7
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_7, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_7, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_7, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_7, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_7_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_7_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_7_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_slow_release 1
#define DT_N_S_combos_S_cent_7_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_7_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_7_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_7_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_7_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_7_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_7_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_7_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_7_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_7, layers, 0) \
	fn(DT_N_S_combos_S_cent_7, layers, 1) \
	fn(DT_N_S_combos_S_cent_7, layers, 2) \
	fn(DT_N_S_combos_S_cent_7, layers, 3) \
	fn(DT_N_S_combos_S_cent_7, layers, 4) \
	fn(DT_N_S_combos_S_cent_7, layers, 5)
#define DT_N_S_combos_S_cent_7_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_7, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 5)
#define DT_N_S_combos_S_cent_7_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_7, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_7, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_7, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_7, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_7, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_7, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_7, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_7, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_7_P_layers_LEN 6
#define DT_N_S_combos_S_cent_7_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_8
 *
 * Node identifier: DT_N_S_combos_S_cent_8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_8_PATH "/combos/cent_8"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_8_FULL_NAME "cent_8"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_8_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_8_CHILD_IDX 96

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_8_ORD 102
#define DT_N_S_combos_S_cent_8_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_8_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_8_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_8_REG_NUM 0
#define DT_N_S_combos_S_cent_8_RANGES_NUM 0
#define DT_N_S_combos_S_cent_8_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_8_IRQ_NUM 0
#define DT_N_S_combos_S_cent_8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_1_VAL_param1 34013222
#define DT_N_S_combos_S_cent_8_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_8, bindings, 0) \
	fn(DT_N_S_combos_S_cent_8, bindings, 1)
#define DT_N_S_combos_S_cent_8_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_8, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, bindings, 1)
#define DT_N_S_combos_S_cent_8_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_8, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_8, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_8, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_8_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_key_positions {8 /* 0x8 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_8_P_key_positions_IDX_0 8
#define DT_N_S_combos_S_cent_8_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_8_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_8, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_8, key_positions, 1)
#define DT_N_S_combos_S_cent_8_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_8, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, key_positions, 1)
#define DT_N_S_combos_S_cent_8_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_8, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_8, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_8, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_8_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_key_positions_leader {8 /* 0x8 */}
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_IDX_0 8
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_8, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_8, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_8, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_8, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_8_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_8_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_8_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_slow_release 1
#define DT_N_S_combos_S_cent_8_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_8_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_8_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_8_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_8_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_8_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_8_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_8_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_8_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_8, layers, 0) \
	fn(DT_N_S_combos_S_cent_8, layers, 1) \
	fn(DT_N_S_combos_S_cent_8, layers, 2) \
	fn(DT_N_S_combos_S_cent_8, layers, 3) \
	fn(DT_N_S_combos_S_cent_8, layers, 4) \
	fn(DT_N_S_combos_S_cent_8, layers, 5)
#define DT_N_S_combos_S_cent_8_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_8, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 5)
#define DT_N_S_combos_S_cent_8_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_8, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_8, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_8, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_8, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_8, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_8, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_8, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_8, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_8_P_layers_LEN 6
#define DT_N_S_combos_S_cent_8_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/cent_9
 *
 * Node identifier: DT_N_S_combos_S_cent_9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_cent_9_PATH "/combos/cent_9"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_cent_9_FULL_NAME "cent_9"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_cent_9_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_cent_9_CHILD_IDX 97

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_cent_9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_cent_9_ORD 103
#define DT_N_S_combos_S_cent_9_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_cent_9_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_cent_9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_cent_9_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_cent_9_REG_NUM 0
#define DT_N_S_combos_S_cent_9_RANGES_NUM 0
#define DT_N_S_combos_S_cent_9_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_cent_9_IRQ_NUM 0
#define DT_N_S_combos_S_cent_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_cent_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_1_VAL_param1 34013223
#define DT_N_S_combos_S_cent_9_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_9, bindings, 0) \
	fn(DT_N_S_combos_S_cent_9, bindings, 1)
#define DT_N_S_combos_S_cent_9_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_9, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, bindings, 1)
#define DT_N_S_combos_S_cent_9_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_9, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_9, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_9, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_bindings_LEN 2
#define DT_N_S_combos_S_cent_9_P_bindings_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_key_positions {9 /* 0x9 */, 35 /* 0x23 */}
#define DT_N_S_combos_S_cent_9_P_key_positions_IDX_0 9
#define DT_N_S_combos_S_cent_9_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_key_positions_IDX_1 35
#define DT_N_S_combos_S_cent_9_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_9, key_positions, 0) \
	fn(DT_N_S_combos_S_cent_9, key_positions, 1)
#define DT_N_S_combos_S_cent_9_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_9, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, key_positions, 1)
#define DT_N_S_combos_S_cent_9_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_9, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_9, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_9, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_key_positions_LEN 2
#define DT_N_S_combos_S_cent_9_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_key_positions_leader {9 /* 0x9 */}
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_IDX_0 9
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_9, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_9, key_positions_leader, 0)
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_9, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_9, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_cent_9_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_timeout_ms 2000
#define DT_N_S_combos_S_cent_9_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_cent_9_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_slow_release 1
#define DT_N_S_combos_S_cent_9_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_cent_9_P_layers_IDX_0 0
#define DT_N_S_combos_S_cent_9_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_layers_IDX_1 5
#define DT_N_S_combos_S_cent_9_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_layers_IDX_2 3
#define DT_N_S_combos_S_cent_9_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_layers_IDX_3 2
#define DT_N_S_combos_S_cent_9_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_layers_IDX_4 1
#define DT_N_S_combos_S_cent_9_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_layers_IDX_5 6
#define DT_N_S_combos_S_cent_9_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_cent_9_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_cent_9, layers, 0) \
	fn(DT_N_S_combos_S_cent_9, layers, 1) \
	fn(DT_N_S_combos_S_cent_9, layers, 2) \
	fn(DT_N_S_combos_S_cent_9, layers, 3) \
	fn(DT_N_S_combos_S_cent_9, layers, 4) \
	fn(DT_N_S_combos_S_cent_9, layers, 5)
#define DT_N_S_combos_S_cent_9_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_cent_9, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 5)
#define DT_N_S_combos_S_cent_9_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_cent_9, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_9, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_9, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_9, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_9, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_cent_9, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_cent_9, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_cent_9, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_cent_9_P_layers_LEN 6
#define DT_N_S_combos_S_cent_9_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_COLON
 *
 * Node identifier: DT_N_S_combos_S_combo_colon
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_colon_PATH "/combos/combo_COLON"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_colon_FULL_NAME "combo_COLON"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_colon_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_colon_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_colon_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_colon_ORD 104
#define DT_N_S_combos_S_combo_colon_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_colon_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_colon_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_colon_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_colon_REG_NUM 0
#define DT_N_S_combos_S_combo_colon_RANGES_NUM 0
#define DT_N_S_combos_S_combo_colon_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_colon_IRQ_NUM 0
#define DT_N_S_combos_S_combo_colon_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_colon_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_colon_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_colon_P_bindings_IDX_0_VAL_param1 458807
#define DT_N_S_combos_S_combo_colon_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_colon, bindings, 0)
#define DT_N_S_combos_S_combo_colon_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_colon, bindings, 0)
#define DT_N_S_combos_S_combo_colon_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_colon, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_colon_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_colon, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_colon_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_colon_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_key_positions {18 /* 0x12 */, 29 /* 0x1d */}
#define DT_N_S_combos_S_combo_colon_P_key_positions_IDX_0 18
#define DT_N_S_combos_S_combo_colon_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_key_positions_IDX_1 29
#define DT_N_S_combos_S_combo_colon_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_colon, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_colon, key_positions, 1)
#define DT_N_S_combos_S_combo_colon_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_colon, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, key_positions, 1)
#define DT_N_S_combos_S_combo_colon_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_colon, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_colon, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_colon_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_colon, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_colon_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_colon_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_timeout_ms 500
#define DT_N_S_combos_S_combo_colon_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_colon_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_slow_release 0
#define DT_N_S_combos_S_combo_colon_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_colon_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_colon_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_colon, layers, 0) \
	fn(DT_N_S_combos_S_combo_colon, layers, 1) \
	fn(DT_N_S_combos_S_combo_colon, layers, 2) \
	fn(DT_N_S_combos_S_combo_colon, layers, 3) \
	fn(DT_N_S_combos_S_combo_colon, layers, 4) \
	fn(DT_N_S_combos_S_combo_colon, layers, 5) \
	fn(DT_N_S_combos_S_combo_colon, layers, 6)
#define DT_N_S_combos_S_combo_colon_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_colon, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 6)
#define DT_N_S_combos_S_combo_colon_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_colon, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_colon, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_colon, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_colon, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_colon, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_colon, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_colon, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_colon_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_colon, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_colon, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_colon_P_layers_LEN 7
#define DT_N_S_combos_S_combo_colon_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_FSLH
 *
 * Node identifier: DT_N_S_combos_S_combo_fslh
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_fslh_PATH "/combos/combo_FSLH"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_fslh_FULL_NAME "combo_FSLH"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_fslh_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_fslh_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_fslh_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_fslh_ORD 105
#define DT_N_S_combos_S_combo_fslh_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_fslh_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_fslh_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_fslh_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_fslh_REG_NUM 0
#define DT_N_S_combos_S_combo_fslh_RANGES_NUM 0
#define DT_N_S_combos_S_combo_fslh_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_fslh_IRQ_NUM 0
#define DT_N_S_combos_S_combo_fslh_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_fslh_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_fslh_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_fslh_P_bindings_IDX_0_VAL_param1 458808
#define DT_N_S_combos_S_combo_fslh_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_fslh, bindings, 0)
#define DT_N_S_combos_S_combo_fslh_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_fslh, bindings, 0)
#define DT_N_S_combos_S_combo_fslh_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_fslh, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_fslh_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_fslh, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_fslh_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_fslh_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_key_positions {19 /* 0x13 */, 30 /* 0x1e */}
#define DT_N_S_combos_S_combo_fslh_P_key_positions_IDX_0 19
#define DT_N_S_combos_S_combo_fslh_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_key_positions_IDX_1 30
#define DT_N_S_combos_S_combo_fslh_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_fslh, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_fslh, key_positions, 1)
#define DT_N_S_combos_S_combo_fslh_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_fslh, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, key_positions, 1)
#define DT_N_S_combos_S_combo_fslh_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_fslh, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_fslh, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_fslh_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_fslh, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_fslh_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_fslh_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_timeout_ms 500
#define DT_N_S_combos_S_combo_fslh_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_fslh_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_slow_release 0
#define DT_N_S_combos_S_combo_fslh_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_fslh_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_fslh_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_fslh, layers, 0) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 1) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 2) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 3) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 4) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 5) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 6)
#define DT_N_S_combos_S_combo_fslh_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_fslh, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 6)
#define DT_N_S_combos_S_combo_fslh_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_fslh, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_fslh, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_fslh_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_fslh, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_fslh, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_fslh_P_layers_LEN 7
#define DT_N_S_combos_S_combo_fslh_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM0
 *
 * Node identifier: DT_N_S_combos_S_combo_num0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num0_PATH "/combos/combo_NUM0"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num0_FULL_NAME "combo_NUM0"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num0_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num0_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num0_ORD 106
#define DT_N_S_combos_S_combo_num0_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num0_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num0_REG_NUM 0
#define DT_N_S_combos_S_combo_num0_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num0_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num0_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num0_P_bindings_IDX_0_VAL_param1 458791
#define DT_N_S_combos_S_combo_num0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num0, bindings, 0)
#define DT_N_S_combos_S_combo_num0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num0, bindings, 0)
#define DT_N_S_combos_S_combo_num0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num0, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num0, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num0_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num0_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_key_positions {9 /* 0x9 */, 19 /* 0x13 */}
#define DT_N_S_combos_S_combo_num0_P_key_positions_IDX_0 9
#define DT_N_S_combos_S_combo_num0_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_key_positions_IDX_1 19
#define DT_N_S_combos_S_combo_num0_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num0, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num0, key_positions, 1)
#define DT_N_S_combos_S_combo_num0_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num0, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, key_positions, 1)
#define DT_N_S_combos_S_combo_num0_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num0, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num0_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num0, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num0_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num0_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num0_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num0_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_slow_release 0
#define DT_N_S_combos_S_combo_num0_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num0_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num0_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num0, layers, 0) \
	fn(DT_N_S_combos_S_combo_num0, layers, 1) \
	fn(DT_N_S_combos_S_combo_num0, layers, 2) \
	fn(DT_N_S_combos_S_combo_num0, layers, 3) \
	fn(DT_N_S_combos_S_combo_num0, layers, 4) \
	fn(DT_N_S_combos_S_combo_num0, layers, 5) \
	fn(DT_N_S_combos_S_combo_num0, layers, 6)
#define DT_N_S_combos_S_combo_num0_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num0, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 6)
#define DT_N_S_combos_S_combo_num0_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num0, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num0, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num0, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num0, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num0, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num0, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num0, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num0_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num0, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num0, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num0_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num0_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM1
 *
 * Node identifier: DT_N_S_combos_S_combo_num1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num1_PATH "/combos/combo_NUM1"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num1_FULL_NAME "combo_NUM1"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num1_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num1_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num1_ORD 107
#define DT_N_S_combos_S_combo_num1_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num1_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num1_REG_NUM 0
#define DT_N_S_combos_S_combo_num1_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num1_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num1_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num1_P_bindings_IDX_0_VAL_param1 458782
#define DT_N_S_combos_S_combo_num1_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num1, bindings, 0)
#define DT_N_S_combos_S_combo_num1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num1, bindings, 0)
#define DT_N_S_combos_S_combo_num1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num1, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num1, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num1_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num1_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_key_positions {0 /* 0x0 */, 10 /* 0xa */}
#define DT_N_S_combos_S_combo_num1_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_combo_num1_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_key_positions_IDX_1 10
#define DT_N_S_combos_S_combo_num1_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num1, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num1, key_positions, 1)
#define DT_N_S_combos_S_combo_num1_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num1, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, key_positions, 1)
#define DT_N_S_combos_S_combo_num1_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num1, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num1_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num1, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num1_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num1_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num1_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num1_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_slow_release 0
#define DT_N_S_combos_S_combo_num1_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num1_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num1_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num1, layers, 0) \
	fn(DT_N_S_combos_S_combo_num1, layers, 1) \
	fn(DT_N_S_combos_S_combo_num1, layers, 2) \
	fn(DT_N_S_combos_S_combo_num1, layers, 3) \
	fn(DT_N_S_combos_S_combo_num1, layers, 4) \
	fn(DT_N_S_combos_S_combo_num1, layers, 5) \
	fn(DT_N_S_combos_S_combo_num1, layers, 6)
#define DT_N_S_combos_S_combo_num1_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num1, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 6)
#define DT_N_S_combos_S_combo_num1_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num1, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num1, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num1, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num1, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num1, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num1, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num1, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num1_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num1, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num1, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num1_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num1_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM2
 *
 * Node identifier: DT_N_S_combos_S_combo_num2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num2_PATH "/combos/combo_NUM2"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num2_FULL_NAME "combo_NUM2"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num2_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num2_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num2_ORD 108
#define DT_N_S_combos_S_combo_num2_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num2_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num2_REG_NUM 0
#define DT_N_S_combos_S_combo_num2_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num2_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num2_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num2_P_bindings_IDX_0_VAL_param1 458783
#define DT_N_S_combos_S_combo_num2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num2, bindings, 0)
#define DT_N_S_combos_S_combo_num2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num2, bindings, 0)
#define DT_N_S_combos_S_combo_num2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num2_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num2_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_key_positions {1 /* 0x1 */, 11 /* 0xb */}
#define DT_N_S_combos_S_combo_num2_P_key_positions_IDX_0 1
#define DT_N_S_combos_S_combo_num2_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_key_positions_IDX_1 11
#define DT_N_S_combos_S_combo_num2_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num2, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num2, key_positions, 1)
#define DT_N_S_combos_S_combo_num2_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num2, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, key_positions, 1)
#define DT_N_S_combos_S_combo_num2_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num2, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num2_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num2, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num2_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num2_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num2_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num2_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_slow_release 0
#define DT_N_S_combos_S_combo_num2_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num2_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num2_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num2, layers, 0) \
	fn(DT_N_S_combos_S_combo_num2, layers, 1) \
	fn(DT_N_S_combos_S_combo_num2, layers, 2) \
	fn(DT_N_S_combos_S_combo_num2, layers, 3) \
	fn(DT_N_S_combos_S_combo_num2, layers, 4) \
	fn(DT_N_S_combos_S_combo_num2, layers, 5) \
	fn(DT_N_S_combos_S_combo_num2, layers, 6)
#define DT_N_S_combos_S_combo_num2_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num2, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 6)
#define DT_N_S_combos_S_combo_num2_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num2, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num2, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num2, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num2, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num2, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num2, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num2, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num2_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num2, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num2, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num2_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num2_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM3
 *
 * Node identifier: DT_N_S_combos_S_combo_num3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num3_PATH "/combos/combo_NUM3"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num3_FULL_NAME "combo_NUM3"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num3_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num3_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num3_ORD 109
#define DT_N_S_combos_S_combo_num3_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num3_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num3_REG_NUM 0
#define DT_N_S_combos_S_combo_num3_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num3_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num3_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num3_P_bindings_IDX_0_VAL_param1 458784
#define DT_N_S_combos_S_combo_num3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num3, bindings, 0)
#define DT_N_S_combos_S_combo_num3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num3, bindings, 0)
#define DT_N_S_combos_S_combo_num3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num3, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num3, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num3_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num3_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_key_positions {2 /* 0x2 */, 12 /* 0xc */}
#define DT_N_S_combos_S_combo_num3_P_key_positions_IDX_0 2
#define DT_N_S_combos_S_combo_num3_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_key_positions_IDX_1 12
#define DT_N_S_combos_S_combo_num3_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num3, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num3, key_positions, 1)
#define DT_N_S_combos_S_combo_num3_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num3, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, key_positions, 1)
#define DT_N_S_combos_S_combo_num3_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num3, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num3_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num3, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num3_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num3_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num3_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num3_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_slow_release 0
#define DT_N_S_combos_S_combo_num3_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num3_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num3_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num3, layers, 0) \
	fn(DT_N_S_combos_S_combo_num3, layers, 1) \
	fn(DT_N_S_combos_S_combo_num3, layers, 2) \
	fn(DT_N_S_combos_S_combo_num3, layers, 3) \
	fn(DT_N_S_combos_S_combo_num3, layers, 4) \
	fn(DT_N_S_combos_S_combo_num3, layers, 5) \
	fn(DT_N_S_combos_S_combo_num3, layers, 6)
#define DT_N_S_combos_S_combo_num3_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num3, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 6)
#define DT_N_S_combos_S_combo_num3_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num3, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num3, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num3, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num3, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num3, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num3, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num3, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num3_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num3, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num3, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num3_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num3_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM4
 *
 * Node identifier: DT_N_S_combos_S_combo_num4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num4_PATH "/combos/combo_NUM4"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num4_FULL_NAME "combo_NUM4"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num4_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num4_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num4_ORD 110
#define DT_N_S_combos_S_combo_num4_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num4_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num4_REG_NUM 0
#define DT_N_S_combos_S_combo_num4_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num4_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num4_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num4_P_bindings_IDX_0_VAL_param1 458785
#define DT_N_S_combos_S_combo_num4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num4, bindings, 0)
#define DT_N_S_combos_S_combo_num4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num4, bindings, 0)
#define DT_N_S_combos_S_combo_num4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num4, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num4, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num4_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num4_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_key_positions {3 /* 0x3 */, 13 /* 0xd */}
#define DT_N_S_combos_S_combo_num4_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_combo_num4_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_key_positions_IDX_1 13
#define DT_N_S_combos_S_combo_num4_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num4, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num4, key_positions, 1)
#define DT_N_S_combos_S_combo_num4_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num4, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, key_positions, 1)
#define DT_N_S_combos_S_combo_num4_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num4, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num4_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num4, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num4_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num4_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num4_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num4_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_slow_release 0
#define DT_N_S_combos_S_combo_num4_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num4_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num4_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num4, layers, 0) \
	fn(DT_N_S_combos_S_combo_num4, layers, 1) \
	fn(DT_N_S_combos_S_combo_num4, layers, 2) \
	fn(DT_N_S_combos_S_combo_num4, layers, 3) \
	fn(DT_N_S_combos_S_combo_num4, layers, 4) \
	fn(DT_N_S_combos_S_combo_num4, layers, 5) \
	fn(DT_N_S_combos_S_combo_num4, layers, 6)
#define DT_N_S_combos_S_combo_num4_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num4, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 6)
#define DT_N_S_combos_S_combo_num4_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num4, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num4, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num4, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num4, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num4, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num4, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num4, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num4_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num4, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num4, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num4_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num4_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM5
 *
 * Node identifier: DT_N_S_combos_S_combo_num5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num5_PATH "/combos/combo_NUM5"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num5_FULL_NAME "combo_NUM5"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num5_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num5_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num5_ORD 111
#define DT_N_S_combos_S_combo_num5_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num5_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num5_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num5_REG_NUM 0
#define DT_N_S_combos_S_combo_num5_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num5_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num5_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num5_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num5_P_bindings_IDX_0_VAL_param1 458786
#define DT_N_S_combos_S_combo_num5_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num5, bindings, 0)
#define DT_N_S_combos_S_combo_num5_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num5, bindings, 0)
#define DT_N_S_combos_S_combo_num5_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num5, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num5_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num5, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num5_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num5_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_key_positions {4 /* 0x4 */, 14 /* 0xe */}
#define DT_N_S_combos_S_combo_num5_P_key_positions_IDX_0 4
#define DT_N_S_combos_S_combo_num5_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_key_positions_IDX_1 14
#define DT_N_S_combos_S_combo_num5_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num5, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num5, key_positions, 1)
#define DT_N_S_combos_S_combo_num5_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num5, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, key_positions, 1)
#define DT_N_S_combos_S_combo_num5_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num5, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num5_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num5, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num5_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num5_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num5_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num5_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_slow_release 0
#define DT_N_S_combos_S_combo_num5_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num5_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num5_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num5, layers, 0) \
	fn(DT_N_S_combos_S_combo_num5, layers, 1) \
	fn(DT_N_S_combos_S_combo_num5, layers, 2) \
	fn(DT_N_S_combos_S_combo_num5, layers, 3) \
	fn(DT_N_S_combos_S_combo_num5, layers, 4) \
	fn(DT_N_S_combos_S_combo_num5, layers, 5) \
	fn(DT_N_S_combos_S_combo_num5, layers, 6)
#define DT_N_S_combos_S_combo_num5_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num5, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 6)
#define DT_N_S_combos_S_combo_num5_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num5, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num5, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num5, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num5, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num5, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num5, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num5, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num5_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num5, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num5, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num5_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num5_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM6
 *
 * Node identifier: DT_N_S_combos_S_combo_num6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num6_PATH "/combos/combo_NUM6"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num6_FULL_NAME "combo_NUM6"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num6_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num6_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num6_ORD 112
#define DT_N_S_combos_S_combo_num6_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num6_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num6_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num6_REG_NUM 0
#define DT_N_S_combos_S_combo_num6_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num6_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num6_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num6_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num6_P_bindings_IDX_0_VAL_param1 458787
#define DT_N_S_combos_S_combo_num6_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num6, bindings, 0)
#define DT_N_S_combos_S_combo_num6_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num6, bindings, 0)
#define DT_N_S_combos_S_combo_num6_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num6, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num6_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num6, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num6_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num6_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_key_positions {5 /* 0x5 */, 15 /* 0xf */}
#define DT_N_S_combos_S_combo_num6_P_key_positions_IDX_0 5
#define DT_N_S_combos_S_combo_num6_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_key_positions_IDX_1 15
#define DT_N_S_combos_S_combo_num6_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num6, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num6, key_positions, 1)
#define DT_N_S_combos_S_combo_num6_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num6, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, key_positions, 1)
#define DT_N_S_combos_S_combo_num6_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num6, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num6, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num6_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num6, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num6_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num6_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num6_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num6_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_slow_release 0
#define DT_N_S_combos_S_combo_num6_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num6_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num6_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num6, layers, 0) \
	fn(DT_N_S_combos_S_combo_num6, layers, 1) \
	fn(DT_N_S_combos_S_combo_num6, layers, 2) \
	fn(DT_N_S_combos_S_combo_num6, layers, 3) \
	fn(DT_N_S_combos_S_combo_num6, layers, 4) \
	fn(DT_N_S_combos_S_combo_num6, layers, 5) \
	fn(DT_N_S_combos_S_combo_num6, layers, 6)
#define DT_N_S_combos_S_combo_num6_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num6, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 6)
#define DT_N_S_combos_S_combo_num6_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num6, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num6, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num6, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num6, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num6, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num6, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num6, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num6_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num6, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num6, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num6_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num6_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM7
 *
 * Node identifier: DT_N_S_combos_S_combo_num7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num7_PATH "/combos/combo_NUM7"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num7_FULL_NAME "combo_NUM7"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num7_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num7_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num7_ORD 113
#define DT_N_S_combos_S_combo_num7_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num7_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num7_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num7_REG_NUM 0
#define DT_N_S_combos_S_combo_num7_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num7_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num7_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num7_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num7_P_bindings_IDX_0_VAL_param1 458788
#define DT_N_S_combos_S_combo_num7_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num7, bindings, 0)
#define DT_N_S_combos_S_combo_num7_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num7, bindings, 0)
#define DT_N_S_combos_S_combo_num7_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num7, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num7_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num7, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num7_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num7_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_key_positions {6 /* 0x6 */, 16 /* 0x10 */}
#define DT_N_S_combos_S_combo_num7_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_combo_num7_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_key_positions_IDX_1 16
#define DT_N_S_combos_S_combo_num7_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num7, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num7, key_positions, 1)
#define DT_N_S_combos_S_combo_num7_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num7, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, key_positions, 1)
#define DT_N_S_combos_S_combo_num7_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num7, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num7_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num7, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num7_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num7_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num7_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num7_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_slow_release 0
#define DT_N_S_combos_S_combo_num7_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num7_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num7_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num7, layers, 0) \
	fn(DT_N_S_combos_S_combo_num7, layers, 1) \
	fn(DT_N_S_combos_S_combo_num7, layers, 2) \
	fn(DT_N_S_combos_S_combo_num7, layers, 3) \
	fn(DT_N_S_combos_S_combo_num7, layers, 4) \
	fn(DT_N_S_combos_S_combo_num7, layers, 5) \
	fn(DT_N_S_combos_S_combo_num7, layers, 6)
#define DT_N_S_combos_S_combo_num7_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num7, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 6)
#define DT_N_S_combos_S_combo_num7_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num7, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num7, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num7, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num7, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num7, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num7, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num7, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num7_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num7, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num7, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num7_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num7_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM8
 *
 * Node identifier: DT_N_S_combos_S_combo_num8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num8_PATH "/combos/combo_NUM8"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num8_FULL_NAME "combo_NUM8"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num8_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num8_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num8_ORD 114
#define DT_N_S_combos_S_combo_num8_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num8_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num8_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num8_REG_NUM 0
#define DT_N_S_combos_S_combo_num8_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num8_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num8_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num8_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num8_P_bindings_IDX_0_VAL_param1 458789
#define DT_N_S_combos_S_combo_num8_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num8, bindings, 0)
#define DT_N_S_combos_S_combo_num8_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num8, bindings, 0)
#define DT_N_S_combos_S_combo_num8_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num8, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num8_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num8, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num8_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num8_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_key_positions {7 /* 0x7 */, 17 /* 0x11 */}
#define DT_N_S_combos_S_combo_num8_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_combo_num8_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_key_positions_IDX_1 17
#define DT_N_S_combos_S_combo_num8_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num8, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num8, key_positions, 1)
#define DT_N_S_combos_S_combo_num8_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num8, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, key_positions, 1)
#define DT_N_S_combos_S_combo_num8_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num8, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num8, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num8_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num8, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num8_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num8_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num8_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num8_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_slow_release 0
#define DT_N_S_combos_S_combo_num8_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num8_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num8_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num8, layers, 0) \
	fn(DT_N_S_combos_S_combo_num8, layers, 1) \
	fn(DT_N_S_combos_S_combo_num8, layers, 2) \
	fn(DT_N_S_combos_S_combo_num8, layers, 3) \
	fn(DT_N_S_combos_S_combo_num8, layers, 4) \
	fn(DT_N_S_combos_S_combo_num8, layers, 5) \
	fn(DT_N_S_combos_S_combo_num8, layers, 6)
#define DT_N_S_combos_S_combo_num8_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num8, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 6)
#define DT_N_S_combos_S_combo_num8_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num8, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num8, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num8, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num8, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num8, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num8, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num8, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num8_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num8, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num8, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num8_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num8_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_NUM9
 *
 * Node identifier: DT_N_S_combos_S_combo_num9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_num9_PATH "/combos/combo_NUM9"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_num9_FULL_NAME "combo_NUM9"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_num9_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_num9_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_num9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_num9_ORD 115
#define DT_N_S_combos_S_combo_num9_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_num9_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_num9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_num9_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_num9_REG_NUM 0
#define DT_N_S_combos_S_combo_num9_RANGES_NUM 0
#define DT_N_S_combos_S_combo_num9_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_num9_IRQ_NUM 0
#define DT_N_S_combos_S_combo_num9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_num9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_num9_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_num9_P_bindings_IDX_0_VAL_param1 458790
#define DT_N_S_combos_S_combo_num9_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num9, bindings, 0)
#define DT_N_S_combos_S_combo_num9_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num9, bindings, 0)
#define DT_N_S_combos_S_combo_num9_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num9, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num9_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num9, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num9_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_num9_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_key_positions {8 /* 0x8 */, 18 /* 0x12 */}
#define DT_N_S_combos_S_combo_num9_P_key_positions_IDX_0 8
#define DT_N_S_combos_S_combo_num9_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_key_positions_IDX_1 18
#define DT_N_S_combos_S_combo_num9_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num9, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_num9, key_positions, 1)
#define DT_N_S_combos_S_combo_num9_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num9, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, key_positions, 1)
#define DT_N_S_combos_S_combo_num9_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num9, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num9, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num9_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num9, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num9_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_num9_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_timeout_ms 500
#define DT_N_S_combos_S_combo_num9_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_num9_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_slow_release 0
#define DT_N_S_combos_S_combo_num9_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_num9_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_num9_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_num9, layers, 0) \
	fn(DT_N_S_combos_S_combo_num9, layers, 1) \
	fn(DT_N_S_combos_S_combo_num9, layers, 2) \
	fn(DT_N_S_combos_S_combo_num9, layers, 3) \
	fn(DT_N_S_combos_S_combo_num9, layers, 4) \
	fn(DT_N_S_combos_S_combo_num9, layers, 5) \
	fn(DT_N_S_combos_S_combo_num9, layers, 6)
#define DT_N_S_combos_S_combo_num9_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_num9, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 6)
#define DT_N_S_combos_S_combo_num9_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_num9, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num9, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num9, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num9, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num9, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num9, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_num9, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num9_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_num9, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_num9, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_num9_P_layers_LEN 7
#define DT_N_S_combos_S_combo_num9_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_SEMI
 *
 * Node identifier: DT_N_S_combos_S_combo_semi
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_semi_PATH "/combos/combo_SEMI"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_semi_FULL_NAME "combo_SEMI"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_semi_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_semi_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_semi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_semi_ORD 116
#define DT_N_S_combos_S_combo_semi_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_semi_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_semi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_semi_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_semi_REG_NUM 0
#define DT_N_S_combos_S_combo_semi_RANGES_NUM 0
#define DT_N_S_combos_S_combo_semi_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_semi_IRQ_NUM 0
#define DT_N_S_combos_S_combo_semi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_semi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_semi_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_semi_P_bindings_IDX_0_VAL_param1 458806
#define DT_N_S_combos_S_combo_semi_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_semi, bindings, 0)
#define DT_N_S_combos_S_combo_semi_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_semi, bindings, 0)
#define DT_N_S_combos_S_combo_semi_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_semi, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_semi_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_semi, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_semi_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_semi_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_key_positions {17 /* 0x11 */, 28 /* 0x1c */}
#define DT_N_S_combos_S_combo_semi_P_key_positions_IDX_0 17
#define DT_N_S_combos_S_combo_semi_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_key_positions_IDX_1 28
#define DT_N_S_combos_S_combo_semi_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_semi, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_semi, key_positions, 1)
#define DT_N_S_combos_S_combo_semi_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_semi, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, key_positions, 1)
#define DT_N_S_combos_S_combo_semi_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_semi, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_semi, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_semi_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_semi, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_semi_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_semi_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_timeout_ms 500
#define DT_N_S_combos_S_combo_semi_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_semi_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_slow_release 0
#define DT_N_S_combos_S_combo_semi_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_semi_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_semi_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_semi, layers, 0) \
	fn(DT_N_S_combos_S_combo_semi, layers, 1) \
	fn(DT_N_S_combos_S_combo_semi, layers, 2) \
	fn(DT_N_S_combos_S_combo_semi, layers, 3) \
	fn(DT_N_S_combos_S_combo_semi, layers, 4) \
	fn(DT_N_S_combos_S_combo_semi, layers, 5) \
	fn(DT_N_S_combos_S_combo_semi, layers, 6)
#define DT_N_S_combos_S_combo_semi_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_semi, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 6)
#define DT_N_S_combos_S_combo_semi_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_semi, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_semi, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_semi, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_semi, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_semi, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_semi, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_semi, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_semi_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_semi, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_semi, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_semi_P_layers_LEN 7
#define DT_N_S_combos_S_combo_semi_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/toggle_layer_off_only
 *
 * Node identifier: DT_N_S_behaviors_S_toggle_layer_off_only
 *
 * Binding (compatible = zmk,behavior-toggle-layer):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-toggle-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_PATH "/behaviors/toggle_layer_off_only"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_FULL_NAME "toggle_layer_off_only"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_ORD 117
#define DT_N_S_behaviors_S_toggle_layer_off_only_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_SUPPORTS_ORDS \
	118, /* /combos/combo_adj_tog_off */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_EXISTS 1
#define DT_N_INST_1_zmk_behavior_toggle_layer DT_N_S_behaviors_S_toggle_layer_off_only
#define DT_N_NODELABEL_tog_off                DT_N_S_behaviors_S_toggle_layer_off_only

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_REG_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_off_only_RANGES_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_off_only_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_toggle_layer_off_only_IRQ_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_off_only_COMPAT_MATCHES_zmk_behavior_toggle_layer 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_toggle_layer_off_only_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_COMPAT_MODEL_IDX_0 "behavior-toggle-layer"
#define DT_N_S_behaviors_S_toggle_layer_off_only_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode "off"
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_STRING_UNQUOTED off
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_STRING_TOKEN off
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_STRING_UPPER_TOKEN OFF
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_IDX_0 "off"
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_ENUM_IDX 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_ENUM_VAL_off_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_ENUM_TOKEN off
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_ENUM_UPPER_TOKEN OFF
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_toggle_layer_off_only, toggle_mode, 0)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_toggle_layer_off_only, toggle_mode, 0)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_toggle_layer_off_only, toggle_mode, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_toggle_layer_off_only, toggle_mode, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_LEN 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_toggle_mode_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name "Toggle Layer Off"
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_STRING_UNQUOTED Toggle Layer Off
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_STRING_TOKEN Toggle_Layer_Off
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_STRING_UPPER_TOKEN TOGGLE_LAYER_OFF
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_IDX_0 "Toggle Layer Off"
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_toggle_layer_off_only, display_name, 0)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_toggle_layer_off_only, display_name, 0)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_toggle_layer_off_only, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_toggle_layer_off_only, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_LEN 1
#define DT_N_S_behaviors_S_toggle_layer_off_only_P_display_name_EXISTS 1

/*
 * Devicetree node: /combos/combo_adj_tog_off
 *
 * Node identifier: DT_N_S_combos_S_combo_adj_tog_off
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_adj_tog_off_PATH "/combos/combo_adj_tog_off"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_adj_tog_off_FULL_NAME "combo_adj_tog_off"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_adj_tog_off_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_adj_tog_off_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_adj_tog_off_ORD 118
#define DT_N_S_combos_S_combo_adj_tog_off_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_adj_tog_off_REQUIRES_ORDS \
	39, /* /combos */ \
	117, /* /behaviors/toggle_layer_off_only */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_adj_tog_off_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_adj_tog_off_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_adj_tog_off_REG_NUM 0
#define DT_N_S_combos_S_combo_adj_tog_off_RANGES_NUM 0
#define DT_N_S_combos_S_combo_adj_tog_off_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_adj_tog_off_IRQ_NUM 0
#define DT_N_S_combos_S_combo_adj_tog_off_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_adj_tog_off_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_IDX_0_PH DT_N_S_behaviors_S_toggle_layer_off_only
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_IDX_0_VAL_param1 7
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_adj_tog_off, bindings, 0)
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_adj_tog_off, bindings, 0)
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_adj_tog_off, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_adj_tog_off, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */}
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_1 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_2 2
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_3 3
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 2) \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 3)
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 3)
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_off, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_LEN 4
#define DT_N_S_combos_S_combo_adj_tog_off_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_timeout_ms 500
#define DT_N_S_combos_S_combo_adj_tog_off_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_adj_tog_off_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_slow_release 0
#define DT_N_S_combos_S_combo_adj_tog_off_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers {7 /* 0x7 */}
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_IDX_0 7
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_adj_tog_off, layers, 0)
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_adj_tog_off, layers, 0)
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_adj_tog_off, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_adj_tog_off, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_LEN 1
#define DT_N_S_combos_S_combo_adj_tog_off_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/toggle_layer_on_only
 *
 * Node identifier: DT_N_S_behaviors_S_toggle_layer_on_only
 *
 * Binding (compatible = zmk,behavior-toggle-layer):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-toggle-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_PATH "/behaviors/toggle_layer_on_only"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_FULL_NAME "toggle_layer_on_only"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_ORD 119
#define DT_N_S_behaviors_S_toggle_layer_on_only_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_SUPPORTS_ORDS \
	120, /* /combos/combo_adj_tog_on */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_EXISTS 1
#define DT_N_INST_0_zmk_behavior_toggle_layer DT_N_S_behaviors_S_toggle_layer_on_only
#define DT_N_NODELABEL_tog_on                 DT_N_S_behaviors_S_toggle_layer_on_only

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_REG_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_on_only_RANGES_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_on_only_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_toggle_layer_on_only_IRQ_NUM 0
#define DT_N_S_behaviors_S_toggle_layer_on_only_COMPAT_MATCHES_zmk_behavior_toggle_layer 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_toggle_layer_on_only_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_COMPAT_MODEL_IDX_0 "behavior-toggle-layer"
#define DT_N_S_behaviors_S_toggle_layer_on_only_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode "on"
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_STRING_UNQUOTED on
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_STRING_TOKEN on
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_STRING_UPPER_TOKEN ON
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_IDX_0 "on"
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_ENUM_IDX 0
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_ENUM_VAL_on_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_ENUM_TOKEN on
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_ENUM_UPPER_TOKEN ON
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_toggle_layer_on_only, toggle_mode, 0)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_toggle_layer_on_only, toggle_mode, 0)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_toggle_layer_on_only, toggle_mode, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_toggle_layer_on_only, toggle_mode, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_LEN 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_toggle_mode_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name "Toggle Layer On"
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_STRING_UNQUOTED Toggle Layer On
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_STRING_TOKEN Toggle_Layer_On
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_STRING_UPPER_TOKEN TOGGLE_LAYER_ON
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_IDX_0 "Toggle Layer On"
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_toggle_layer_on_only, display_name, 0)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_toggle_layer_on_only, display_name, 0)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_toggle_layer_on_only, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_toggle_layer_on_only, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_LEN 1
#define DT_N_S_behaviors_S_toggle_layer_on_only_P_display_name_EXISTS 1

/*
 * Devicetree node: /combos/combo_adj_tog_on
 *
 * Node identifier: DT_N_S_combos_S_combo_adj_tog_on
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_adj_tog_on_PATH "/combos/combo_adj_tog_on"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_adj_tog_on_FULL_NAME "combo_adj_tog_on"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_adj_tog_on_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_adj_tog_on_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_adj_tog_on_ORD 120
#define DT_N_S_combos_S_combo_adj_tog_on_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_adj_tog_on_REQUIRES_ORDS \
	39, /* /combos */ \
	119, /* /behaviors/toggle_layer_on_only */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_adj_tog_on_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_adj_tog_on_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_adj_tog_on_REG_NUM 0
#define DT_N_S_combos_S_combo_adj_tog_on_RANGES_NUM 0
#define DT_N_S_combos_S_combo_adj_tog_on_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_adj_tog_on_IRQ_NUM 0
#define DT_N_S_combos_S_combo_adj_tog_on_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_adj_tog_on_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_IDX_0_PH DT_N_S_behaviors_S_toggle_layer_on_only
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_IDX_0_VAL_param1 7
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_adj_tog_on, bindings, 0)
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_adj_tog_on, bindings, 0)
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_adj_tog_on, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_adj_tog_on, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */}
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_1 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_2 2
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_3 3
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 2) \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 3)
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 3)
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_adj_tog_on, key_positions, 3, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_LEN 4
#define DT_N_S_combos_S_combo_adj_tog_on_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_timeout_ms 500
#define DT_N_S_combos_S_combo_adj_tog_on_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_adj_tog_on_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_slow_release 0
#define DT_N_S_combos_S_combo_adj_tog_on_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers {5 /* 0x5 */}
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_IDX_0 5
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_adj_tog_on, layers, 0)
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_adj_tog_on, layers, 0)
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_adj_tog_on, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_adj_tog_on, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_LEN 1
#define DT_N_S_combos_S_combo_adj_tog_on_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_az
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_az
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_az_PATH "/combos/combo_comb_az"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_az_FULL_NAME "combo_comb_az"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_az_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_az_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_az_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_az_ORD 121
#define DT_N_S_combos_S_combo_comb_az_ORD_STR_SORTABLE 00121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_az_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_az_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_az_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_az_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_az_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_az_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_az_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_az_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_az_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_az_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_az_P_bindings_IDX_0_VAL_param1 458801
#define DT_N_S_combos_S_combo_comb_az_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_az, bindings, 0)
#define DT_N_S_combos_S_combo_comb_az_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_az, bindings, 0)
#define DT_N_S_combos_S_combo_comb_az_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_az, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_az_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_az, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_az_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_az_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_key_positions {10 /* 0xa */, 21 /* 0x15 */}
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_IDX_0 10
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_IDX_1 21
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_az, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_az, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_az, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_az, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_az, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_az, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_comb_az_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_timeout_ms 500
#define DT_N_S_combos_S_combo_comb_az_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_comb_az_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_slow_release 0
#define DT_N_S_combos_S_combo_comb_az_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_az_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_az_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_az, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 6)
#define DT_N_S_combos_S_combo_comb_az_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_az, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 6)
#define DT_N_S_combos_S_combo_comb_az_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_az, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_az_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_az, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_az, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_az_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_az_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_cd
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_cd
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_cd_PATH "/combos/combo_comb_cd"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_cd_FULL_NAME "combo_comb_cd"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_cd_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_cd_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_cd_ORD 122
#define DT_N_S_combos_S_combo_comb_cd_ORD_STR_SORTABLE 00122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_cd_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_cd_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_cd_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_cd_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_cd_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_cd_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_cd_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_cd_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_cd_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_IDX_0_VAL_param1 458794
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_cd, bindings, 0)
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_cd, bindings, 0)
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_cd, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_cd, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_cd_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions {22 /* 0x16 */, 23 /* 0x17 */, 24 /* 0x18 */}
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_IDX_0 22
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_IDX_1 23
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_IDX_2 24
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_comb_cd_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_cd_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_cd_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_cd_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_cd_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_cd_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_cd, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 6)
#define DT_N_S_combos_S_combo_comb_cd_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_cd, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 6)
#define DT_N_S_combos_S_combo_comb_cd_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_cd, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_cd_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_cd, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_cd, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_cd_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_cd_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_fp
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_fp
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_fp_PATH "/combos/combo_comb_fp"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_fp_FULL_NAME "combo_comb_fp"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_fp_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_fp_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_fp_ORD 123
#define DT_N_S_combos_S_combo_comb_fp_ORD_STR_SORTABLE 00123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_fp_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_fp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_fp_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_fp_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_fp_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_fp_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_fp_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_fp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_fp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_IDX_0_VAL_param1 458796
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_fp, bindings, 0)
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_fp, bindings, 0)
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_fp, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_fp, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_fp_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions {1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */}
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_IDX_0 1
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_IDX_1 2
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_IDX_2 3
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_comb_fp_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_fp_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_fp_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_fp_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_fp_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_fp_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_fp, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 6)
#define DT_N_S_combos_S_combo_comb_fp_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_fp, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 6)
#define DT_N_S_combos_S_combo_comb_fp_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_fp, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_fp_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_fp, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_fp, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_fp_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_fp_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_gv
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_gv
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_gv_PATH "/combos/combo_comb_gv"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_gv_FULL_NAME "combo_comb_gv"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_gv_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_gv_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_gv_ORD 124
#define DT_N_S_combos_S_combo_comb_gv_ORD_STR_SORTABLE 00124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_gv_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_gv_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_gv_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_gv_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_gv_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_gv_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_gv_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_gv_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_gv_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_IDX_0_VAL_param1 458797
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_gv, bindings, 0)
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_gv, bindings, 0)
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_gv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_gv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_gv_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions {14 /* 0xe */, 25 /* 0x19 */}
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_IDX_0 14
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_IDX_1 25
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_comb_gv_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_timeout_ms 500
#define DT_N_S_combos_S_combo_comb_gv_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_comb_gv_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_slow_release 0
#define DT_N_S_combos_S_combo_comb_gv_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_gv_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_gv_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_gv, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 6)
#define DT_N_S_combos_S_combo_comb_gv_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_gv, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 6)
#define DT_N_S_combos_S_combo_comb_gv_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_gv, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_gv_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_gv, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_gv, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_gv_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_gv_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_pb
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_pb
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_pb_PATH "/combos/combo_comb_pb"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_pb_FULL_NAME "combo_comb_pb"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_pb_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_pb_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_pb_ORD 125
#define DT_N_S_combos_S_combo_comb_pb_ORD_STR_SORTABLE 00125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_pb_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_pb_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_pb_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_pb_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_pb_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_pb_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_pb_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_pb_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_pb_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_IDX_0_VAL_param1 458792
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_pb, bindings, 0)
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_pb, bindings, 0)
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_pb, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_pb, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_pb_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions {3 /* 0x3 */, 4 /* 0x4 */}
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_IDX_1 4
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_comb_pb_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_pb_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_pb_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_pb_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_pb_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_pb, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 6)
#define DT_N_S_combos_S_combo_comb_pb_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_pb, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 6)
#define DT_N_S_combos_S_combo_comb_pb_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_pb, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_pb, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_pb_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_pb_2
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_pb_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_pb_2_PATH "/combos/combo_comb_pb_2"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_pb_2_FULL_NAME "combo_comb_pb_2"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_pb_2_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_pb_2_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_pb_2_ORD 126
#define DT_N_S_combos_S_combo_comb_pb_2_ORD_STR_SORTABLE 00126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_pb_2_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_pb_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_pb_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_pb_2_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_pb_2_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_pb_2_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_pb_2_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_pb_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_pb_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_IDX_0_VAL_param1 458792
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_pb_2, bindings, 0)
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_pb_2, bindings, 0)
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_pb_2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_pb_2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions {12 /* 0xc */, 3 /* 0x3 */, 13 /* 0xd */}
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_IDX_0 12
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_IDX_1 3
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_IDX_2 13
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_comb_pb_2_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_pb_2_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_pb_2_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 6)
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 6)
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_pb_2, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_pb_2_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_rx
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_rx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_rx_PATH "/combos/combo_comb_rx"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_rx_FULL_NAME "combo_comb_rx"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_rx_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_rx_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_rx_ORD 127
#define DT_N_S_combos_S_combo_comb_rx_ORD_STR_SORTABLE 00127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_rx_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_rx_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_rx_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_rx_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_rx_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_rx_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_rx_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_rx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_rx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_IDX_0_VAL_param1 458799
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_rx, bindings, 0)
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_rx, bindings, 0)
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_rx, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_rx, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_rx_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions {11 /* 0xb */, 22 /* 0x16 */}
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_IDX_0 11
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_IDX_1 22
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_comb_rx_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_timeout_ms 500
#define DT_N_S_combos_S_combo_comb_rx_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_comb_rx_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_slow_release 0
#define DT_N_S_combos_S_combo_comb_rx_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_rx_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_rx_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_rx, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 6)
#define DT_N_S_combos_S_combo_comb_rx_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_rx, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 6)
#define DT_N_S_combos_S_combo_comb_rx_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_rx, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_rx_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_rx, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_rx, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_rx_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_rx_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_sc
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_sc
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_sc_PATH "/combos/combo_comb_sc"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_sc_FULL_NAME "combo_comb_sc"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_sc_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_sc_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_sc_ORD 128
#define DT_N_S_combos_S_combo_comb_sc_ORD_STR_SORTABLE 00128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_sc_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_sc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_sc_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_sc_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_sc_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_sc_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_sc_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_sc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_sc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_IDX_0_VAL_param1 458800
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_sc, bindings, 0)
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_sc, bindings, 0)
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_sc, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_sc, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_sc_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions {12 /* 0xc */, 23 /* 0x17 */}
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_IDX_0 12
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_IDX_1 23
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_comb_sc_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_timeout_ms 500
#define DT_N_S_combos_S_combo_comb_sc_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_comb_sc_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_slow_release 0
#define DT_N_S_combos_S_combo_comb_sc_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_sc_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_sc_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_sc, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 6)
#define DT_N_S_combos_S_combo_comb_sc_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_sc, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 6)
#define DT_N_S_combos_S_combo_comb_sc_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_sc, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_sc_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_sc, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_sc, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_sc_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_sc_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_td
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_td
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_td_PATH "/combos/combo_comb_td"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_td_FULL_NAME "combo_comb_td"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_td_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_td_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_td_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_td_ORD 129
#define DT_N_S_combos_S_combo_comb_td_ORD_STR_SORTABLE 00129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_td_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_td_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_td_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_td_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_td_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_td_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_td_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_td_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_td_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_td_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_td_P_bindings_IDX_0_VAL_param1 458805
#define DT_N_S_combos_S_combo_comb_td_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_td, bindings, 0)
#define DT_N_S_combos_S_combo_comb_td_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_td, bindings, 0)
#define DT_N_S_combos_S_combo_comb_td_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_td, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_td_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_td, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_td_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_td_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_key_positions {13 /* 0xd */, 24 /* 0x18 */}
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_IDX_0 13
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_IDX_1 24
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_td, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_td, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_td, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_td, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_td, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_td, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_comb_td_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_timeout_ms 500
#define DT_N_S_combos_S_combo_comb_td_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_comb_td_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_slow_release 0
#define DT_N_S_combos_S_combo_comb_td_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_td_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_td_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_td, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 6)
#define DT_N_S_combos_S_combo_comb_td_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_td, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 6)
#define DT_N_S_combos_S_combo_comb_td_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_td, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_td_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_td, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_td, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_td_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_td_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_tg
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_tg
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_tg_PATH "/combos/combo_comb_tg"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_tg_FULL_NAME "combo_comb_tg"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_tg_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_tg_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_tg_ORD 130
#define DT_N_S_combos_S_combo_comb_tg_ORD_STR_SORTABLE 00130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_tg_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_tg_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_tg_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_tg_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_tg_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_tg_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_tg_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_tg_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_tg_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_IDX_0_VAL_param1 458795
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_tg, bindings, 0)
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_tg, bindings, 0)
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_tg, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_tg, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_tg_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions {24 /* 0x18 */, 25 /* 0x19 */}
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_IDX_0 24
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_IDX_1 25
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 1)
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_comb_tg_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_tg_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_tg_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_tg_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_tg_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_tg, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 6)
#define DT_N_S_combos_S_combo_comb_tg_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_tg, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 6)
#define DT_N_S_combos_S_combo_comb_tg_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_tg, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_tg, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_tg_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_tg_2
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_tg_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_tg_2_PATH "/combos/combo_comb_tg_2"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_tg_2_FULL_NAME "combo_comb_tg_2"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_tg_2_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_tg_2_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_tg_2_ORD 131
#define DT_N_S_combos_S_combo_comb_tg_2_ORD_STR_SORTABLE 00131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_tg_2_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_tg_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_tg_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_tg_2_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_tg_2_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_tg_2_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_tg_2_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_tg_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_tg_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_IDX_0_VAL_param1 458795
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_tg_2, bindings, 0)
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_tg_2, bindings, 0)
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_tg_2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_tg_2, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions {23 /* 0x17 */, 13 /* 0xd */, 24 /* 0x18 */}
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_IDX_0 23
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_IDX_1 13
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_IDX_2 24
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_comb_tg_2_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_tg_2_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_tg_2_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 6)
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 6)
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_tg_2, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_tg_2_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_wf
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_wf
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_wf_PATH "/combos/combo_comb_wf"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_wf_FULL_NAME "combo_comb_wf"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_wf_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_wf_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_wf_ORD 132
#define DT_N_S_combos_S_combo_comb_wf_ORD_STR_SORTABLE 00132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_wf_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_wf_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_wf_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_wf_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_wf_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_wf_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_wf_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_wf_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_wf_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_IDX_0_VAL_param1 458793
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_wf, bindings, 0)
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_wf, bindings, 0)
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_wf, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_wf, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_wf_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */}
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_IDX_1 1
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_IDX_2 2
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_comb_wf_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_wf_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_wf_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_wf_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_wf_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_wf_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_wf, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 6)
#define DT_N_S_combos_S_combo_comb_wf_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_wf, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 6)
#define DT_N_S_combos_S_combo_comb_wf_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_wf, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_wf_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_wf, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_wf, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_wf_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_wf_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_comb_xc
 *
 * Node identifier: DT_N_S_combos_S_combo_comb_xc
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_comb_xc_PATH "/combos/combo_comb_xc"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_comb_xc_FULL_NAME "combo_comb_xc"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_comb_xc_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_comb_xc_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_comb_xc_ORD 133
#define DT_N_S_combos_S_combo_comb_xc_ORD_STR_SORTABLE 00133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_comb_xc_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_comb_xc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_comb_xc_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_comb_xc_REG_NUM 0
#define DT_N_S_combos_S_combo_comb_xc_RANGES_NUM 0
#define DT_N_S_combos_S_combo_comb_xc_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_comb_xc_IRQ_NUM 0
#define DT_N_S_combos_S_combo_comb_xc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_comb_xc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_IDX_0_VAL_param1 458828
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_xc, bindings, 0)
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_xc, bindings, 0)
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_xc, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_xc, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_comb_xc_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions {21 /* 0x15 */, 22 /* 0x16 */, 23 /* 0x17 */}
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_IDX_0 21
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_IDX_1 22
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_IDX_2 23
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 1) \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 2)
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_LEN 3
#define DT_N_S_combos_S_combo_comb_xc_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_timeout_ms 2000
#define DT_N_S_combos_S_combo_comb_xc_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_comb_xc_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_slow_release 1
#define DT_N_S_combos_S_combo_comb_xc_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_comb_xc_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_comb_xc_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_comb_xc, layers, 0) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 1) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 2) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 3) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 4) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 5) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 6)
#define DT_N_S_combos_S_combo_comb_xc_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_comb_xc, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 6)
#define DT_N_S_combos_S_combo_comb_xc_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_comb_xc, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_xc_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_comb_xc, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_comb_xc, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_comb_xc_P_layers_LEN 7
#define DT_N_S_combos_S_combo_comb_xc_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_pg_0
 *
 * Node identifier: DT_N_S_combos_S_combo_pg_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_pg_0_PATH "/combos/combo_pg_0"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_pg_0_FULL_NAME "combo_pg_0"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_pg_0_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_pg_0_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_pg_0_ORD 134
#define DT_N_S_combos_S_combo_pg_0_ORD_STR_SORTABLE 00134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_pg_0_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_pg_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_pg_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_pg_0_REG_NUM 0
#define DT_N_S_combos_S_combo_pg_0_RANGES_NUM 0
#define DT_N_S_combos_S_combo_pg_0_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_pg_0_IRQ_NUM 0
#define DT_N_S_combos_S_combo_pg_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_pg_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_pg_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_pg_0_P_bindings_IDX_0_VAL_param1 458826
#define DT_N_S_combos_S_combo_pg_0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_0, bindings, 0)
#define DT_N_S_combos_S_combo_pg_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_0, bindings, 0)
#define DT_N_S_combos_S_combo_pg_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_0, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_0, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_0_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_pg_0_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_key_positions {27 /* 0x1b */, 28 /* 0x1c */}
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_IDX_0 27
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_IDX_1 28
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_0, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_pg_0, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_0, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_0, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_0, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_pg_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_0, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_pg_0_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_timeout_ms 200
#define DT_N_S_combos_S_combo_pg_0_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_pg_0_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_slow_release 0
#define DT_N_S_combos_S_combo_pg_0_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_layers {4 /* 0x4 */}
#define DT_N_S_combos_S_combo_pg_0_P_layers_IDX_0 4
#define DT_N_S_combos_S_combo_pg_0_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_0_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_0, layers, 0)
#define DT_N_S_combos_S_combo_pg_0_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_0, layers, 0)
#define DT_N_S_combos_S_combo_pg_0_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_0, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_0_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_0, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_0_P_layers_LEN 1
#define DT_N_S_combos_S_combo_pg_0_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_pg_1
 *
 * Node identifier: DT_N_S_combos_S_combo_pg_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_pg_1_PATH "/combos/combo_pg_1"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_pg_1_FULL_NAME "combo_pg_1"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_pg_1_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_pg_1_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_pg_1_ORD 135
#define DT_N_S_combos_S_combo_pg_1_ORD_STR_SORTABLE 00135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_pg_1_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_pg_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_pg_1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_pg_1_REG_NUM 0
#define DT_N_S_combos_S_combo_pg_1_RANGES_NUM 0
#define DT_N_S_combos_S_combo_pg_1_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_pg_1_IRQ_NUM 0
#define DT_N_S_combos_S_combo_pg_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_pg_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_pg_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_pg_1_P_bindings_IDX_0_VAL_param1 458829
#define DT_N_S_combos_S_combo_pg_1_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_1, bindings, 0)
#define DT_N_S_combos_S_combo_pg_1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_1, bindings, 0)
#define DT_N_S_combos_S_combo_pg_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_1, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_1, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_1_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_pg_1_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_key_positions {28 /* 0x1c */, 29 /* 0x1d */}
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_IDX_0 28
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_IDX_1 29
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_1, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_pg_1, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_1, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_1, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_1, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_pg_1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_1, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_pg_1_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_timeout_ms 200
#define DT_N_S_combos_S_combo_pg_1_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_pg_1_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_slow_release 0
#define DT_N_S_combos_S_combo_pg_1_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_layers {4 /* 0x4 */}
#define DT_N_S_combos_S_combo_pg_1_P_layers_IDX_0 4
#define DT_N_S_combos_S_combo_pg_1_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_1_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_1, layers, 0)
#define DT_N_S_combos_S_combo_pg_1_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_1, layers, 0)
#define DT_N_S_combos_S_combo_pg_1_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_1, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_1_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_1, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_1_P_layers_LEN 1
#define DT_N_S_combos_S_combo_pg_1_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_pg_4
 *
 * Node identifier: DT_N_S_combos_S_combo_pg_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_pg_4_PATH "/combos/combo_pg_4"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_pg_4_FULL_NAME "combo_pg_4"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_pg_4_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_pg_4_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_pg_4_ORD 136
#define DT_N_S_combos_S_combo_pg_4_ORD_STR_SORTABLE 00136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_pg_4_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_pg_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_pg_4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_pg_4_REG_NUM 0
#define DT_N_S_combos_S_combo_pg_4_RANGES_NUM 0
#define DT_N_S_combos_S_combo_pg_4_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_pg_4_IRQ_NUM 0
#define DT_N_S_combos_S_combo_pg_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_pg_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_pg_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_pg_4_P_bindings_IDX_0_VAL_param1 458827
#define DT_N_S_combos_S_combo_pg_4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_4, bindings, 0)
#define DT_N_S_combos_S_combo_pg_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_4, bindings, 0)
#define DT_N_S_combos_S_combo_pg_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_4, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_4, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_4_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_pg_4_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_key_positions {27 /* 0x1b */, 18 /* 0x12 */}
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_IDX_0 27
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_IDX_1 18
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_4, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_pg_4, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_4, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_4, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_4, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_pg_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_4, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_pg_4_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_timeout_ms 200
#define DT_N_S_combos_S_combo_pg_4_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_pg_4_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_slow_release 0
#define DT_N_S_combos_S_combo_pg_4_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_layers {4 /* 0x4 */}
#define DT_N_S_combos_S_combo_pg_4_P_layers_IDX_0 4
#define DT_N_S_combos_S_combo_pg_4_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_4_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_4, layers, 0)
#define DT_N_S_combos_S_combo_pg_4_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_4, layers, 0)
#define DT_N_S_combos_S_combo_pg_4_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_4, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_4_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_4, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_4_P_layers_LEN 1
#define DT_N_S_combos_S_combo_pg_4_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_pg_5
 *
 * Node identifier: DT_N_S_combos_S_combo_pg_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_pg_5_PATH "/combos/combo_pg_5"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_pg_5_FULL_NAME "combo_pg_5"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_pg_5_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_pg_5_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_pg_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_pg_5_ORD 137
#define DT_N_S_combos_S_combo_pg_5_ORD_STR_SORTABLE 00137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_pg_5_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_pg_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_pg_5_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_pg_5_REG_NUM 0
#define DT_N_S_combos_S_combo_pg_5_RANGES_NUM 0
#define DT_N_S_combos_S_combo_pg_5_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_pg_5_IRQ_NUM 0
#define DT_N_S_combos_S_combo_pg_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_pg_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_pg_5_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_pg_5_P_bindings_IDX_0_VAL_param1 458830
#define DT_N_S_combos_S_combo_pg_5_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_5, bindings, 0)
#define DT_N_S_combos_S_combo_pg_5_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_5, bindings, 0)
#define DT_N_S_combos_S_combo_pg_5_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_5, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_5_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_5, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_5_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_pg_5_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_key_positions {18 /* 0x12 */, 29 /* 0x1d */}
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_IDX_0 18
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_IDX_1 29
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_5, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_pg_5, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_5, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_5, key_positions, 1)
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_5, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_pg_5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_5, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_pg_5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_pg_5_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_timeout_ms 200
#define DT_N_S_combos_S_combo_pg_5_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_combo_pg_5_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_slow_release 0
#define DT_N_S_combos_S_combo_pg_5_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_layers {4 /* 0x4 */}
#define DT_N_S_combos_S_combo_pg_5_P_layers_IDX_0 4
#define DT_N_S_combos_S_combo_pg_5_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_pg_5_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_pg_5, layers, 0)
#define DT_N_S_combos_S_combo_pg_5_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_pg_5, layers, 0)
#define DT_N_S_combos_S_combo_pg_5_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_pg_5, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_5_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_pg_5, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_pg_5_P_layers_LEN 1
#define DT_N_S_combos_S_combo_pg_5_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_requal
 *
 * Node identifier: DT_N_S_combos_S_combo_requal
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_requal_PATH "/combos/combo_requal"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_requal_FULL_NAME "combo_requal"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_requal_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_requal_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_requal_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_requal_ORD 138
#define DT_N_S_combos_S_combo_requal_ORD_STR_SORTABLE 00138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_requal_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_requal_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_requal_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_requal_REG_NUM 0
#define DT_N_S_combos_S_combo_requal_RANGES_NUM 0
#define DT_N_S_combos_S_combo_requal_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_requal_IRQ_NUM 0
#define DT_N_S_combos_S_combo_requal_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_requal_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_requal_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_requal_P_bindings_IDX_0_VAL_param1 458798
#define DT_N_S_combos_S_combo_requal_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_requal, bindings, 0)
#define DT_N_S_combos_S_combo_requal_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_requal, bindings, 0)
#define DT_N_S_combos_S_combo_requal_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_requal, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_requal_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_requal, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_requal_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_requal_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_key_positions {15 /* 0xf */, 26 /* 0x1a */}
#define DT_N_S_combos_S_combo_requal_P_key_positions_IDX_0 15
#define DT_N_S_combos_S_combo_requal_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_key_positions_IDX_1 26
#define DT_N_S_combos_S_combo_requal_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_requal, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_requal, key_positions, 1)
#define DT_N_S_combos_S_combo_requal_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_requal, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, key_positions, 1)
#define DT_N_S_combos_S_combo_requal_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_requal, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_requal, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_requal_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_requal, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_requal_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_requal_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_timeout_ms 500
#define DT_N_S_combos_S_combo_requal_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_requal_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_slow_release 0
#define DT_N_S_combos_S_combo_requal_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_requal_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_requal_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_requal, layers, 0) \
	fn(DT_N_S_combos_S_combo_requal, layers, 1) \
	fn(DT_N_S_combos_S_combo_requal, layers, 2) \
	fn(DT_N_S_combos_S_combo_requal, layers, 3) \
	fn(DT_N_S_combos_S_combo_requal, layers, 4) \
	fn(DT_N_S_combos_S_combo_requal, layers, 5) \
	fn(DT_N_S_combos_S_combo_requal, layers, 6)
#define DT_N_S_combos_S_combo_requal_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_requal, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 6)
#define DT_N_S_combos_S_combo_requal_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_requal, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_requal, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_requal, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_requal, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_requal, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_requal, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_requal, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_requal_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_requal, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_requal, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_requal_P_layers_LEN 7
#define DT_N_S_combos_S_combo_requal_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/combo_rsemi
 *
 * Node identifier: DT_N_S_combos_S_combo_rsemi
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_combo_rsemi_PATH "/combos/combo_rsemi"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_combo_rsemi_FULL_NAME "combo_rsemi"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_combo_rsemi_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_combo_rsemi_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_combo_rsemi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_combo_rsemi_ORD 139
#define DT_N_S_combos_S_combo_rsemi_ORD_STR_SORTABLE 00139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_combo_rsemi_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_combo_rsemi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_combo_rsemi_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_combo_rsemi_REG_NUM 0
#define DT_N_S_combos_S_combo_rsemi_RANGES_NUM 0
#define DT_N_S_combos_S_combo_rsemi_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_combo_rsemi_IRQ_NUM 0
#define DT_N_S_combos_S_combo_rsemi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_combo_rsemi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_combo_rsemi_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_combo_rsemi_P_bindings_IDX_0_VAL_param1 458803
#define DT_N_S_combos_S_combo_rsemi_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_rsemi, bindings, 0)
#define DT_N_S_combos_S_combo_rsemi_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_rsemi, bindings, 0)
#define DT_N_S_combos_S_combo_rsemi_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_rsemi, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_rsemi_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_rsemi, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_combo_rsemi_P_bindings_LEN 1
#define DT_N_S_combos_S_combo_rsemi_P_bindings_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_key_positions {16 /* 0x10 */, 27 /* 0x1b */}
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_IDX_0 16
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_IDX_1 27
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_rsemi, key_positions, 0) \
	fn(DT_N_S_combos_S_combo_rsemi, key_positions, 1)
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_rsemi, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, key_positions, 1)
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_rsemi, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_rsemi, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_rsemi, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_LEN 2
#define DT_N_S_combos_S_combo_rsemi_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_timeout_ms 500
#define DT_N_S_combos_S_combo_rsemi_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_require_prior_idle_ms 150
#define DT_N_S_combos_S_combo_rsemi_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_slow_release 0
#define DT_N_S_combos_S_combo_rsemi_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_0 0
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_1 4
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_2 5
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_3 3
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_4 2
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_5 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_6 6
#define DT_N_S_combos_S_combo_rsemi_P_layers_IDX_6_EXISTS 1
#define DT_N_S_combos_S_combo_rsemi_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_combo_rsemi, layers, 0) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 1) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 2) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 3) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 4) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 5) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 6)
#define DT_N_S_combos_S_combo_rsemi_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_combo_rsemi, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 6)
#define DT_N_S_combos_S_combo_rsemi_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_combo_rsemi, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 5, __VA_ARGS__) \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_rsemi_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_combo_rsemi, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_combo_rsemi, layers, 6, __VA_ARGS__)
#define DT_N_S_combos_S_combo_rsemi_P_layers_LEN 7
#define DT_N_S_combos_S_combo_rsemi_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/comboinv_pg_0_inv
 *
 * Node identifier: DT_N_S_combos_S_comboinv_pg_0_inv
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_PATH "/combos/comboinv_pg_0_inv"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_FULL_NAME "comboinv_pg_0_inv"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_ORD 140
#define DT_N_S_combos_S_comboinv_pg_0_inv_ORD_STR_SORTABLE 00140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_REG_NUM 0
#define DT_N_S_combos_S_comboinv_pg_0_inv_RANGES_NUM 0
#define DT_N_S_combos_S_comboinv_pg_0_inv_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_comboinv_pg_0_inv_IRQ_NUM 0
#define DT_N_S_combos_S_comboinv_pg_0_inv_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_IDX_0_VAL_param1 458826
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_0_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_0_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_0_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_0_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_LEN 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_bindings_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions {22 /* 0x16 */, 23 /* 0x17 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_IDX_0 22
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_IDX_1 23
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_IDX_2 33
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 0) \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 1) \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_0_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_LEN 3
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_timeout_ms 200
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_slow_release 0
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_IDX_0 0
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_0_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_0_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_0_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_0_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_LEN 1
#define DT_N_S_combos_S_comboinv_pg_0_inv_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/comboinv_pg_1_inv
 *
 * Node identifier: DT_N_S_combos_S_comboinv_pg_1_inv
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_PATH "/combos/comboinv_pg_1_inv"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_FULL_NAME "comboinv_pg_1_inv"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_ORD 141
#define DT_N_S_combos_S_comboinv_pg_1_inv_ORD_STR_SORTABLE 00141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_REG_NUM 0
#define DT_N_S_combos_S_comboinv_pg_1_inv_RANGES_NUM 0
#define DT_N_S_combos_S_comboinv_pg_1_inv_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_comboinv_pg_1_inv_IRQ_NUM 0
#define DT_N_S_combos_S_comboinv_pg_1_inv_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_IDX_0_VAL_param1 458829
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_1_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_1_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_1_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_1_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_LEN 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_bindings_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions {23 /* 0x17 */, 24 /* 0x18 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_IDX_0 23
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_IDX_1 24
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_IDX_2 33
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 0) \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 1) \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_1_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_LEN 3
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_timeout_ms 200
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_slow_release 0
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_IDX_0 0
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_1_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_1_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_1_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_1_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_LEN 1
#define DT_N_S_combos_S_comboinv_pg_1_inv_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/comboinv_pg_4_inv
 *
 * Node identifier: DT_N_S_combos_S_comboinv_pg_4_inv
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_PATH "/combos/comboinv_pg_4_inv"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_FULL_NAME "comboinv_pg_4_inv"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_ORD 142
#define DT_N_S_combos_S_comboinv_pg_4_inv_ORD_STR_SORTABLE 00142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_REG_NUM 0
#define DT_N_S_combos_S_comboinv_pg_4_inv_RANGES_NUM 0
#define DT_N_S_combos_S_comboinv_pg_4_inv_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_comboinv_pg_4_inv_IRQ_NUM 0
#define DT_N_S_combos_S_comboinv_pg_4_inv_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_IDX_0_VAL_param1 458827
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_4_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_4_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_4_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_4_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_LEN 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_bindings_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions {22 /* 0x16 */, 12 /* 0xc */, 33 /* 0x21 */}
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_IDX_0 22
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_IDX_1 12
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_IDX_2 33
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 0) \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 1) \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_4_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_LEN 3
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_timeout_ms 200
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_slow_release 0
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_IDX_0 0
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_4_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_4_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_4_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_4_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_LEN 1
#define DT_N_S_combos_S_comboinv_pg_4_inv_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/comboinv_pg_5_inv
 *
 * Node identifier: DT_N_S_combos_S_comboinv_pg_5_inv
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_PATH "/combos/comboinv_pg_5_inv"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_FULL_NAME "comboinv_pg_5_inv"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_ORD 143
#define DT_N_S_combos_S_comboinv_pg_5_inv_ORD_STR_SORTABLE 00143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_REG_NUM 0
#define DT_N_S_combos_S_comboinv_pg_5_inv_RANGES_NUM 0
#define DT_N_S_combos_S_comboinv_pg_5_inv_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_comboinv_pg_5_inv_IRQ_NUM 0
#define DT_N_S_combos_S_comboinv_pg_5_inv_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_IDX_0_VAL_param1 458830
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_5_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_5_inv, bindings, 0)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_5_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_5_inv, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_LEN 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_bindings_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions {12 /* 0xc */, 24 /* 0x18 */, 33 /* 0x21 */}
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_IDX_0 12
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_IDX_1 24
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_IDX_2 33
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_IDX_2_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 0) \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 1) \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 2)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_comboinv_pg_5_inv, key_positions, 2, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_LEN 3
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_timeout_ms 200
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_slow_release 0
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers {0 /* 0x0 */}
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_IDX_0 0
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_comboinv_pg_5_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_comboinv_pg_5_inv, layers, 0)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_comboinv_pg_5_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_comboinv_pg_5_inv, layers, 0, __VA_ARGS__)
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_LEN 1
#define DT_N_S_combos_S_comboinv_pg_5_inv_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_0
 *
 * Node identifier: DT_N_S_combos_S_ctab_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_0_PATH "/combos/ctab_0"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_0_FULL_NAME "ctab_0"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_0_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_0_CHILD_IDX 68

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_0_ORD 144
#define DT_N_S_combos_S_ctab_0_ORD_STR_SORTABLE 00144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_0_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_0_REG_NUM 0
#define DT_N_S_combos_S_ctab_0_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_0_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_0_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_1_VAL_param1 458782
#define DT_N_S_combos_S_ctab_0_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_0, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_0, bindings, 1)
#define DT_N_S_combos_S_ctab_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_0, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, bindings, 1)
#define DT_N_S_combos_S_ctab_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_0, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_0, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_0_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_key_positions {0 /* 0x0 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_0_P_key_positions_IDX_0 0
#define DT_N_S_combos_S_ctab_0_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_0_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_0, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_0, key_positions, 1)
#define DT_N_S_combos_S_ctab_0_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_0, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, key_positions, 1)
#define DT_N_S_combos_S_ctab_0_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_0, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_0, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_0_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader {0 /* 0x0 */}
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_IDX_0 0
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_0, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_0, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_0, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_0, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_0_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_0_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_0_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_slow_release 1
#define DT_N_S_combos_S_ctab_0_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_0_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_0_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_0, layers, 0) \
	fn(DT_N_S_combos_S_ctab_0, layers, 1) \
	fn(DT_N_S_combos_S_ctab_0, layers, 2) \
	fn(DT_N_S_combos_S_ctab_0, layers, 3) \
	fn(DT_N_S_combos_S_ctab_0, layers, 4) \
	fn(DT_N_S_combos_S_ctab_0, layers, 5)
#define DT_N_S_combos_S_ctab_0_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_0, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 5)
#define DT_N_S_combos_S_ctab_0_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_0, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_0, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_0, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_0, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_0, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_0, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_0, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_0, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_0_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_0_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_1
 *
 * Node identifier: DT_N_S_combos_S_ctab_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_1_PATH "/combos/ctab_1"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_1_FULL_NAME "ctab_1"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_1_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_1_CHILD_IDX 69

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_1_ORD 145
#define DT_N_S_combos_S_ctab_1_ORD_STR_SORTABLE 00145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_1_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_1_REG_NUM 0
#define DT_N_S_combos_S_ctab_1_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_1_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_1_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_1_VAL_param1 458783
#define DT_N_S_combos_S_ctab_1_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_1, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_1, bindings, 1)
#define DT_N_S_combos_S_ctab_1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_1, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, bindings, 1)
#define DT_N_S_combos_S_ctab_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_1, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_1, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_1_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_key_positions {1 /* 0x1 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_1_P_key_positions_IDX_0 1
#define DT_N_S_combos_S_ctab_1_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_1_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_1, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_1, key_positions, 1)
#define DT_N_S_combos_S_ctab_1_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_1, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, key_positions, 1)
#define DT_N_S_combos_S_ctab_1_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_1, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_1, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_1_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader {1 /* 0x1 */}
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_IDX_0 1
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_1, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_1, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_1, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_1, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_1_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_1_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_1_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_slow_release 1
#define DT_N_S_combos_S_ctab_1_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_1_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_1_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_1, layers, 0) \
	fn(DT_N_S_combos_S_ctab_1, layers, 1) \
	fn(DT_N_S_combos_S_ctab_1, layers, 2) \
	fn(DT_N_S_combos_S_ctab_1, layers, 3) \
	fn(DT_N_S_combos_S_ctab_1, layers, 4) \
	fn(DT_N_S_combos_S_ctab_1, layers, 5)
#define DT_N_S_combos_S_ctab_1_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_1, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 5)
#define DT_N_S_combos_S_ctab_1_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_1, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_1, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_1, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_1, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_1, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_1, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_1, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_1, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_1_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_1_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_2
 *
 * Node identifier: DT_N_S_combos_S_ctab_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_2_PATH "/combos/ctab_2"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_2_FULL_NAME "ctab_2"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_2_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_2_CHILD_IDX 70

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_2_ORD 146
#define DT_N_S_combos_S_ctab_2_ORD_STR_SORTABLE 00146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_2_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_2_REG_NUM 0
#define DT_N_S_combos_S_ctab_2_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_2_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_2_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_1_VAL_param1 458784
#define DT_N_S_combos_S_ctab_2_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_2, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_2, bindings, 1)
#define DT_N_S_combos_S_ctab_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_2, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, bindings, 1)
#define DT_N_S_combos_S_ctab_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_2, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_2, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_2_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_key_positions {2 /* 0x2 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_2_P_key_positions_IDX_0 2
#define DT_N_S_combos_S_ctab_2_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_2_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_2, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_2, key_positions, 1)
#define DT_N_S_combos_S_ctab_2_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_2, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, key_positions, 1)
#define DT_N_S_combos_S_ctab_2_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_2, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_2, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_2_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader {2 /* 0x2 */}
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_IDX_0 2
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_2, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_2, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_2, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_2, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_2_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_2_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_2_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_slow_release 1
#define DT_N_S_combos_S_ctab_2_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_2_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_2_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_2, layers, 0) \
	fn(DT_N_S_combos_S_ctab_2, layers, 1) \
	fn(DT_N_S_combos_S_ctab_2, layers, 2) \
	fn(DT_N_S_combos_S_ctab_2, layers, 3) \
	fn(DT_N_S_combos_S_ctab_2, layers, 4) \
	fn(DT_N_S_combos_S_ctab_2, layers, 5)
#define DT_N_S_combos_S_ctab_2_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_2, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 5)
#define DT_N_S_combos_S_ctab_2_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_2, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_2, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_2, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_2, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_2, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_2, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_2, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_2, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_2_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_2_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_3
 *
 * Node identifier: DT_N_S_combos_S_ctab_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_3_PATH "/combos/ctab_3"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_3_FULL_NAME "ctab_3"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_3_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_3_CHILD_IDX 71

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_3_ORD 147
#define DT_N_S_combos_S_ctab_3_ORD_STR_SORTABLE 00147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_3_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_3_REG_NUM 0
#define DT_N_S_combos_S_ctab_3_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_3_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_3_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_1_VAL_param1 458785
#define DT_N_S_combos_S_ctab_3_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_3, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_3, bindings, 1)
#define DT_N_S_combos_S_ctab_3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_3, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, bindings, 1)
#define DT_N_S_combos_S_ctab_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_3, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_3, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_3_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_key_positions {3 /* 0x3 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_3_P_key_positions_IDX_0 3
#define DT_N_S_combos_S_ctab_3_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_3_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_3, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_3, key_positions, 1)
#define DT_N_S_combos_S_ctab_3_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_3, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, key_positions, 1)
#define DT_N_S_combos_S_ctab_3_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_3, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_3, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_3_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader {3 /* 0x3 */}
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_IDX_0 3
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_3, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_3, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_3, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_3, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_3_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_3_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_3_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_slow_release 1
#define DT_N_S_combos_S_ctab_3_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_3_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_3_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_3, layers, 0) \
	fn(DT_N_S_combos_S_ctab_3, layers, 1) \
	fn(DT_N_S_combos_S_ctab_3, layers, 2) \
	fn(DT_N_S_combos_S_ctab_3, layers, 3) \
	fn(DT_N_S_combos_S_ctab_3, layers, 4) \
	fn(DT_N_S_combos_S_ctab_3, layers, 5)
#define DT_N_S_combos_S_ctab_3_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_3, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 5)
#define DT_N_S_combos_S_ctab_3_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_3, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_3, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_3, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_3, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_3, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_3, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_3, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_3, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_3_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_3_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_4
 *
 * Node identifier: DT_N_S_combos_S_ctab_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_4_PATH "/combos/ctab_4"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_4_FULL_NAME "ctab_4"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_4_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_4_CHILD_IDX 72

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_4_ORD 148
#define DT_N_S_combos_S_ctab_4_ORD_STR_SORTABLE 00148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_4_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_4_REG_NUM 0
#define DT_N_S_combos_S_ctab_4_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_4_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_4_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_1_VAL_param1 458786
#define DT_N_S_combos_S_ctab_4_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_4, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_4, bindings, 1)
#define DT_N_S_combos_S_ctab_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_4, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, bindings, 1)
#define DT_N_S_combos_S_ctab_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_4, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_4, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_4_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_key_positions {4 /* 0x4 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_4_P_key_positions_IDX_0 4
#define DT_N_S_combos_S_ctab_4_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_4_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_4, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_4, key_positions, 1)
#define DT_N_S_combos_S_ctab_4_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_4, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, key_positions, 1)
#define DT_N_S_combos_S_ctab_4_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_4, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_4, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_4_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader {4 /* 0x4 */}
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_IDX_0 4
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_4, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_4, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_4, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_4, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_4_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_4_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_4_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_slow_release 1
#define DT_N_S_combos_S_ctab_4_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_4_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_4_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_4, layers, 0) \
	fn(DT_N_S_combos_S_ctab_4, layers, 1) \
	fn(DT_N_S_combos_S_ctab_4, layers, 2) \
	fn(DT_N_S_combos_S_ctab_4, layers, 3) \
	fn(DT_N_S_combos_S_ctab_4, layers, 4) \
	fn(DT_N_S_combos_S_ctab_4, layers, 5)
#define DT_N_S_combos_S_ctab_4_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_4, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 5)
#define DT_N_S_combos_S_ctab_4_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_4, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_4, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_4, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_4, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_4, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_4, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_4, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_4, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_4_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_4_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_5
 *
 * Node identifier: DT_N_S_combos_S_ctab_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_5_PATH "/combos/ctab_5"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_5_FULL_NAME "ctab_5"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_5_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_5_CHILD_IDX 73

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_5_ORD 149
#define DT_N_S_combos_S_ctab_5_ORD_STR_SORTABLE 00149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_5_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_5_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_5_REG_NUM 0
#define DT_N_S_combos_S_ctab_5_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_5_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_5_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_1_VAL_param1 458787
#define DT_N_S_combos_S_ctab_5_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_5, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_5, bindings, 1)
#define DT_N_S_combos_S_ctab_5_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_5, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, bindings, 1)
#define DT_N_S_combos_S_ctab_5_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_5, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_5, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_5, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_5_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_key_positions {5 /* 0x5 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_5_P_key_positions_IDX_0 5
#define DT_N_S_combos_S_ctab_5_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_5_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_5, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_5, key_positions, 1)
#define DT_N_S_combos_S_ctab_5_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_5, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, key_positions, 1)
#define DT_N_S_combos_S_ctab_5_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_5, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_5, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_5_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader {5 /* 0x5 */}
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_IDX_0 5
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_5, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_5, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_5, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_5, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_5_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_5_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_5_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_slow_release 1
#define DT_N_S_combos_S_ctab_5_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_5_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_5_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_5, layers, 0) \
	fn(DT_N_S_combos_S_ctab_5, layers, 1) \
	fn(DT_N_S_combos_S_ctab_5, layers, 2) \
	fn(DT_N_S_combos_S_ctab_5, layers, 3) \
	fn(DT_N_S_combos_S_ctab_5, layers, 4) \
	fn(DT_N_S_combos_S_ctab_5, layers, 5)
#define DT_N_S_combos_S_ctab_5_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_5, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 5)
#define DT_N_S_combos_S_ctab_5_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_5, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_5, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_5, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_5, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_5, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_5, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_5, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_5, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_5_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_5_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_6
 *
 * Node identifier: DT_N_S_combos_S_ctab_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_6_PATH "/combos/ctab_6"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_6_FULL_NAME "ctab_6"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_6_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_6_CHILD_IDX 74

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_6_ORD 150
#define DT_N_S_combos_S_ctab_6_ORD_STR_SORTABLE 00150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_6_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_6_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_6_REG_NUM 0
#define DT_N_S_combos_S_ctab_6_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_6_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_6_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_1_VAL_param1 458788
#define DT_N_S_combos_S_ctab_6_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_6, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_6, bindings, 1)
#define DT_N_S_combos_S_ctab_6_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_6, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, bindings, 1)
#define DT_N_S_combos_S_ctab_6_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_6, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_6, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_6, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_6_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_key_positions {6 /* 0x6 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_6_P_key_positions_IDX_0 6
#define DT_N_S_combos_S_ctab_6_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_6_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_6, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_6, key_positions, 1)
#define DT_N_S_combos_S_ctab_6_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_6, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, key_positions, 1)
#define DT_N_S_combos_S_ctab_6_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_6, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_6, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_6, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_6_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader {6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_IDX_0 6
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_6, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_6, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_6, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_6, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_6_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_6_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_6_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_slow_release 1
#define DT_N_S_combos_S_ctab_6_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_6_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_6_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_6, layers, 0) \
	fn(DT_N_S_combos_S_ctab_6, layers, 1) \
	fn(DT_N_S_combos_S_ctab_6, layers, 2) \
	fn(DT_N_S_combos_S_ctab_6, layers, 3) \
	fn(DT_N_S_combos_S_ctab_6, layers, 4) \
	fn(DT_N_S_combos_S_ctab_6, layers, 5)
#define DT_N_S_combos_S_ctab_6_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_6, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 5)
#define DT_N_S_combos_S_ctab_6_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_6, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_6, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_6, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_6, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_6, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_6, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_6, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_6, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_6_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_6_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_7
 *
 * Node identifier: DT_N_S_combos_S_ctab_7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_7_PATH "/combos/ctab_7"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_7_FULL_NAME "ctab_7"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_7_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_7_CHILD_IDX 75

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_7_ORD 151
#define DT_N_S_combos_S_ctab_7_ORD_STR_SORTABLE 00151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_7_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_7_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_7_REG_NUM 0
#define DT_N_S_combos_S_ctab_7_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_7_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_7_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_1_VAL_param1 458789
#define DT_N_S_combos_S_ctab_7_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_7, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_7, bindings, 1)
#define DT_N_S_combos_S_ctab_7_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_7, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, bindings, 1)
#define DT_N_S_combos_S_ctab_7_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_7, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_7, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_7, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_7_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_key_positions {7 /* 0x7 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_7_P_key_positions_IDX_0 7
#define DT_N_S_combos_S_ctab_7_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_7_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_7, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_7, key_positions, 1)
#define DT_N_S_combos_S_ctab_7_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_7, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, key_positions, 1)
#define DT_N_S_combos_S_ctab_7_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_7, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_7, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_7_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader {7 /* 0x7 */}
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_IDX_0 7
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_7, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_7, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_7, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_7, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_7_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_7_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_7_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_slow_release 1
#define DT_N_S_combos_S_ctab_7_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_7_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_7_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_7, layers, 0) \
	fn(DT_N_S_combos_S_ctab_7, layers, 1) \
	fn(DT_N_S_combos_S_ctab_7, layers, 2) \
	fn(DT_N_S_combos_S_ctab_7, layers, 3) \
	fn(DT_N_S_combos_S_ctab_7, layers, 4) \
	fn(DT_N_S_combos_S_ctab_7, layers, 5)
#define DT_N_S_combos_S_ctab_7_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_7, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 5)
#define DT_N_S_combos_S_ctab_7_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_7, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_7, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_7, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_7, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_7, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_7, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_7, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_7, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_7_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_7_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_8
 *
 * Node identifier: DT_N_S_combos_S_ctab_8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_8_PATH "/combos/ctab_8"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_8_FULL_NAME "ctab_8"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_8_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_8_CHILD_IDX 76

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_8_ORD 152
#define DT_N_S_combos_S_ctab_8_ORD_STR_SORTABLE 00152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_8_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_8_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_8_REG_NUM 0
#define DT_N_S_combos_S_ctab_8_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_8_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_8_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_1_VAL_param1 458790
#define DT_N_S_combos_S_ctab_8_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_8, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_8, bindings, 1)
#define DT_N_S_combos_S_ctab_8_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_8, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, bindings, 1)
#define DT_N_S_combos_S_ctab_8_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_8, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_8, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_8, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_8_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_key_positions {8 /* 0x8 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_8_P_key_positions_IDX_0 8
#define DT_N_S_combos_S_ctab_8_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_8_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_8, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_8, key_positions, 1)
#define DT_N_S_combos_S_ctab_8_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_8, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, key_positions, 1)
#define DT_N_S_combos_S_ctab_8_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_8, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_8, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_8, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_8_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader {8 /* 0x8 */}
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_IDX_0 8
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_8, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_8, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_8, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_8, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_8_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_8_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_8_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_slow_release 1
#define DT_N_S_combos_S_ctab_8_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_8_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_8_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_8, layers, 0) \
	fn(DT_N_S_combos_S_ctab_8, layers, 1) \
	fn(DT_N_S_combos_S_ctab_8, layers, 2) \
	fn(DT_N_S_combos_S_ctab_8, layers, 3) \
	fn(DT_N_S_combos_S_ctab_8, layers, 4) \
	fn(DT_N_S_combos_S_ctab_8, layers, 5)
#define DT_N_S_combos_S_ctab_8_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_8, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 5)
#define DT_N_S_combos_S_ctab_8_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_8, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_8, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_8, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_8, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_8, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_8, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_8, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_8, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_8_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_8_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctab_9
 *
 * Node identifier: DT_N_S_combos_S_ctab_9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctab_9_PATH "/combos/ctab_9"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctab_9_FULL_NAME "ctab_9"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctab_9_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctab_9_CHILD_IDX 77

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctab_9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctab_9_ORD 153
#define DT_N_S_combos_S_ctab_9_ORD_STR_SORTABLE 00153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctab_9_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctab_9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctab_9_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctab_9_REG_NUM 0
#define DT_N_S_combos_S_ctab_9_RANGES_NUM 0
#define DT_N_S_combos_S_ctab_9_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctab_9_IRQ_NUM 0
#define DT_N_S_combos_S_ctab_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctab_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_0_VAL_param1 1
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_1_VAL_param1 458791
#define DT_N_S_combos_S_ctab_9_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_9, bindings, 0) \
	fn(DT_N_S_combos_S_ctab_9, bindings, 1)
#define DT_N_S_combos_S_ctab_9_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_9, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, bindings, 1)
#define DT_N_S_combos_S_ctab_9_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_9, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_9, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_9, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_bindings_LEN 2
#define DT_N_S_combos_S_ctab_9_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_key_positions {9 /* 0x9 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctab_9_P_key_positions_IDX_0 9
#define DT_N_S_combos_S_ctab_9_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctab_9_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_9, key_positions, 0) \
	fn(DT_N_S_combos_S_ctab_9, key_positions, 1)
#define DT_N_S_combos_S_ctab_9_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_9, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, key_positions, 1)
#define DT_N_S_combos_S_ctab_9_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_9, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_9, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_9, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctab_9_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader {9 /* 0x9 */}
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_IDX_0 9
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_9, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_9, key_positions_leader, 0)
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_9, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_9, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctab_9_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_timeout_ms 2000
#define DT_N_S_combos_S_ctab_9_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctab_9_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_slow_release 1
#define DT_N_S_combos_S_ctab_9_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctab_9_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctab_9_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctab_9, layers, 0) \
	fn(DT_N_S_combos_S_ctab_9, layers, 1) \
	fn(DT_N_S_combos_S_ctab_9, layers, 2) \
	fn(DT_N_S_combos_S_ctab_9, layers, 3) \
	fn(DT_N_S_combos_S_ctab_9, layers, 4) \
	fn(DT_N_S_combos_S_ctab_9, layers, 5)
#define DT_N_S_combos_S_ctab_9_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctab_9, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 5)
#define DT_N_S_combos_S_ctab_9_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctab_9, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_9, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_9, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_9, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_9, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctab_9, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctab_9, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctab_9, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctab_9_P_layers_LEN 6
#define DT_N_S_combos_S_ctab_9_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_pause_for_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_pause_for_release
 *
 * Binding (compatible = zmk,macro-pause-for-release):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-pause-for-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PATH "/behaviors/macro_pause_for_release"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_pause_for_release_FULL_NAME "macro_pause_for_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_pause_for_release_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_pause_for_release_ORD 154
#define DT_N_S_behaviors_S_macro_pause_for_release_ORD_STR_SORTABLE 00154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_pause_for_release_SUPPORTS_ORDS \
	157, /* /macros/mhr */ \
	227, /* /macros/mc_quesd */ \
	230, /* /macros/scfw_l_to_r */ \
	231, /* /macros/scfw_r_to_l */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_pause_for_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_pause_for_release DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_NODELABEL_macro_pause_for_release  DT_N_S_behaviors_S_macro_pause_for_release

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MATCHES_zmk_macro_pause_for_release 1
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MODEL_IDX_0 "macro-pause-for-release"
#define DT_N_S_behaviors_S_macro_pause_for_release_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_press
 *
 * Node identifier: DT_N_S_behaviors_S_macro_press
 *
 * Binding (compatible = zmk,macro-control-mode-press):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-control-mode-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_press_PATH "/behaviors/macro_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_press_FULL_NAME "macro_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_press_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_press_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_press_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_press_ORD 155
#define DT_N_S_behaviors_S_macro_press_ORD_STR_SORTABLE 00155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_press_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_press_SUPPORTS_ORDS \
	157, /* /macros/mhr */ \
	227, /* /macros/mc_quesd */ \
	230, /* /macros/scfw_l_to_r */ \
	231, /* /macros/scfw_r_to_l */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_press_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_press DT_N_S_behaviors_S_macro_press
#define DT_N_NODELABEL_macro_press               DT_N_S_behaviors_S_macro_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_press_REG_NUM 0
#define DT_N_S_behaviors_S_macro_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_press_COMPAT_MATCHES_zmk_macro_control_mode_press 1
#define DT_N_S_behaviors_S_macro_press_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_press_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_press_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_press_COMPAT_MODEL_IDX_0 "macro-control-mode-press"
#define DT_N_S_behaviors_S_macro_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_press_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/macro_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_release
 *
 * Binding (compatible = zmk,macro-control-mode-release):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-control-mode-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_release_PATH "/behaviors/macro_release"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_release_FULL_NAME "macro_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_release_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_release_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_release_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_release_ORD 156
#define DT_N_S_behaviors_S_macro_release_ORD_STR_SORTABLE 00156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_release_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_release_SUPPORTS_ORDS \
	157, /* /macros/mhr */ \
	227, /* /macros/mc_quesd */ \
	230, /* /macros/scfw_l_to_r */ \
	231, /* /macros/scfw_r_to_l */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_release DT_N_S_behaviors_S_macro_release
#define DT_N_NODELABEL_macro_release               DT_N_S_behaviors_S_macro_release

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_release_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_release_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_release_COMPAT_MATCHES_zmk_macro_control_mode_release 1
#define DT_N_S_behaviors_S_macro_release_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_release_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_release_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_release_COMPAT_MODEL_IDX_0 "macro-control-mode-release"
#define DT_N_S_behaviors_S_macro_release_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_release_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /macros/mhr
 *
 * Node identifier: DT_N_S_macros_S_mhr
 *
 * Binding (compatible = zmk,behavior-macro-one-param):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro-one-param.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_mhr_PATH "/macros/mhr"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_mhr_FULL_NAME "mhr"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_mhr_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_mhr_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_mhr_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_mhr_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_mhr_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_mhr_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_mhr_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_mhr_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_mhr_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_mhr_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_mhr_ORD 157
#define DT_N_S_macros_S_mhr_ORD_STR_SORTABLE 00157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_mhr_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	30, /* /macros */ \
	63, /* /behaviors/macro_param_1to1 */ \
	154, /* /behaviors/macro_pause_for_release */ \
	155, /* /behaviors/macro_press */ \
	156, /* /behaviors/macro_release */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_mhr_SUPPORTS_ORDS \
	158, /* /combos/ctabd_10 */ \
	159, /* /combos/ctabd_11 */ \
	160, /* /combos/ctabd_12 */ \
	161, /* /combos/ctabd_13 */ \
	203, /* /behaviors/lm_homerow */ \
	204, /* /behaviors/lm_homerow_short */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_mhr_EXISTS 1
#define DT_N_INST_3_zmk_behavior_macro_one_param DT_N_S_macros_S_mhr
#define DT_N_NODELABEL_mhr                       DT_N_S_macros_S_mhr

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_mhr_REG_NUM 0
#define DT_N_S_macros_S_mhr_RANGES_NUM 0
#define DT_N_S_macros_S_mhr_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_mhr_IRQ_NUM 0
#define DT_N_S_macros_S_mhr_COMPAT_MATCHES_zmk_behavior_macro_one_param 1
#define DT_N_S_macros_S_mhr_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mhr_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_mhr_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mhr_COMPAT_MODEL_IDX_0 "behavior-macro-one-param"
#define DT_N_S_macros_S_mhr_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_mhr_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_mhr_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_press
#define DT_N_S_macros_S_mhr_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_1_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_macros_S_mhr_P_bindings_IDX_1_VAL_param1 3
#define DT_N_S_macros_S_mhr_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_press
#define DT_N_S_macros_S_mhr_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mhr_P_bindings_IDX_4_VAL_param1 0
#define DT_N_S_macros_S_mhr_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_S_macros_S_mhr_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_7_PH DT_N_S_behaviors_S_macro_release
#define DT_N_S_macros_S_mhr_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mhr_P_bindings_IDX_8_VAL_param1 0
#define DT_N_S_macros_S_mhr_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_9_PH DT_N_S_behaviors_S_macro_release
#define DT_N_S_macros_S_mhr_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_IDX_10_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_macros_S_mhr_P_bindings_IDX_10_VAL_param1 3
#define DT_N_S_macros_S_mhr_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mhr_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mhr, bindings, 0) \
	fn(DT_N_S_macros_S_mhr, bindings, 1) \
	fn(DT_N_S_macros_S_mhr, bindings, 2) \
	fn(DT_N_S_macros_S_mhr, bindings, 3) \
	fn(DT_N_S_macros_S_mhr, bindings, 4) \
	fn(DT_N_S_macros_S_mhr, bindings, 5) \
	fn(DT_N_S_macros_S_mhr, bindings, 6) \
	fn(DT_N_S_macros_S_mhr, bindings, 7) \
	fn(DT_N_S_macros_S_mhr, bindings, 8) \
	fn(DT_N_S_macros_S_mhr, bindings, 9) \
	fn(DT_N_S_macros_S_mhr, bindings, 10)
#define DT_N_S_macros_S_mhr_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mhr, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 10)
#define DT_N_S_macros_S_mhr_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mhr, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mhr, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_mhr_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mhr, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mhr, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_mhr_P_bindings_LEN 11
#define DT_N_S_macros_S_mhr_P_bindings_EXISTS 1
#define DT_N_S_macros_S_mhr_P_wait_ms 0
#define DT_N_S_macros_S_mhr_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_mhr_P_tap_ms 0
#define DT_N_S_macros_S_mhr_P_tap_ms_EXISTS 1

/*
 * Devicetree node: /combos/ctabd_10
 *
 * Node identifier: DT_N_S_combos_S_ctabd_10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabd_10_PATH "/combos/ctabd_10"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabd_10_FULL_NAME "ctabd_10"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabd_10_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabd_10_CHILD_IDX 78

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabd_10_ORD 158
#define DT_N_S_combos_S_ctabd_10_ORD_STR_SORTABLE 00158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabd_10_REQUIRES_ORDS \
	39, /* /combos */ \
	157, /* /macros/mhr */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabd_10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabd_10_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabd_10_REG_NUM 0
#define DT_N_S_combos_S_ctabd_10_RANGES_NUM 0
#define DT_N_S_combos_S_ctabd_10_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabd_10_IRQ_NUM 0
#define DT_N_S_combos_S_ctabd_10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabd_10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabd_10_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_bindings_IDX_0_PH DT_N_S_macros_S_mhr
#define DT_N_S_combos_S_ctabd_10_P_bindings_IDX_0_VAL_param1 458977
#define DT_N_S_combos_S_ctabd_10_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_10, bindings, 0)
#define DT_N_S_combos_S_ctabd_10_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_10, bindings, 0)
#define DT_N_S_combos_S_ctabd_10_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_10, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_10, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_bindings_LEN 1
#define DT_N_S_combos_S_ctabd_10_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_key_positions {10 /* 0xa */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabd_10_P_key_positions_IDX_0 10
#define DT_N_S_combos_S_ctabd_10_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabd_10_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_10, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabd_10, key_positions, 1)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_10, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, key_positions, 1)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_10, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_10, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_10, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabd_10_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader {10 /* 0xa */}
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_IDX_0 10
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_10, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_10, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_10, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_10, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabd_10_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabd_10_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabd_10_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_slow_release 1
#define DT_N_S_combos_S_ctabd_10_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabd_10_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabd_10_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_10, layers, 0) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 1) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 2) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 3) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 4) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 5)
#define DT_N_S_combos_S_ctabd_10_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_10, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 5)
#define DT_N_S_combos_S_ctabd_10_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_10, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_10, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_10, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_10, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_10_P_layers_LEN 6
#define DT_N_S_combos_S_ctabd_10_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctabd_11
 *
 * Node identifier: DT_N_S_combos_S_ctabd_11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabd_11_PATH "/combos/ctabd_11"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabd_11_FULL_NAME "ctabd_11"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabd_11_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabd_11_CHILD_IDX 79

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabd_11_ORD 159
#define DT_N_S_combos_S_ctabd_11_ORD_STR_SORTABLE 00159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabd_11_REQUIRES_ORDS \
	39, /* /combos */ \
	157, /* /macros/mhr */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabd_11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabd_11_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabd_11_REG_NUM 0
#define DT_N_S_combos_S_ctabd_11_RANGES_NUM 0
#define DT_N_S_combos_S_ctabd_11_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabd_11_IRQ_NUM 0
#define DT_N_S_combos_S_ctabd_11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabd_11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabd_11_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_bindings_IDX_0_PH DT_N_S_macros_S_mhr
#define DT_N_S_combos_S_ctabd_11_P_bindings_IDX_0_VAL_param1 458976
#define DT_N_S_combos_S_ctabd_11_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_11, bindings, 0)
#define DT_N_S_combos_S_ctabd_11_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_11, bindings, 0)
#define DT_N_S_combos_S_ctabd_11_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_11, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_11, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_bindings_LEN 1
#define DT_N_S_combos_S_ctabd_11_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_key_positions {11 /* 0xb */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabd_11_P_key_positions_IDX_0 11
#define DT_N_S_combos_S_ctabd_11_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabd_11_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_11, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabd_11, key_positions, 1)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_11, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, key_positions, 1)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_11, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_11, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_11, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabd_11_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader {11 /* 0xb */}
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_IDX_0 11
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_11, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_11, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_11, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_11, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabd_11_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabd_11_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabd_11_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_slow_release 1
#define DT_N_S_combos_S_ctabd_11_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabd_11_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabd_11_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_11, layers, 0) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 1) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 2) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 3) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 4) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 5)
#define DT_N_S_combos_S_ctabd_11_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_11, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 5)
#define DT_N_S_combos_S_ctabd_11_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_11, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_11, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_11, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_11, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_11_P_layers_LEN 6
#define DT_N_S_combos_S_ctabd_11_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctabd_12
 *
 * Node identifier: DT_N_S_combos_S_ctabd_12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabd_12_PATH "/combos/ctabd_12"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabd_12_FULL_NAME "ctabd_12"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabd_12_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabd_12_CHILD_IDX 80

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabd_12_ORD 160
#define DT_N_S_combos_S_ctabd_12_ORD_STR_SORTABLE 00160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabd_12_REQUIRES_ORDS \
	39, /* /combos */ \
	157, /* /macros/mhr */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabd_12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabd_12_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabd_12_REG_NUM 0
#define DT_N_S_combos_S_ctabd_12_RANGES_NUM 0
#define DT_N_S_combos_S_ctabd_12_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabd_12_IRQ_NUM 0
#define DT_N_S_combos_S_ctabd_12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabd_12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabd_12_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_bindings_IDX_0_PH DT_N_S_macros_S_mhr
#define DT_N_S_combos_S_ctabd_12_P_bindings_IDX_0_VAL_param1 458978
#define DT_N_S_combos_S_ctabd_12_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_12, bindings, 0)
#define DT_N_S_combos_S_ctabd_12_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_12, bindings, 0)
#define DT_N_S_combos_S_ctabd_12_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_12, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_12, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_bindings_LEN 1
#define DT_N_S_combos_S_ctabd_12_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_key_positions {12 /* 0xc */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabd_12_P_key_positions_IDX_0 12
#define DT_N_S_combos_S_ctabd_12_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabd_12_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_12, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabd_12, key_positions, 1)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_12, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, key_positions, 1)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_12, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_12, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_12, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabd_12_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader {12 /* 0xc */}
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_IDX_0 12
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_12, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_12, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_12, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_12, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabd_12_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabd_12_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabd_12_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_slow_release 1
#define DT_N_S_combos_S_ctabd_12_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabd_12_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabd_12_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_12, layers, 0) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 1) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 2) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 3) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 4) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 5)
#define DT_N_S_combos_S_ctabd_12_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_12, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 5)
#define DT_N_S_combos_S_ctabd_12_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_12, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_12, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_12, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_12, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_12_P_layers_LEN 6
#define DT_N_S_combos_S_ctabd_12_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctabd_13
 *
 * Node identifier: DT_N_S_combos_S_ctabd_13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabd_13_PATH "/combos/ctabd_13"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabd_13_FULL_NAME "ctabd_13"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabd_13_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabd_13_CHILD_IDX 81

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabd_13_ORD 161
#define DT_N_S_combos_S_ctabd_13_ORD_STR_SORTABLE 00161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabd_13_REQUIRES_ORDS \
	39, /* /combos */ \
	157, /* /macros/mhr */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabd_13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabd_13_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabd_13_REG_NUM 0
#define DT_N_S_combos_S_ctabd_13_RANGES_NUM 0
#define DT_N_S_combos_S_ctabd_13_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabd_13_IRQ_NUM 0
#define DT_N_S_combos_S_ctabd_13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabd_13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabd_13_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_bindings_IDX_0_PH DT_N_S_macros_S_mhr
#define DT_N_S_combos_S_ctabd_13_P_bindings_IDX_0_VAL_param1 458979
#define DT_N_S_combos_S_ctabd_13_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_13, bindings, 0)
#define DT_N_S_combos_S_ctabd_13_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_13, bindings, 0)
#define DT_N_S_combos_S_ctabd_13_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_13, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_13, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_bindings_LEN 1
#define DT_N_S_combos_S_ctabd_13_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_key_positions {13 /* 0xd */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabd_13_P_key_positions_IDX_0 13
#define DT_N_S_combos_S_ctabd_13_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabd_13_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_13, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabd_13, key_positions, 1)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_13, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, key_positions, 1)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_13, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_13, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_13, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabd_13_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader {13 /* 0xd */}
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_IDX_0 13
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_13, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_13, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_13, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_13, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabd_13_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabd_13_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabd_13_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_slow_release 1
#define DT_N_S_combos_S_ctabd_13_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabd_13_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabd_13_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_13, layers, 0) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 1) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 2) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 3) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 4) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 5)
#define DT_N_S_combos_S_ctabd_13_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_13, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 5)
#define DT_N_S_combos_S_ctabd_13_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_13, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_13, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_13, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_13, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_13_P_layers_LEN 6
#define DT_N_S_combos_S_ctabd_13_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctabd_14
 *
 * Node identifier: DT_N_S_combos_S_ctabd_14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabd_14_PATH "/combos/ctabd_14"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabd_14_FULL_NAME "ctabd_14"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabd_14_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabd_14_CHILD_IDX 82

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabd_14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabd_14_ORD 162
#define DT_N_S_combos_S_ctabd_14_ORD_STR_SORTABLE 00162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabd_14_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabd_14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabd_14_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabd_14_REG_NUM 0
#define DT_N_S_combos_S_ctabd_14_RANGES_NUM 0
#define DT_N_S_combos_S_ctabd_14_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabd_14_IRQ_NUM 0
#define DT_N_S_combos_S_ctabd_14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabd_14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabd_14_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctabd_14_P_bindings_IDX_0_VAL_param1 458809
#define DT_N_S_combos_S_ctabd_14_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_14, bindings, 0)
#define DT_N_S_combos_S_ctabd_14_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_14, bindings, 0)
#define DT_N_S_combos_S_ctabd_14_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_14, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_14, bindings, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_bindings_LEN 1
#define DT_N_S_combos_S_ctabd_14_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_key_positions {14 /* 0xe */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabd_14_P_key_positions_IDX_0 14
#define DT_N_S_combos_S_ctabd_14_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabd_14_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_14, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabd_14, key_positions, 1)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_14, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, key_positions, 1)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_14, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_14, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_14, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabd_14_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader {14 /* 0xe */}
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_IDX_0 14
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_14, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_14, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_14, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_14, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabd_14_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabd_14_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabd_14_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_slow_release 1
#define DT_N_S_combos_S_ctabd_14_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabd_14_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabd_14_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabd_14, layers, 0) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 1) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 2) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 3) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 4) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 5)
#define DT_N_S_combos_S_ctabd_14_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabd_14, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 5)
#define DT_N_S_combos_S_ctabd_14_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabd_14, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabd_14, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabd_14, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabd_14, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabd_14_P_layers_LEN 6
#define DT_N_S_combos_S_ctabd_14_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/pfind
 *
 * Node identifier: DT_N_S_behaviors_S_pfind
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_pfind_PATH "/behaviors/pfind"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_pfind_FULL_NAME "pfind"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_pfind_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_pfind_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_pfind_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_pfind_ORD 163
#define DT_N_S_behaviors_S_pfind_ORD_STR_SORTABLE 00163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_pfind_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_pfind_SUPPORTS_ORDS \
	164, /* /behaviors/td_find_s_ht */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_pfind_EXISTS 1
#define DT_N_INST_0_zmk_behavior_macro DT_N_S_behaviors_S_pfind
#define DT_N_NODELABEL_pfind           DT_N_S_behaviors_S_pfind

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_pfind_REG_NUM 0
#define DT_N_S_behaviors_S_pfind_RANGES_NUM 0
#define DT_N_S_behaviors_S_pfind_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_pfind_IRQ_NUM 0
#define DT_N_S_behaviors_S_pfind_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_behaviors_S_pfind_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_pfind_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_pfind_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_pfind_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_behaviors_S_pfind_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_pfind_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_pfind_P_label "&PFIND"
#define DT_N_S_behaviors_S_pfind_P_label_STRING_UNQUOTED &PFIND
#define DT_N_S_behaviors_S_pfind_P_label_STRING_TOKEN _PFIND
#define DT_N_S_behaviors_S_pfind_P_label_STRING_UPPER_TOKEN _PFIND
#define DT_N_S_behaviors_S_pfind_P_label_IDX_0 "&PFIND"
#define DT_N_S_behaviors_S_pfind_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_pfind, label, 0)
#define DT_N_S_behaviors_S_pfind_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_pfind, label, 0)
#define DT_N_S_behaviors_S_pfind_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_pfind, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_pfind_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_pfind, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_pfind_P_label_LEN 1
#define DT_N_S_behaviors_S_pfind_P_label_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_1_VAL_param1 134676489
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_2_VAL_param1 10
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_4_VAL_param1 134676505
#define DT_N_S_behaviors_S_pfind_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_pfind_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_pfind, bindings, 0) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 1) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 2) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 3) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 4)
#define DT_N_S_behaviors_S_pfind_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_pfind, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 4)
#define DT_N_S_behaviors_S_pfind_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_pfind, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_pfind, bindings, 4, __VA_ARGS__)
#define DT_N_S_behaviors_S_pfind_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_pfind, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_pfind, bindings, 4, __VA_ARGS__)
#define DT_N_S_behaviors_S_pfind_P_bindings_LEN 5
#define DT_N_S_behaviors_S_pfind_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/td_find_s_ht
 *
 * Node identifier: DT_N_S_behaviors_S_td_find_s_ht
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_td_find_s_ht_PATH "/behaviors/td_find_s_ht"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_td_find_s_ht_FULL_NAME "td_find_s_ht"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_td_find_s_ht_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_td_find_s_ht_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_td_find_s_ht_ORD 164
#define DT_N_S_behaviors_S_td_find_s_ht_ORD_STR_SORTABLE 00164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_td_find_s_ht_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	163, /* /behaviors/pfind */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_td_find_s_ht_SUPPORTS_ORDS \
	165, /* /combos/ctabda_21 */ \
	213, /* /keymap/layer_direcaacc */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_td_find_s_ht_EXISTS 1
#define DT_N_INST_11_zmk_behavior_hold_tap DT_N_S_behaviors_S_td_find_s_ht
#define DT_N_NODELABEL_td_find_s_ht        DT_N_S_behaviors_S_td_find_s_ht

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_td_find_s_ht_REG_NUM 0
#define DT_N_S_behaviors_S_td_find_s_ht_RANGES_NUM 0
#define DT_N_S_behaviors_S_td_find_s_ht_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_td_find_s_ht_IRQ_NUM 0
#define DT_N_S_behaviors_S_td_find_s_ht_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_td_find_s_ht_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_td_find_s_ht_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_td_find_s_ht_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_td_find_s_ht_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_IDX_0 DT_N_S_behaviors_S_pfind
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_IDX_0_PH DT_N_S_behaviors_S_pfind
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 0) \
	fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 1)
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 1)
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_td_find_s_ht, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_LEN 2
#define DT_N_S_behaviors_S_td_find_s_ht_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_td_find_s_ht_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_quick_tap_ms 0
#define DT_N_S_behaviors_S_td_find_s_ht_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_global_quick_tap 0
#define DT_N_S_behaviors_S_td_find_s_ht_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_td_find_s_ht_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor "tap-preferred"
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_STRING_UNQUOTED tap-preferred
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_STRING_TOKEN tap_preferred
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_STRING_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_IDX_0 "tap-preferred"
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_ENUM_IDX 2
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_ENUM_VAL_tap_preferred_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_ENUM_TOKEN tap_preferred
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_ENUM_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_td_find_s_ht, flavor, 0)
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_td_find_s_ht, flavor, 0)
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_td_find_s_ht, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_td_find_s_ht, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_LEN 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_retro_tap 0
#define DT_N_S_behaviors_S_td_find_s_ht_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_td_find_s_ht_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /combos/ctabda_21
 *
 * Node identifier: DT_N_S_combos_S_ctabda_21
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabda_21_PATH "/combos/ctabda_21"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabda_21_FULL_NAME "ctabda_21"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabda_21_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabda_21_CHILD_IDX 83

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_21_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabda_21_ORD 165
#define DT_N_S_combos_S_ctabda_21_ORD_STR_SORTABLE 00165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabda_21_REQUIRES_ORDS \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */ \
	164, /* /behaviors/td_find_s_ht */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabda_21_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabda_21_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabda_21_REG_NUM 0
#define DT_N_S_combos_S_ctabda_21_RANGES_NUM 0
#define DT_N_S_combos_S_ctabda_21_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabda_21_IRQ_NUM 0
#define DT_N_S_combos_S_ctabda_21_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabda_21_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_0_VAL_param1 5
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_1_PH DT_N_S_behaviors_S_td_find_s_ht
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_1_VAL_param1 458756
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_1_VAL_param2 134676489
#define DT_N_S_combos_S_ctabda_21_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_21, bindings, 0) \
	fn(DT_N_S_combos_S_ctabda_21, bindings, 1)
#define DT_N_S_combos_S_ctabda_21_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_21, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, bindings, 1)
#define DT_N_S_combos_S_ctabda_21_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_21, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_21, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_21, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_bindings_LEN 2
#define DT_N_S_combos_S_ctabda_21_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_key_positions {21 /* 0x15 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabda_21_P_key_positions_IDX_0 21
#define DT_N_S_combos_S_ctabda_21_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabda_21_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_21, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabda_21, key_positions, 1)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_21, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, key_positions, 1)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_21, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_21, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_21, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabda_21_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader {21 /* 0x15 */}
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_IDX_0 21
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_21, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_21, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_21, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_21, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabda_21_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabda_21_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabda_21_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_slow_release 1
#define DT_N_S_combos_S_ctabda_21_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabda_21_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabda_21_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_21, layers, 0) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 1) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 2) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 3) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 4) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 5)
#define DT_N_S_combos_S_ctabda_21_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_21, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 5)
#define DT_N_S_combos_S_ctabda_21_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_21, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_21, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_21, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_21, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_21_P_layers_LEN 6
#define DT_N_S_combos_S_ctabda_21_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/gpfind
 *
 * Node identifier: DT_N_S_behaviors_S_gpfind
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_gpfind_PATH "/behaviors/gpfind"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_gpfind_FULL_NAME "gpfind"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_gpfind_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_gpfind_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_gpfind_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_gpfind_ORD 166
#define DT_N_S_behaviors_S_gpfind_ORD_STR_SORTABLE 00166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_gpfind_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_gpfind_SUPPORTS_ORDS \
	167, /* /behaviors/td_find_g_ht */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_gpfind_EXISTS 1
#define DT_N_INST_1_zmk_behavior_macro DT_N_S_behaviors_S_gpfind
#define DT_N_NODELABEL_gpfind          DT_N_S_behaviors_S_gpfind

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_gpfind_REG_NUM 0
#define DT_N_S_behaviors_S_gpfind_RANGES_NUM 0
#define DT_N_S_behaviors_S_gpfind_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_gpfind_IRQ_NUM 0
#define DT_N_S_behaviors_S_gpfind_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_behaviors_S_gpfind_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_gpfind_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_behaviors_S_gpfind_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_gpfind_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_gpfind_P_label "&GPFIND"
#define DT_N_S_behaviors_S_gpfind_P_label_STRING_UNQUOTED &GPFIND
#define DT_N_S_behaviors_S_gpfind_P_label_STRING_TOKEN _GPFIND
#define DT_N_S_behaviors_S_gpfind_P_label_STRING_UPPER_TOKEN _GPFIND
#define DT_N_S_behaviors_S_gpfind_P_label_IDX_0 "&GPFIND"
#define DT_N_S_behaviors_S_gpfind_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_gpfind, label, 0)
#define DT_N_S_behaviors_S_gpfind_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_gpfind, label, 0)
#define DT_N_S_behaviors_S_gpfind_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_gpfind, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_gpfind_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_gpfind, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_gpfind_P_label_LEN 1
#define DT_N_S_behaviors_S_gpfind_P_label_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_1_VAL_param1 168230921
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_2_VAL_param1 10
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_4_VAL_param1 134676505
#define DT_N_S_behaviors_S_gpfind_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_gpfind_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_gpfind, bindings, 0) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 1) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 2) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 3) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 4)
#define DT_N_S_behaviors_S_gpfind_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_gpfind, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 4)
#define DT_N_S_behaviors_S_gpfind_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_gpfind, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 4, __VA_ARGS__)
#define DT_N_S_behaviors_S_gpfind_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_gpfind, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_gpfind, bindings, 4, __VA_ARGS__)
#define DT_N_S_behaviors_S_gpfind_P_bindings_LEN 5
#define DT_N_S_behaviors_S_gpfind_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/td_find_g_ht
 *
 * Node identifier: DT_N_S_behaviors_S_td_find_g_ht
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_td_find_g_ht_PATH "/behaviors/td_find_g_ht"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_td_find_g_ht_FULL_NAME "td_find_g_ht"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_td_find_g_ht_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_td_find_g_ht_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_td_find_g_ht_ORD 167
#define DT_N_S_behaviors_S_td_find_g_ht_ORD_STR_SORTABLE 00167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_td_find_g_ht_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	166, /* /behaviors/gpfind */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_td_find_g_ht_SUPPORTS_ORDS \
	168, /* /combos/ctabda_22 */ \
	213, /* /keymap/layer_direcaacc */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_td_find_g_ht_EXISTS 1
#define DT_N_INST_12_zmk_behavior_hold_tap DT_N_S_behaviors_S_td_find_g_ht
#define DT_N_NODELABEL_td_find_g_ht        DT_N_S_behaviors_S_td_find_g_ht

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_td_find_g_ht_REG_NUM 0
#define DT_N_S_behaviors_S_td_find_g_ht_RANGES_NUM 0
#define DT_N_S_behaviors_S_td_find_g_ht_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_td_find_g_ht_IRQ_NUM 0
#define DT_N_S_behaviors_S_td_find_g_ht_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_td_find_g_ht_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_td_find_g_ht_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_td_find_g_ht_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_td_find_g_ht_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_IDX_0 DT_N_S_behaviors_S_gpfind
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_IDX_0_PH DT_N_S_behaviors_S_gpfind
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 0) \
	fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 1)
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 1)
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_td_find_g_ht, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_LEN 2
#define DT_N_S_behaviors_S_td_find_g_ht_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_td_find_g_ht_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_quick_tap_ms 0
#define DT_N_S_behaviors_S_td_find_g_ht_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_global_quick_tap 0
#define DT_N_S_behaviors_S_td_find_g_ht_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_td_find_g_ht_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor "tap-preferred"
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_STRING_UNQUOTED tap-preferred
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_STRING_TOKEN tap_preferred
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_STRING_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_IDX_0 "tap-preferred"
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_ENUM_IDX 2
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_ENUM_VAL_tap_preferred_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_ENUM_TOKEN tap_preferred
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_ENUM_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_td_find_g_ht, flavor, 0)
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_td_find_g_ht, flavor, 0)
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_td_find_g_ht, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_td_find_g_ht, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_LEN 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_retro_tap 0
#define DT_N_S_behaviors_S_td_find_g_ht_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_td_find_g_ht_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /combos/ctabda_22
 *
 * Node identifier: DT_N_S_combos_S_ctabda_22
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabda_22_PATH "/combos/ctabda_22"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabda_22_FULL_NAME "ctabda_22"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabda_22_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabda_22_CHILD_IDX 84

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_22_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabda_22_ORD 168
#define DT_N_S_combos_S_ctabda_22_ORD_STR_SORTABLE 00168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabda_22_REQUIRES_ORDS \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */ \
	167, /* /behaviors/td_find_g_ht */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabda_22_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabda_22_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabda_22_REG_NUM 0
#define DT_N_S_combos_S_ctabda_22_RANGES_NUM 0
#define DT_N_S_combos_S_ctabda_22_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabda_22_IRQ_NUM 0
#define DT_N_S_combos_S_ctabda_22_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabda_22_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_0_VAL_param1 5
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_1_PH DT_N_S_behaviors_S_td_find_g_ht
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_1_VAL_param1 458756
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_1_VAL_param2 168230921
#define DT_N_S_combos_S_ctabda_22_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_22, bindings, 0) \
	fn(DT_N_S_combos_S_ctabda_22, bindings, 1)
#define DT_N_S_combos_S_ctabda_22_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_22, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, bindings, 1)
#define DT_N_S_combos_S_ctabda_22_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_22, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_22, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_22, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_bindings_LEN 2
#define DT_N_S_combos_S_ctabda_22_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_key_positions {22 /* 0x16 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabda_22_P_key_positions_IDX_0 22
#define DT_N_S_combos_S_ctabda_22_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabda_22_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_22, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabda_22, key_positions, 1)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_22, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, key_positions, 1)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_22, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_22, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_22, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabda_22_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader {22 /* 0x16 */}
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_IDX_0 22
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_22, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_22, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_22, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_22, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabda_22_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabda_22_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabda_22_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_slow_release 1
#define DT_N_S_combos_S_ctabda_22_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabda_22_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabda_22_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_22, layers, 0) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 1) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 2) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 3) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 4) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 5)
#define DT_N_S_combos_S_ctabda_22_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_22, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 5)
#define DT_N_S_combos_S_ctabda_22_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_22, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_22, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_22, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_22, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_22_P_layers_LEN 6
#define DT_N_S_combos_S_ctabda_22_P_layers_EXISTS 1

/*
 * Devicetree node: /behaviors/lrlMo
 *
 * Node identifier: DT_N_S_behaviors_S_lrlmo
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lrlmo_PATH "/behaviors/lrlMo"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lrlmo_FULL_NAME "lrlMo"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lrlmo_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lrlmo_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lrlmo_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lrlmo_ORD 169
#define DT_N_S_behaviors_S_lrlmo_ORD_STR_SORTABLE 00169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lrlmo_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lrlmo_SUPPORTS_ORDS \
	170, /* /combos/ctabda_23 */ \
	213, /* /keymap/layer_direcaacc */ \
	215, /* /keymap/layer_func */ \
	216, /* /keymap/layer_homerow */ \
	217, /* /keymap/layer_navoverleft */ \
	219, /* /keymap/layer_navoverr */ \
	220, /* /keymap/layer_numbers */ \
	221, /* /keymap/lower_layer */ \
	222, /* /keymap/raise_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lrlmo_EXISTS 1
#define DT_N_INST_1_zmk_behavior_hold_tap DT_N_S_behaviors_S_lrlmo
#define DT_N_NODELABEL_lrlmo              DT_N_S_behaviors_S_lrlmo

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lrlmo_REG_NUM 0
#define DT_N_S_behaviors_S_lrlmo_RANGES_NUM 0
#define DT_N_S_behaviors_S_lrlmo_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lrlmo_IRQ_NUM 0
#define DT_N_S_behaviors_S_lrlmo_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_lrlmo_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lrlmo_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_lrlmo_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lrlmo_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lrlmo_P_bindings_IDX_0 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrlmo_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrlmo_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrlmo_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrlmo_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lrlmo, bindings, 0) \
	fn(DT_N_S_behaviors_S_lrlmo, bindings, 1)
#define DT_N_S_behaviors_S_lrlmo_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lrlmo, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lrlmo, bindings, 1)
#define DT_N_S_behaviors_S_lrlmo_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lrlmo, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lrlmo, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrlmo_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lrlmo, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lrlmo, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrlmo_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lrlmo_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_tapping_term_ms 220
#define DT_N_S_behaviors_S_lrlmo_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_quick_tap_ms 175
#define DT_N_S_behaviors_S_lrlmo_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_global_quick_tap 0
#define DT_N_S_behaviors_S_lrlmo_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_lrlmo_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_flavor "balanced"
#define DT_N_S_behaviors_S_lrlmo_P_flavor_STRING_UNQUOTED balanced
#define DT_N_S_behaviors_S_lrlmo_P_flavor_STRING_TOKEN balanced
#define DT_N_S_behaviors_S_lrlmo_P_flavor_STRING_UPPER_TOKEN BALANCED
#define DT_N_S_behaviors_S_lrlmo_P_flavor_IDX_0 "balanced"
#define DT_N_S_behaviors_S_lrlmo_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_flavor_ENUM_IDX 1
#define DT_N_S_behaviors_S_lrlmo_P_flavor_ENUM_VAL_balanced_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_flavor_ENUM_TOKEN balanced
#define DT_N_S_behaviors_S_lrlmo_P_flavor_ENUM_UPPER_TOKEN BALANCED
#define DT_N_S_behaviors_S_lrlmo_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lrlmo, flavor, 0)
#define DT_N_S_behaviors_S_lrlmo_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lrlmo, flavor, 0)
#define DT_N_S_behaviors_S_lrlmo_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lrlmo, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrlmo_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lrlmo, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrlmo_P_flavor_LEN 1
#define DT_N_S_behaviors_S_lrlmo_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_lrlmo_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_lrlmo_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_retro_tap 0
#define DT_N_S_behaviors_S_lrlmo_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_on_release 1
#define DT_N_S_behaviors_S_lrlmo_P_hold_trigger_on_release_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_label "LRLMO"
#define DT_N_S_behaviors_S_lrlmo_P_label_STRING_UNQUOTED LRLMO
#define DT_N_S_behaviors_S_lrlmo_P_label_STRING_TOKEN LRLMO
#define DT_N_S_behaviors_S_lrlmo_P_label_STRING_UPPER_TOKEN LRLMO
#define DT_N_S_behaviors_S_lrlmo_P_label_IDX_0 "LRLMO"
#define DT_N_S_behaviors_S_lrlmo_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrlmo_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lrlmo, label, 0)
#define DT_N_S_behaviors_S_lrlmo_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lrlmo, label, 0)
#define DT_N_S_behaviors_S_lrlmo_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lrlmo, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrlmo_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lrlmo, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrlmo_P_label_LEN 1
#define DT_N_S_behaviors_S_lrlmo_P_label_EXISTS 1

/*
 * Devicetree node: /combos/ctabda_23
 *
 * Node identifier: DT_N_S_combos_S_ctabda_23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabda_23_PATH "/combos/ctabda_23"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabda_23_FULL_NAME "ctabda_23"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabda_23_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabda_23_CHILD_IDX 85

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabda_23_ORD 170
#define DT_N_S_combos_S_ctabda_23_ORD_STR_SORTABLE 00170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabda_23_REQUIRES_ORDS \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */ \
	169, /* /behaviors/lrlMo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabda_23_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabda_23_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabda_23_REG_NUM 0
#define DT_N_S_combos_S_ctabda_23_RANGES_NUM 0
#define DT_N_S_combos_S_ctabda_23_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabda_23_IRQ_NUM 0
#define DT_N_S_combos_S_ctabda_23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabda_23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_0_VAL_param1 5
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_1_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_1_VAL_param1 101122059
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_1_VAL_param2 101122117
#define DT_N_S_combos_S_ctabda_23_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_23, bindings, 0) \
	fn(DT_N_S_combos_S_ctabda_23, bindings, 1)
#define DT_N_S_combos_S_ctabda_23_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_23, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, bindings, 1)
#define DT_N_S_combos_S_ctabda_23_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_23, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_23, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_23, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_bindings_LEN 2
#define DT_N_S_combos_S_ctabda_23_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_key_positions {23 /* 0x17 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabda_23_P_key_positions_IDX_0 23
#define DT_N_S_combos_S_ctabda_23_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabda_23_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_23, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabda_23, key_positions, 1)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_23, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, key_positions, 1)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_23, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_23, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_23, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabda_23_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader {23 /* 0x17 */}
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_IDX_0 23
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_23, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_23, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_23, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_23, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabda_23_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabda_23_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabda_23_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_slow_release 1
#define DT_N_S_combos_S_ctabda_23_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabda_23_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabda_23_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_23, layers, 0) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 1) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 2) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 3) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 4) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 5)
#define DT_N_S_combos_S_ctabda_23_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_23, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 5)
#define DT_N_S_combos_S_ctabda_23_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_23, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_23, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_23, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_23, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_23_P_layers_LEN 6
#define DT_N_S_combos_S_ctabda_23_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctabda_24
 *
 * Node identifier: DT_N_S_combos_S_ctabda_24
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabda_24_PATH "/combos/ctabda_24"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabda_24_FULL_NAME "ctabda_24"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabda_24_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabda_24_CHILD_IDX 86

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_24_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabda_24_ORD 171
#define DT_N_S_combos_S_ctabda_24_ORD_STR_SORTABLE 00171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabda_24_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabda_24_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabda_24_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabda_24_REG_NUM 0
#define DT_N_S_combos_S_ctabda_24_RANGES_NUM 0
#define DT_N_S_combos_S_ctabda_24_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabda_24_IRQ_NUM 0
#define DT_N_S_combos_S_ctabda_24_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabda_24_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_0_VAL_param1 5
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_1_VAL_param1 50790445
#define DT_N_S_combos_S_ctabda_24_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_24, bindings, 0) \
	fn(DT_N_S_combos_S_ctabda_24, bindings, 1)
#define DT_N_S_combos_S_ctabda_24_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_24, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, bindings, 1)
#define DT_N_S_combos_S_ctabda_24_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_24, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_24, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_24, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_bindings_LEN 2
#define DT_N_S_combos_S_ctabda_24_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_key_positions {24 /* 0x18 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabda_24_P_key_positions_IDX_0 24
#define DT_N_S_combos_S_ctabda_24_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabda_24_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_24, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabda_24, key_positions, 1)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_24, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, key_positions, 1)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_24, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_24, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_24, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabda_24_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader {24 /* 0x18 */}
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_IDX_0 24
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_24, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_24, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_24, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_24, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabda_24_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabda_24_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabda_24_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_slow_release 1
#define DT_N_S_combos_S_ctabda_24_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabda_24_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabda_24_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_24, layers, 0) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 1) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 2) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 3) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 4) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 5)
#define DT_N_S_combos_S_ctabda_24_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_24, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 5)
#define DT_N_S_combos_S_ctabda_24_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_24, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_24, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_24, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_24, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_24_P_layers_LEN 6
#define DT_N_S_combos_S_ctabda_24_P_layers_EXISTS 1

/*
 * Devicetree node: /combos/ctabda_25
 *
 * Node identifier: DT_N_S_combos_S_ctabda_25
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_combos_S_ctabda_25_PATH "/combos/ctabda_25"

/* Node's name with unit-address: */
#define DT_N_S_combos_S_ctabda_25_FULL_NAME "ctabda_25"

/* Node parent (/combos) identifier: */
#define DT_N_S_combos_S_ctabda_25_PARENT DT_N_S_combos

/* Node's index in its parent's list of children: */
#define DT_N_S_combos_S_ctabda_25_CHILD_IDX 87

/* Helper macros for child nodes of this node. */
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD(fn) 
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_combos_S_ctabda_25_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_combos_S_ctabda_25_ORD 172
#define DT_N_S_combos_S_ctabda_25_ORD_STR_SORTABLE 00172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_combos_S_ctabda_25_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	39, /* /combos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_combos_S_ctabda_25_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_combos_S_ctabda_25_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_combos_S_ctabda_25_REG_NUM 0
#define DT_N_S_combos_S_ctabda_25_RANGES_NUM 0
#define DT_N_S_combos_S_ctabda_25_FOREACH_RANGE(fn) 
#define DT_N_S_combos_S_ctabda_25_IRQ_NUM 0
#define DT_N_S_combos_S_ctabda_25_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_combos_S_ctabda_25_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_0_VAL_param1 5
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_1_VAL_param1 17236013
#define DT_N_S_combos_S_ctabda_25_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_25, bindings, 0) \
	fn(DT_N_S_combos_S_ctabda_25, bindings, 1)
#define DT_N_S_combos_S_ctabda_25_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_25, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, bindings, 1)
#define DT_N_S_combos_S_ctabda_25_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_25, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_25, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_25, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, bindings, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_bindings_LEN 2
#define DT_N_S_combos_S_ctabda_25_P_bindings_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_key_positions {25 /* 0x19 */, 34 /* 0x22 */}
#define DT_N_S_combos_S_ctabda_25_P_key_positions_IDX_0 25
#define DT_N_S_combos_S_ctabda_25_P_key_positions_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_key_positions_IDX_1 34
#define DT_N_S_combos_S_ctabda_25_P_key_positions_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_key_positions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_25, key_positions, 0) \
	fn(DT_N_S_combos_S_ctabda_25, key_positions, 1)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_25, key_positions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, key_positions, 1)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_25, key_positions, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_25, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_25, key_positions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, key_positions, 1, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_LEN 2
#define DT_N_S_combos_S_ctabda_25_P_key_positions_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader {25 /* 0x19 */}
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_IDX_0 25
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_25, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_25, key_positions_leader, 0)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_25, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_25, key_positions_leader, 0, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_LEN 1
#define DT_N_S_combos_S_ctabda_25_P_key_positions_leader_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_timeout_ms 2000
#define DT_N_S_combos_S_ctabda_25_P_timeout_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_require_prior_idle_ms -1
#define DT_N_S_combos_S_ctabda_25_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_slow_release 1
#define DT_N_S_combos_S_ctabda_25_P_slow_release_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_layers {0 /* 0x0 */, 5 /* 0x5 */, 3 /* 0x3 */, 2 /* 0x2 */, 1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_0 0
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_0_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_1 5
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_1_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_2 3
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_2_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_3 2
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_3_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_4 1
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_4_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_5 6
#define DT_N_S_combos_S_ctabda_25_P_layers_IDX_5_EXISTS 1
#define DT_N_S_combos_S_ctabda_25_P_layers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_combos_S_ctabda_25, layers, 0) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 1) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 2) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 3) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 4) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 5)
#define DT_N_S_combos_S_ctabda_25_P_layers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_combos_S_ctabda_25, layers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 5)
#define DT_N_S_combos_S_ctabda_25_P_layers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_combos_S_ctabda_25, layers, 0, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 1, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 2, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 3, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 4, __VA_ARGS__) \
	fn(DT_N_S_combos_S_ctabda_25, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_layers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_combos_S_ctabda_25, layers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_combos_S_ctabda_25, layers, 5, __VA_ARGS__)
#define DT_N_S_combos_S_ctabda_25_P_layers_LEN 6
#define DT_N_S_combos_S_ctabda_25_P_layers_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 173
#define DT_N_S_cpus_ORD_STR_SORTABLE 00173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	174, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 174
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	173, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	175, /* /cpus/cpu@0/itm@e0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/itm@e0000000
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_itm_e0000000
 *
 * Binding (compatible = arm,armv7m-itm):
 *   $ZEPHYR_BASE/dts/bindings/debug/arm,armv7m-itm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PATH "/cpus/cpu@0/itm@e0000000"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FULL_NAME "itm@e0000000"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_ORD 175
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_ORD_STR_SORTABLE 00175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REQUIRES_ORDS \
	174, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_EXISTS 1
#define DT_N_INST_0_arm_armv7m_itm DT_N_S_cpus_S_cpu_0_S_itm_e0000000
#define DT_N_NODELABEL_itm         DT_N_S_cpus_S_cpu_0_S_itm_e0000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_ADDRESS 3758096384 /* 0xe0000000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MATCHES_arm_armv7m_itm 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0 "armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency 32000000
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible {"arm,armv7m-itm"}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0 "arm,armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_ITM
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg {3758096384 /* 0xe0000000 */, 4096 /* 0x1000 */}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0 3758096384
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1 4096
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /keymap
 *
 * Node identifier: DT_N_S_keymap
 *
 * Binding (compatible = zmk,keymap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_PATH "/keymap"

/* Node's name with unit-address: */
#define DT_N_S_keymap_FULL_NAME "keymap"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_FOREACH_CHILD(fn) fn(DT_N_S_keymap_S_base_layer) fn(DT_N_S_keymap_S_lower_layer) fn(DT_N_S_keymap_S_raise_layer) fn(DT_N_S_keymap_S_layer_homerow) fn(DT_N_S_keymap_S_layer_navoverr) fn(DT_N_S_keymap_S_layer_direcaacc) fn(DT_N_S_keymap_S_layer_func) fn(DT_N_S_keymap_S_adjust_layer) fn(DT_N_S_keymap_S_layer_numbers) fn(DT_N_S_keymap_S_layer_navoverleft)
#define DT_N_S_keymap_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_keymap_S_base_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_lower_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_raise_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_homerow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverr) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_direcaacc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_func) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_adjust_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_numbers) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverleft)
#define DT_N_S_keymap_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_keymap_S_base_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_lower_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_raise_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_homerow, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverr, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_direcaacc, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_func, __VA_ARGS__) fn(DT_N_S_keymap_S_adjust_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_numbers, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverleft, __VA_ARGS__)
#define DT_N_S_keymap_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_base_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_lower_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_raise_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_homerow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverr, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_direcaacc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_func, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_adjust_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_numbers, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverleft, __VA_ARGS__)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_keymap_S_base_layer) fn(DT_N_S_keymap_S_lower_layer) fn(DT_N_S_keymap_S_raise_layer) fn(DT_N_S_keymap_S_layer_homerow) fn(DT_N_S_keymap_S_layer_navoverr) fn(DT_N_S_keymap_S_layer_direcaacc) fn(DT_N_S_keymap_S_layer_func) fn(DT_N_S_keymap_S_adjust_layer) fn(DT_N_S_keymap_S_layer_numbers) fn(DT_N_S_keymap_S_layer_navoverleft)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_keymap_S_base_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_lower_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_raise_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_homerow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverr) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_direcaacc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_func) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_adjust_layer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_numbers) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverleft)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_keymap_S_base_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_lower_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_raise_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_homerow, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverr, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_direcaacc, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_func, __VA_ARGS__) fn(DT_N_S_keymap_S_adjust_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_numbers, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverleft, __VA_ARGS__)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_base_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_lower_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_raise_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_homerow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverr, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_direcaacc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_func, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_adjust_layer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_numbers, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_keymap_S_layer_navoverleft, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_keymap_ORD 176
#define DT_N_S_keymap_ORD_STR_SORTABLE 00176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */ \
	206, /* /keymap/base_layer */ \
	213, /* /keymap/layer_direcaacc */ \
	215, /* /keymap/layer_func */ \
	216, /* /keymap/layer_homerow */ \
	217, /* /keymap/layer_navoverleft */ \
	219, /* /keymap/layer_navoverr */ \
	220, /* /keymap/layer_numbers */ \
	221, /* /keymap/lower_layer */ \
	222, /* /keymap/raise_layer */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_EXISTS 1
#define DT_N_INST_0_zmk_keymap DT_N_S_keymap

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_REG_NUM 0
#define DT_N_S_keymap_RANGES_NUM 0
#define DT_N_S_keymap_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_IRQ_NUM 0
#define DT_N_S_keymap_COMPAT_MATCHES_zmk_keymap 1
#define DT_N_S_keymap_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_keymap_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_keymap_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_keymap_COMPAT_MODEL_IDX_0 "keymap"
#define DT_N_S_keymap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_P_compatible {"zmk,keymap"}
#define DT_N_S_keymap_P_compatible_IDX_0 "zmk,keymap"
#define DT_N_S_keymap_P_compatible_IDX_0_STRING_UNQUOTED zmk,keymap
#define DT_N_S_keymap_P_compatible_IDX_0_STRING_TOKEN zmk_keymap
#define DT_N_S_keymap_P_compatible_IDX_0_STRING_UPPER_TOKEN ZMK_KEYMAP
#define DT_N_S_keymap_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap, compatible, 0)
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap, compatible, 0)
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap, compatible, 0, __VA_ARGS__)
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap, compatible, 0, __VA_ARGS__)
#define DT_N_S_keymap_P_compatible_LEN 1
#define DT_N_S_keymap_P_compatible_EXISTS 1

/*
 * Devicetree node: /behaviors/bootload
 *
 * Node identifier: DT_N_S_behaviors_S_bootload
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bootload_PATH "/behaviors/bootload"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bootload_FULL_NAME "bootload"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bootload_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bootload_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bootload_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bootload_ORD 177
#define DT_N_S_behaviors_S_bootload_ORD_STR_SORTABLE 00177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bootload_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bootload_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bootload_EXISTS 1
#define DT_N_INST_1_zmk_behavior_reset DT_N_S_behaviors_S_bootload
#define DT_N_NODELABEL_bootloader      DT_N_S_behaviors_S_bootload

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bootload_REG_NUM 0
#define DT_N_S_behaviors_S_bootload_RANGES_NUM 0
#define DT_N_S_behaviors_S_bootload_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bootload_IRQ_NUM 0
#define DT_N_S_behaviors_S_bootload_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_bootload_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bootload_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bootload_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bootload_COMPAT_MODEL_IDX_0 "behavior-reset"
#define DT_N_S_behaviors_S_bootload_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bootload_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bootload_P_type 87
#define DT_N_S_behaviors_S_bootload_P_type_EXISTS 1
#define DT_N_S_behaviors_S_bootload_P_display_name "Bootloader"
#define DT_N_S_behaviors_S_bootload_P_display_name_STRING_UNQUOTED Bootloader
#define DT_N_S_behaviors_S_bootload_P_display_name_STRING_TOKEN Bootloader
#define DT_N_S_behaviors_S_bootload_P_display_name_STRING_UPPER_TOKEN BOOTLOADER
#define DT_N_S_behaviors_S_bootload_P_display_name_IDX_0 "Bootloader"
#define DT_N_S_behaviors_S_bootload_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bootload_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bootload, display_name, 0)
#define DT_N_S_behaviors_S_bootload_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bootload, display_name, 0)
#define DT_N_S_behaviors_S_bootload_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bootload, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bootload_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bootload, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bootload_P_display_name_LEN 1
#define DT_N_S_behaviors_S_bootload_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/outputs
 *
 * Node identifier: DT_N_S_behaviors_S_outputs
 *
 * Binding (compatible = zmk,behavior-outputs):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-outputs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_outputs_PATH "/behaviors/outputs"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_outputs_FULL_NAME "outputs"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_outputs_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_outputs_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_outputs_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_outputs_ORD 178
#define DT_N_S_behaviors_S_outputs_ORD_STR_SORTABLE 00178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_outputs_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_outputs_SUPPORTS_ORDS \
	181, /* /macros/bt_select_c */ \
	185, /* /behaviors/bt_0 */ \
	188, /* /behaviors/bt_1 */ \
	191, /* /behaviors/bt_2 */ \
	194, /* /behaviors/bt_3 */ \
	197, /* /behaviors/bt_4 */ \
	202, /* /keymap/adjust_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_outputs_EXISTS 1
#define DT_N_INST_0_zmk_behavior_outputs DT_N_S_behaviors_S_outputs
#define DT_N_NODELABEL_out               DT_N_S_behaviors_S_outputs

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_outputs_REG_NUM 0
#define DT_N_S_behaviors_S_outputs_RANGES_NUM 0
#define DT_N_S_behaviors_S_outputs_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_outputs_IRQ_NUM 0
#define DT_N_S_behaviors_S_outputs_COMPAT_MATCHES_zmk_behavior_outputs 1
#define DT_N_S_behaviors_S_outputs_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_outputs_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_outputs_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_outputs_COMPAT_MODEL_IDX_0 "behavior-outputs"
#define DT_N_S_behaviors_S_outputs_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_outputs_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_outputs_P_display_name "Output Selection"
#define DT_N_S_behaviors_S_outputs_P_display_name_STRING_UNQUOTED Output Selection
#define DT_N_S_behaviors_S_outputs_P_display_name_STRING_TOKEN Output_Selection
#define DT_N_S_behaviors_S_outputs_P_display_name_STRING_UPPER_TOKEN OUTPUT_SELECTION
#define DT_N_S_behaviors_S_outputs_P_display_name_IDX_0 "Output Selection"
#define DT_N_S_behaviors_S_outputs_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_outputs_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_outputs, display_name, 0)
#define DT_N_S_behaviors_S_outputs_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_outputs, display_name, 0)
#define DT_N_S_behaviors_S_outputs_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_outputs, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_outputs_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_outputs, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_outputs_P_display_name_LEN 1
#define DT_N_S_behaviors_S_outputs_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/bluetooth
 *
 * Node identifier: DT_N_S_behaviors_S_bluetooth
 *
 * Binding (compatible = zmk,behavior-bluetooth):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-bluetooth.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bluetooth_PATH "/behaviors/bluetooth"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bluetooth_FULL_NAME "bluetooth"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bluetooth_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bluetooth_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bluetooth_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bluetooth_ORD 179
#define DT_N_S_behaviors_S_bluetooth_ORD_STR_SORTABLE 00179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bluetooth_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bluetooth_SUPPORTS_ORDS \
	181, /* /macros/bt_select_c */ \
	182, /* /macros/bt_pairing_c */ \
	183, /* /macros/bt_disc_0 */ \
	186, /* /macros/bt_disc_1 */ \
	189, /* /macros/bt_disc_2 */ \
	192, /* /macros/bt_disc_3 */ \
	195, /* /macros/bt_disc_4 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bluetooth_EXISTS 1
#define DT_N_INST_0_zmk_behavior_bluetooth DT_N_S_behaviors_S_bluetooth
#define DT_N_NODELABEL_bt                  DT_N_S_behaviors_S_bluetooth

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bluetooth_REG_NUM 0
#define DT_N_S_behaviors_S_bluetooth_RANGES_NUM 0
#define DT_N_S_behaviors_S_bluetooth_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bluetooth_IRQ_NUM 0
#define DT_N_S_behaviors_S_bluetooth_COMPAT_MATCHES_zmk_behavior_bluetooth 1
#define DT_N_S_behaviors_S_bluetooth_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bluetooth_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bluetooth_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bluetooth_COMPAT_MODEL_IDX_0 "behavior-bluetooth"
#define DT_N_S_behaviors_S_bluetooth_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bluetooth_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bluetooth_P_display_name "Bluetooth"
#define DT_N_S_behaviors_S_bluetooth_P_display_name_STRING_UNQUOTED Bluetooth
#define DT_N_S_behaviors_S_bluetooth_P_display_name_STRING_TOKEN Bluetooth
#define DT_N_S_behaviors_S_bluetooth_P_display_name_STRING_UPPER_TOKEN BLUETOOTH
#define DT_N_S_behaviors_S_bluetooth_P_display_name_IDX_0 "Bluetooth"
#define DT_N_S_behaviors_S_bluetooth_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bluetooth_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bluetooth, display_name, 0)
#define DT_N_S_behaviors_S_bluetooth_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bluetooth, display_name, 0)
#define DT_N_S_behaviors_S_bluetooth_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bluetooth, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bluetooth_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bluetooth, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bluetooth_P_display_name_LEN 1
#define DT_N_S_behaviors_S_bluetooth_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_param_1to2
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_1to2
 *
 * Binding (compatible = zmk,macro-param-1to2):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-param-1to2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_1to2_PATH "/behaviors/macro_param_1to2"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_1to2_FULL_NAME "macro_param_1to2"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_1to2_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_1to2_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_1to2_ORD 180
#define DT_N_S_behaviors_S_macro_param_1to2_ORD_STR_SORTABLE 00180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_1to2_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_1to2_SUPPORTS_ORDS \
	181, /* /macros/bt_select_c */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_1to2_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_1to2 DT_N_S_behaviors_S_macro_param_1to2
#define DT_N_NODELABEL_macro_param_1to2  DT_N_S_behaviors_S_macro_param_1to2

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_1to2_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to2_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to2_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_1to2_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_MATCHES_zmk_macro_param_1to2 1
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_1to2_COMPAT_MODEL_IDX_0 "macro-param-1to2"
#define DT_N_S_behaviors_S_macro_param_1to2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_1to2_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /macros/bt_select_c
 *
 * Node identifier: DT_N_S_macros_S_bt_select_c
 *
 * Binding (compatible = zmk,behavior-macro-one-param):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro-one-param.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_select_c_PATH "/macros/bt_select_c"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_select_c_FULL_NAME "bt_select_c"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_select_c_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_select_c_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_select_c_ORD 181
#define DT_N_S_macros_S_bt_select_c_ORD_STR_SORTABLE 00181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_select_c_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	178, /* /behaviors/outputs */ \
	179, /* /behaviors/bluetooth */ \
	180, /* /behaviors/macro_param_1to2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_select_c_SUPPORTS_ORDS \
	182, /* /macros/bt_pairing_c */ \
	184, /* /macros/bt_select_disc_0 */ \
	187, /* /macros/bt_select_disc_1 */ \
	190, /* /macros/bt_select_disc_2 */ \
	193, /* /macros/bt_select_disc_3 */ \
	196, /* /macros/bt_select_disc_4 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_select_c_EXISTS 1
#define DT_N_INST_4_zmk_behavior_macro_one_param DT_N_S_macros_S_bt_select_c
#define DT_N_NODELABEL_bt_select_c               DT_N_S_macros_S_bt_select_c

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_select_c_REG_NUM 0
#define DT_N_S_macros_S_bt_select_c_RANGES_NUM 0
#define DT_N_S_macros_S_bt_select_c_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_select_c_IRQ_NUM 0
#define DT_N_S_macros_S_bt_select_c_COMPAT_MATCHES_zmk_behavior_macro_one_param 1
#define DT_N_S_macros_S_bt_select_c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_select_c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_COMPAT_MODEL_IDX_0 "behavior-macro-one-param"
#define DT_N_S_macros_S_bt_select_c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_select_c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_select_c_P_label "BT_SELECT_C"
#define DT_N_S_macros_S_bt_select_c_P_label_STRING_UNQUOTED BT_SELECT_C
#define DT_N_S_macros_S_bt_select_c_P_label_STRING_TOKEN BT_SELECT_C
#define DT_N_S_macros_S_bt_select_c_P_label_STRING_UPPER_TOKEN BT_SELECT_C
#define DT_N_S_macros_S_bt_select_c_P_label_IDX_0 "BT_SELECT_C"
#define DT_N_S_macros_S_bt_select_c_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_c, label, 0)
#define DT_N_S_macros_S_bt_select_c_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_c, label, 0)
#define DT_N_S_macros_S_bt_select_c_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_c, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_c_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_c, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_c_P_label_LEN 1
#define DT_N_S_macros_S_bt_select_c_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_1_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_1_VAL_param1 2
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_param_1to2
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_3_VAL_param1 200
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_4_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_5_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_5_VAL_param1 3
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_5_VAL_param2 0
#define DT_N_S_macros_S_bt_select_c_P_bindings_IDX_5_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_select_c_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_c, bindings, 0) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 1) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 2) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 3) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 4) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 5)
#define DT_N_S_macros_S_bt_select_c_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_c, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 5)
#define DT_N_S_macros_S_bt_select_c_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_c, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 5, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_c_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_c, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_c, bindings, 5, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_c_P_bindings_LEN 6
#define DT_N_S_macros_S_bt_select_c_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/bt_pairing_c
 *
 * Node identifier: DT_N_S_macros_S_bt_pairing_c
 *
 * Binding (compatible = zmk,behavior-macro-one-param):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro-one-param.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_pairing_c_PATH "/macros/bt_pairing_c"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_pairing_c_FULL_NAME "bt_pairing_c"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_pairing_c_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_pairing_c_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_pairing_c_ORD 182
#define DT_N_S_macros_S_bt_pairing_c_ORD_STR_SORTABLE 00182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_pairing_c_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	63, /* /behaviors/macro_param_1to1 */ \
	179, /* /behaviors/bluetooth */ \
	181, /* /macros/bt_select_c */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_pairing_c_SUPPORTS_ORDS \
	185, /* /behaviors/bt_0 */ \
	188, /* /behaviors/bt_1 */ \
	191, /* /behaviors/bt_2 */ \
	194, /* /behaviors/bt_3 */ \
	197, /* /behaviors/bt_4 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_pairing_c_EXISTS 1
#define DT_N_INST_5_zmk_behavior_macro_one_param DT_N_S_macros_S_bt_pairing_c
#define DT_N_NODELABEL_bt_pairing_c              DT_N_S_macros_S_bt_pairing_c

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_pairing_c_REG_NUM 0
#define DT_N_S_macros_S_bt_pairing_c_RANGES_NUM 0
#define DT_N_S_macros_S_bt_pairing_c_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_pairing_c_IRQ_NUM 0
#define DT_N_S_macros_S_bt_pairing_c_COMPAT_MATCHES_zmk_behavior_macro_one_param 1
#define DT_N_S_macros_S_bt_pairing_c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_pairing_c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_COMPAT_MODEL_IDX_0 "behavior-macro-one-param"
#define DT_N_S_macros_S_bt_pairing_c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_pairing_c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_pairing_c_P_label "BT_PAIRING_C"
#define DT_N_S_macros_S_bt_pairing_c_P_label_STRING_UNQUOTED BT_PAIRING_C
#define DT_N_S_macros_S_bt_pairing_c_P_label_STRING_TOKEN BT_PAIRING_C
#define DT_N_S_macros_S_bt_pairing_c_P_label_STRING_UPPER_TOKEN BT_PAIRING_C
#define DT_N_S_macros_S_bt_pairing_c_P_label_IDX_0 "BT_PAIRING_C"
#define DT_N_S_macros_S_bt_pairing_c_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_pairing_c, label, 0)
#define DT_N_S_macros_S_bt_pairing_c_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_pairing_c, label, 0)
#define DT_N_S_macros_S_bt_pairing_c_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_pairing_c, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_pairing_c_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_pairing_c, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_pairing_c_P_label_LEN 1
#define DT_N_S_macros_S_bt_pairing_c_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_1_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_2_PH DT_N_S_macros_S_bt_select_c
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_2_VAL_param1 0
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_3_VAL_param1 20
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_4_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_5_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_5_VAL_param1 0
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_5_VAL_param2 0
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_IDX_5_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_pairing_c, bindings, 0) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 1) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 2) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 3) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 4) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 5)
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_pairing_c, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 5)
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_pairing_c, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 5, __VA_ARGS__)
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_pairing_c, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_pairing_c, bindings, 5, __VA_ARGS__)
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_LEN 6
#define DT_N_S_macros_S_bt_pairing_c_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/bt_disc_0
 *
 * Node identifier: DT_N_S_macros_S_bt_disc_0
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_disc_0_PATH "/macros/bt_disc_0"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_disc_0_FULL_NAME "bt_disc_0"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_disc_0_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_disc_0_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_disc_0_ORD 183
#define DT_N_S_macros_S_bt_disc_0_ORD_STR_SORTABLE 00183

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_disc_0_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	179, /* /behaviors/bluetooth */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_disc_0_SUPPORTS_ORDS \
	184, /* /macros/bt_select_disc_0 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_disc_0_EXISTS 1
#define DT_N_INST_10_zmk_behavior_macro DT_N_S_macros_S_bt_disc_0
#define DT_N_NODELABEL_bt_disc_0        DT_N_S_macros_S_bt_disc_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_disc_0_REG_NUM 0
#define DT_N_S_macros_S_bt_disc_0_RANGES_NUM 0
#define DT_N_S_macros_S_bt_disc_0_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_disc_0_IRQ_NUM 0
#define DT_N_S_macros_S_bt_disc_0_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_disc_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_disc_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_disc_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_disc_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_disc_0_P_label "BT_DISC_0"
#define DT_N_S_macros_S_bt_disc_0_P_label_STRING_UNQUOTED BT_DISC_0
#define DT_N_S_macros_S_bt_disc_0_P_label_STRING_TOKEN BT_DISC_0
#define DT_N_S_macros_S_bt_disc_0_P_label_STRING_UPPER_TOKEN BT_DISC_0
#define DT_N_S_macros_S_bt_disc_0_P_label_IDX_0 "BT_DISC_0"
#define DT_N_S_macros_S_bt_disc_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_0, label, 0)
#define DT_N_S_macros_S_bt_disc_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_0, label, 0)
#define DT_N_S_macros_S_bt_disc_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_0, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_0, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_0_P_label_LEN 1
#define DT_N_S_macros_S_bt_disc_0_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_1_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_1_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_1_VAL_param2 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_4_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_4_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_4_VAL_param2 2
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_4_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_5_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_7_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_7_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_7_VAL_param2 3
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_7_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_8_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_8_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_9_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_10_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_10_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_10_VAL_param2 4
#define DT_N_S_macros_S_bt_disc_0_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_0, bindings, 0) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 1) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 2) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 3) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 4) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 5) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 6) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 7) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 8) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 9) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 10)
#define DT_N_S_macros_S_bt_disc_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_0, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 10)
#define DT_N_S_macros_S_bt_disc_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_0, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_0, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_0_P_bindings_LEN 11
#define DT_N_S_macros_S_bt_disc_0_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/bt_select_disc_0
 *
 * Node identifier: DT_N_S_macros_S_bt_select_disc_0
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_select_disc_0_PATH "/macros/bt_select_disc_0"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_select_disc_0_FULL_NAME "bt_select_disc_0"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_select_disc_0_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_select_disc_0_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_select_disc_0_ORD 184
#define DT_N_S_macros_S_bt_select_disc_0_ORD_STR_SORTABLE 00184

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_select_disc_0_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	181, /* /macros/bt_select_c */ \
	183, /* /macros/bt_disc_0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_select_disc_0_SUPPORTS_ORDS \
	185, /* /behaviors/bt_0 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_select_disc_0_EXISTS 1
#define DT_N_INST_15_zmk_behavior_macro DT_N_S_macros_S_bt_select_disc_0
#define DT_N_NODELABEL_bt_select_disc_0 DT_N_S_macros_S_bt_select_disc_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_select_disc_0_REG_NUM 0
#define DT_N_S_macros_S_bt_select_disc_0_RANGES_NUM 0
#define DT_N_S_macros_S_bt_select_disc_0_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_select_disc_0_IRQ_NUM 0
#define DT_N_S_macros_S_bt_select_disc_0_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_select_disc_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_select_disc_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_select_disc_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_select_disc_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_select_disc_0_P_label "BT_SELECT_DISC_0"
#define DT_N_S_macros_S_bt_select_disc_0_P_label_STRING_UNQUOTED BT_SELECT_DISC_0
#define DT_N_S_macros_S_bt_select_disc_0_P_label_STRING_TOKEN BT_SELECT_DISC_0
#define DT_N_S_macros_S_bt_select_disc_0_P_label_STRING_UPPER_TOKEN BT_SELECT_DISC_0
#define DT_N_S_macros_S_bt_select_disc_0_P_label_IDX_0 "BT_SELECT_DISC_0"
#define DT_N_S_macros_S_bt_select_disc_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_0, label, 0)
#define DT_N_S_macros_S_bt_select_disc_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_0, label, 0)
#define DT_N_S_macros_S_bt_select_disc_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_0, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_0, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_0_P_label_LEN 1
#define DT_N_S_macros_S_bt_select_disc_0_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_1_PH DT_N_S_macros_S_bt_select_c
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_1_VAL_param1 0
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_IDX_4_PH DT_N_S_macros_S_bt_disc_0
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 0) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 1) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 2) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 3) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_0, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_LEN 5
#define DT_N_S_macros_S_bt_select_disc_0_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/bt_0
 *
 * Node identifier: DT_N_S_behaviors_S_bt_0
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bt_0_PATH "/behaviors/bt_0"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bt_0_FULL_NAME "bt_0"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bt_0_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bt_0_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bt_0_ORD 185
#define DT_N_S_behaviors_S_bt_0_ORD_STR_SORTABLE 00185

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bt_0_REQUIRES_ORDS \
	10, /* /behaviors */ \
	178, /* /behaviors/outputs */ \
	182, /* /macros/bt_pairing_c */ \
	184, /* /macros/bt_select_disc_0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bt_0_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */ \
	213, /* /keymap/layer_direcaacc */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bt_0_EXISTS 1
#define DT_N_INST_0_zmk_behavior_tap_dance DT_N_S_behaviors_S_bt_0
#define DT_N_NODELABEL_bt_0                DT_N_S_behaviors_S_bt_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bt_0_REG_NUM 0
#define DT_N_S_behaviors_S_bt_0_RANGES_NUM 0
#define DT_N_S_behaviors_S_bt_0_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bt_0_IRQ_NUM 0
#define DT_N_S_behaviors_S_bt_0_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_bt_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bt_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_bt_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bt_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_0_PH DT_N_S_macros_S_bt_select_disc_0
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_1_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_2_PH DT_N_S_macros_S_bt_pairing_c
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_2_VAL_param1 0
#define DT_N_S_behaviors_S_bt_0_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_0, bindings, 0) \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 1) \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 2)
#define DT_N_S_behaviors_S_bt_0_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_0, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 2)
#define DT_N_S_behaviors_S_bt_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_0_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_0, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_0, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_0_P_bindings_LEN 3
#define DT_N_S_behaviors_S_bt_0_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_tapping_term_ms 1000
#define DT_N_S_behaviors_S_bt_0_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_label "BT_0"
#define DT_N_S_behaviors_S_bt_0_P_label_STRING_UNQUOTED BT_0
#define DT_N_S_behaviors_S_bt_0_P_label_STRING_TOKEN BT_0
#define DT_N_S_behaviors_S_bt_0_P_label_STRING_UPPER_TOKEN BT_0
#define DT_N_S_behaviors_S_bt_0_P_label_IDX_0 "BT_0"
#define DT_N_S_behaviors_S_bt_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_0, label, 0)
#define DT_N_S_behaviors_S_bt_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_0, label, 0)
#define DT_N_S_behaviors_S_bt_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_0, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_0, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_0_P_label_LEN 1
#define DT_N_S_behaviors_S_bt_0_P_label_EXISTS 1

/*
 * Devicetree node: /macros/bt_disc_1
 *
 * Node identifier: DT_N_S_macros_S_bt_disc_1
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_disc_1_PATH "/macros/bt_disc_1"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_disc_1_FULL_NAME "bt_disc_1"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_disc_1_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_disc_1_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_disc_1_ORD 186
#define DT_N_S_macros_S_bt_disc_1_ORD_STR_SORTABLE 00186

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_disc_1_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	179, /* /behaviors/bluetooth */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_disc_1_SUPPORTS_ORDS \
	187, /* /macros/bt_select_disc_1 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_disc_1_EXISTS 1
#define DT_N_INST_11_zmk_behavior_macro DT_N_S_macros_S_bt_disc_1
#define DT_N_NODELABEL_bt_disc_1        DT_N_S_macros_S_bt_disc_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_disc_1_REG_NUM 0
#define DT_N_S_macros_S_bt_disc_1_RANGES_NUM 0
#define DT_N_S_macros_S_bt_disc_1_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_disc_1_IRQ_NUM 0
#define DT_N_S_macros_S_bt_disc_1_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_disc_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_disc_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_disc_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_disc_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_disc_1_P_label "BT_DISC_1"
#define DT_N_S_macros_S_bt_disc_1_P_label_STRING_UNQUOTED BT_DISC_1
#define DT_N_S_macros_S_bt_disc_1_P_label_STRING_TOKEN BT_DISC_1
#define DT_N_S_macros_S_bt_disc_1_P_label_STRING_UPPER_TOKEN BT_DISC_1
#define DT_N_S_macros_S_bt_disc_1_P_label_IDX_0 "BT_DISC_1"
#define DT_N_S_macros_S_bt_disc_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_1, label, 0)
#define DT_N_S_macros_S_bt_disc_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_1, label, 0)
#define DT_N_S_macros_S_bt_disc_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_1, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_1, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_1_P_label_LEN 1
#define DT_N_S_macros_S_bt_disc_1_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_1_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_4_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_4_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_4_VAL_param2 2
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_4_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_5_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_7_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_7_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_7_VAL_param2 3
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_7_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_8_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_8_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_9_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_10_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_10_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_10_VAL_param2 4
#define DT_N_S_macros_S_bt_disc_1_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_1, bindings, 0) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 1) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 2) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 3) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 4) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 5) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 6) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 7) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 8) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 9) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 10)
#define DT_N_S_macros_S_bt_disc_1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_1, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 10)
#define DT_N_S_macros_S_bt_disc_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_1, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_1, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_1_P_bindings_LEN 11
#define DT_N_S_macros_S_bt_disc_1_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/bt_select_disc_1
 *
 * Node identifier: DT_N_S_macros_S_bt_select_disc_1
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_select_disc_1_PATH "/macros/bt_select_disc_1"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_select_disc_1_FULL_NAME "bt_select_disc_1"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_select_disc_1_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_select_disc_1_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_select_disc_1_ORD 187
#define DT_N_S_macros_S_bt_select_disc_1_ORD_STR_SORTABLE 00187

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_select_disc_1_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	181, /* /macros/bt_select_c */ \
	186, /* /macros/bt_disc_1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_select_disc_1_SUPPORTS_ORDS \
	188, /* /behaviors/bt_1 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_select_disc_1_EXISTS 1
#define DT_N_INST_16_zmk_behavior_macro DT_N_S_macros_S_bt_select_disc_1
#define DT_N_NODELABEL_bt_select_disc_1 DT_N_S_macros_S_bt_select_disc_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_select_disc_1_REG_NUM 0
#define DT_N_S_macros_S_bt_select_disc_1_RANGES_NUM 0
#define DT_N_S_macros_S_bt_select_disc_1_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_select_disc_1_IRQ_NUM 0
#define DT_N_S_macros_S_bt_select_disc_1_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_select_disc_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_select_disc_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_select_disc_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_select_disc_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_select_disc_1_P_label "BT_SELECT_DISC_1"
#define DT_N_S_macros_S_bt_select_disc_1_P_label_STRING_UNQUOTED BT_SELECT_DISC_1
#define DT_N_S_macros_S_bt_select_disc_1_P_label_STRING_TOKEN BT_SELECT_DISC_1
#define DT_N_S_macros_S_bt_select_disc_1_P_label_STRING_UPPER_TOKEN BT_SELECT_DISC_1
#define DT_N_S_macros_S_bt_select_disc_1_P_label_IDX_0 "BT_SELECT_DISC_1"
#define DT_N_S_macros_S_bt_select_disc_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_1, label, 0)
#define DT_N_S_macros_S_bt_select_disc_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_1, label, 0)
#define DT_N_S_macros_S_bt_select_disc_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_1, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_1, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_1_P_label_LEN 1
#define DT_N_S_macros_S_bt_select_disc_1_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_1_PH DT_N_S_macros_S_bt_select_c
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_IDX_4_PH DT_N_S_macros_S_bt_disc_1
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 0) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 1) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 2) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 3) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_1, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_LEN 5
#define DT_N_S_macros_S_bt_select_disc_1_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/bt_1
 *
 * Node identifier: DT_N_S_behaviors_S_bt_1
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bt_1_PATH "/behaviors/bt_1"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bt_1_FULL_NAME "bt_1"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bt_1_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bt_1_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bt_1_ORD 188
#define DT_N_S_behaviors_S_bt_1_ORD_STR_SORTABLE 00188

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bt_1_REQUIRES_ORDS \
	10, /* /behaviors */ \
	178, /* /behaviors/outputs */ \
	182, /* /macros/bt_pairing_c */ \
	187, /* /macros/bt_select_disc_1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bt_1_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */ \
	213, /* /keymap/layer_direcaacc */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bt_1_EXISTS 1
#define DT_N_INST_1_zmk_behavior_tap_dance DT_N_S_behaviors_S_bt_1
#define DT_N_NODELABEL_bt_1                DT_N_S_behaviors_S_bt_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bt_1_REG_NUM 0
#define DT_N_S_behaviors_S_bt_1_RANGES_NUM 0
#define DT_N_S_behaviors_S_bt_1_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bt_1_IRQ_NUM 0
#define DT_N_S_behaviors_S_bt_1_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_bt_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bt_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_bt_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bt_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_0_PH DT_N_S_macros_S_bt_select_disc_1
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_2_PH DT_N_S_macros_S_bt_pairing_c
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_2_VAL_param1 1
#define DT_N_S_behaviors_S_bt_1_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_1, bindings, 0) \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 1) \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 2)
#define DT_N_S_behaviors_S_bt_1_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_1, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 2)
#define DT_N_S_behaviors_S_bt_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_1_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_1, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_1, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_1_P_bindings_LEN 3
#define DT_N_S_behaviors_S_bt_1_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_tapping_term_ms 1000
#define DT_N_S_behaviors_S_bt_1_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_label "BT_1"
#define DT_N_S_behaviors_S_bt_1_P_label_STRING_UNQUOTED BT_1
#define DT_N_S_behaviors_S_bt_1_P_label_STRING_TOKEN BT_1
#define DT_N_S_behaviors_S_bt_1_P_label_STRING_UPPER_TOKEN BT_1
#define DT_N_S_behaviors_S_bt_1_P_label_IDX_0 "BT_1"
#define DT_N_S_behaviors_S_bt_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_1, label, 0)
#define DT_N_S_behaviors_S_bt_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_1, label, 0)
#define DT_N_S_behaviors_S_bt_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_1, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_1, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_1_P_label_LEN 1
#define DT_N_S_behaviors_S_bt_1_P_label_EXISTS 1

/*
 * Devicetree node: /macros/bt_disc_2
 *
 * Node identifier: DT_N_S_macros_S_bt_disc_2
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_disc_2_PATH "/macros/bt_disc_2"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_disc_2_FULL_NAME "bt_disc_2"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_disc_2_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_disc_2_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_disc_2_ORD 189
#define DT_N_S_macros_S_bt_disc_2_ORD_STR_SORTABLE 00189

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_disc_2_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	179, /* /behaviors/bluetooth */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_disc_2_SUPPORTS_ORDS \
	190, /* /macros/bt_select_disc_2 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_disc_2_EXISTS 1
#define DT_N_INST_12_zmk_behavior_macro DT_N_S_macros_S_bt_disc_2
#define DT_N_NODELABEL_bt_disc_2        DT_N_S_macros_S_bt_disc_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_disc_2_REG_NUM 0
#define DT_N_S_macros_S_bt_disc_2_RANGES_NUM 0
#define DT_N_S_macros_S_bt_disc_2_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_disc_2_IRQ_NUM 0
#define DT_N_S_macros_S_bt_disc_2_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_disc_2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_disc_2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_disc_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_disc_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_disc_2_P_label "BT_DISC_2"
#define DT_N_S_macros_S_bt_disc_2_P_label_STRING_UNQUOTED BT_DISC_2
#define DT_N_S_macros_S_bt_disc_2_P_label_STRING_TOKEN BT_DISC_2
#define DT_N_S_macros_S_bt_disc_2_P_label_STRING_UPPER_TOKEN BT_DISC_2
#define DT_N_S_macros_S_bt_disc_2_P_label_IDX_0 "BT_DISC_2"
#define DT_N_S_macros_S_bt_disc_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_2, label, 0)
#define DT_N_S_macros_S_bt_disc_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_2, label, 0)
#define DT_N_S_macros_S_bt_disc_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_2, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_2, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_2_P_label_LEN 1
#define DT_N_S_macros_S_bt_disc_2_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_1_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_4_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_4_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_4_VAL_param2 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_4_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_5_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_7_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_7_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_7_VAL_param2 3
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_7_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_8_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_8_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_9_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_10_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_10_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_10_VAL_param2 4
#define DT_N_S_macros_S_bt_disc_2_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_2, bindings, 0) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 1) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 2) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 3) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 4) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 5) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 6) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 7) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 8) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 9) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 10)
#define DT_N_S_macros_S_bt_disc_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_2, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 10)
#define DT_N_S_macros_S_bt_disc_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_2, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_2, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_2_P_bindings_LEN 11
#define DT_N_S_macros_S_bt_disc_2_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/bt_select_disc_2
 *
 * Node identifier: DT_N_S_macros_S_bt_select_disc_2
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_select_disc_2_PATH "/macros/bt_select_disc_2"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_select_disc_2_FULL_NAME "bt_select_disc_2"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_select_disc_2_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_select_disc_2_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_select_disc_2_ORD 190
#define DT_N_S_macros_S_bt_select_disc_2_ORD_STR_SORTABLE 00190

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_select_disc_2_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	181, /* /macros/bt_select_c */ \
	189, /* /macros/bt_disc_2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_select_disc_2_SUPPORTS_ORDS \
	191, /* /behaviors/bt_2 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_select_disc_2_EXISTS 1
#define DT_N_INST_17_zmk_behavior_macro DT_N_S_macros_S_bt_select_disc_2
#define DT_N_NODELABEL_bt_select_disc_2 DT_N_S_macros_S_bt_select_disc_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_select_disc_2_REG_NUM 0
#define DT_N_S_macros_S_bt_select_disc_2_RANGES_NUM 0
#define DT_N_S_macros_S_bt_select_disc_2_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_select_disc_2_IRQ_NUM 0
#define DT_N_S_macros_S_bt_select_disc_2_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_select_disc_2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_select_disc_2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_select_disc_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_select_disc_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_select_disc_2_P_label "BT_SELECT_DISC_2"
#define DT_N_S_macros_S_bt_select_disc_2_P_label_STRING_UNQUOTED BT_SELECT_DISC_2
#define DT_N_S_macros_S_bt_select_disc_2_P_label_STRING_TOKEN BT_SELECT_DISC_2
#define DT_N_S_macros_S_bt_select_disc_2_P_label_STRING_UPPER_TOKEN BT_SELECT_DISC_2
#define DT_N_S_macros_S_bt_select_disc_2_P_label_IDX_0 "BT_SELECT_DISC_2"
#define DT_N_S_macros_S_bt_select_disc_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_2, label, 0)
#define DT_N_S_macros_S_bt_select_disc_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_2, label, 0)
#define DT_N_S_macros_S_bt_select_disc_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_2, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_2, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_2_P_label_LEN 1
#define DT_N_S_macros_S_bt_select_disc_2_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_1_PH DT_N_S_macros_S_bt_select_c
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_1_VAL_param1 2
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_IDX_4_PH DT_N_S_macros_S_bt_disc_2
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 0) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 1) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 2) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 3) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_2, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_LEN 5
#define DT_N_S_macros_S_bt_select_disc_2_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/bt_2
 *
 * Node identifier: DT_N_S_behaviors_S_bt_2
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bt_2_PATH "/behaviors/bt_2"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bt_2_FULL_NAME "bt_2"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bt_2_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bt_2_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bt_2_ORD 191
#define DT_N_S_behaviors_S_bt_2_ORD_STR_SORTABLE 00191

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bt_2_REQUIRES_ORDS \
	10, /* /behaviors */ \
	178, /* /behaviors/outputs */ \
	182, /* /macros/bt_pairing_c */ \
	190, /* /macros/bt_select_disc_2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bt_2_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */ \
	213, /* /keymap/layer_direcaacc */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bt_2_EXISTS 1
#define DT_N_INST_2_zmk_behavior_tap_dance DT_N_S_behaviors_S_bt_2
#define DT_N_NODELABEL_bt_2                DT_N_S_behaviors_S_bt_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bt_2_REG_NUM 0
#define DT_N_S_behaviors_S_bt_2_RANGES_NUM 0
#define DT_N_S_behaviors_S_bt_2_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bt_2_IRQ_NUM 0
#define DT_N_S_behaviors_S_bt_2_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_bt_2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bt_2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_bt_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bt_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_0_PH DT_N_S_macros_S_bt_select_disc_2
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_2_PH DT_N_S_macros_S_bt_pairing_c
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_2_VAL_param1 2
#define DT_N_S_behaviors_S_bt_2_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_2, bindings, 0) \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 1) \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 2)
#define DT_N_S_behaviors_S_bt_2_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_2, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 2)
#define DT_N_S_behaviors_S_bt_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_2_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_2, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_2, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_2_P_bindings_LEN 3
#define DT_N_S_behaviors_S_bt_2_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_tapping_term_ms 1000
#define DT_N_S_behaviors_S_bt_2_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_label "BT_2"
#define DT_N_S_behaviors_S_bt_2_P_label_STRING_UNQUOTED BT_2
#define DT_N_S_behaviors_S_bt_2_P_label_STRING_TOKEN BT_2
#define DT_N_S_behaviors_S_bt_2_P_label_STRING_UPPER_TOKEN BT_2
#define DT_N_S_behaviors_S_bt_2_P_label_IDX_0 "BT_2"
#define DT_N_S_behaviors_S_bt_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_2, label, 0)
#define DT_N_S_behaviors_S_bt_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_2, label, 0)
#define DT_N_S_behaviors_S_bt_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_2, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_2, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_2_P_label_LEN 1
#define DT_N_S_behaviors_S_bt_2_P_label_EXISTS 1

/*
 * Devicetree node: /macros/bt_disc_3
 *
 * Node identifier: DT_N_S_macros_S_bt_disc_3
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_disc_3_PATH "/macros/bt_disc_3"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_disc_3_FULL_NAME "bt_disc_3"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_disc_3_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_disc_3_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_disc_3_ORD 192
#define DT_N_S_macros_S_bt_disc_3_ORD_STR_SORTABLE 00192

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_disc_3_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	179, /* /behaviors/bluetooth */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_disc_3_SUPPORTS_ORDS \
	193, /* /macros/bt_select_disc_3 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_disc_3_EXISTS 1
#define DT_N_INST_13_zmk_behavior_macro DT_N_S_macros_S_bt_disc_3
#define DT_N_NODELABEL_bt_disc_3        DT_N_S_macros_S_bt_disc_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_disc_3_REG_NUM 0
#define DT_N_S_macros_S_bt_disc_3_RANGES_NUM 0
#define DT_N_S_macros_S_bt_disc_3_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_disc_3_IRQ_NUM 0
#define DT_N_S_macros_S_bt_disc_3_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_disc_3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_disc_3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_disc_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_disc_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_disc_3_P_label "BT_DISC_3"
#define DT_N_S_macros_S_bt_disc_3_P_label_STRING_UNQUOTED BT_DISC_3
#define DT_N_S_macros_S_bt_disc_3_P_label_STRING_TOKEN BT_DISC_3
#define DT_N_S_macros_S_bt_disc_3_P_label_STRING_UPPER_TOKEN BT_DISC_3
#define DT_N_S_macros_S_bt_disc_3_P_label_IDX_0 "BT_DISC_3"
#define DT_N_S_macros_S_bt_disc_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_3, label, 0)
#define DT_N_S_macros_S_bt_disc_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_3, label, 0)
#define DT_N_S_macros_S_bt_disc_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_3, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_3, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_3_P_label_LEN 1
#define DT_N_S_macros_S_bt_disc_3_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_1_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_4_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_4_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_4_VAL_param2 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_4_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_5_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_7_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_7_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_7_VAL_param2 2
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_7_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_8_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_8_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_9_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_10_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_10_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_10_VAL_param2 4
#define DT_N_S_macros_S_bt_disc_3_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_3, bindings, 0) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 1) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 2) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 3) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 4) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 5) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 6) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 7) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 8) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 9) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 10)
#define DT_N_S_macros_S_bt_disc_3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_3, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 10)
#define DT_N_S_macros_S_bt_disc_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_3, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_3, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_3_P_bindings_LEN 11
#define DT_N_S_macros_S_bt_disc_3_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/bt_select_disc_3
 *
 * Node identifier: DT_N_S_macros_S_bt_select_disc_3
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_select_disc_3_PATH "/macros/bt_select_disc_3"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_select_disc_3_FULL_NAME "bt_select_disc_3"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_select_disc_3_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_select_disc_3_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_select_disc_3_ORD 193
#define DT_N_S_macros_S_bt_select_disc_3_ORD_STR_SORTABLE 00193

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_select_disc_3_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	181, /* /macros/bt_select_c */ \
	192, /* /macros/bt_disc_3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_select_disc_3_SUPPORTS_ORDS \
	194, /* /behaviors/bt_3 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_select_disc_3_EXISTS 1
#define DT_N_INST_18_zmk_behavior_macro DT_N_S_macros_S_bt_select_disc_3
#define DT_N_NODELABEL_bt_select_disc_3 DT_N_S_macros_S_bt_select_disc_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_select_disc_3_REG_NUM 0
#define DT_N_S_macros_S_bt_select_disc_3_RANGES_NUM 0
#define DT_N_S_macros_S_bt_select_disc_3_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_select_disc_3_IRQ_NUM 0
#define DT_N_S_macros_S_bt_select_disc_3_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_select_disc_3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_select_disc_3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_select_disc_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_select_disc_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_select_disc_3_P_label "BT_SELECT_DISC_3"
#define DT_N_S_macros_S_bt_select_disc_3_P_label_STRING_UNQUOTED BT_SELECT_DISC_3
#define DT_N_S_macros_S_bt_select_disc_3_P_label_STRING_TOKEN BT_SELECT_DISC_3
#define DT_N_S_macros_S_bt_select_disc_3_P_label_STRING_UPPER_TOKEN BT_SELECT_DISC_3
#define DT_N_S_macros_S_bt_select_disc_3_P_label_IDX_0 "BT_SELECT_DISC_3"
#define DT_N_S_macros_S_bt_select_disc_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_3, label, 0)
#define DT_N_S_macros_S_bt_select_disc_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_3, label, 0)
#define DT_N_S_macros_S_bt_select_disc_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_3, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_3, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_3_P_label_LEN 1
#define DT_N_S_macros_S_bt_select_disc_3_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_1_PH DT_N_S_macros_S_bt_select_c
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_1_VAL_param1 3
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_IDX_4_PH DT_N_S_macros_S_bt_disc_3
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 0) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 1) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 2) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 3) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_3, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_LEN 5
#define DT_N_S_macros_S_bt_select_disc_3_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/bt_3
 *
 * Node identifier: DT_N_S_behaviors_S_bt_3
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bt_3_PATH "/behaviors/bt_3"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bt_3_FULL_NAME "bt_3"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bt_3_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bt_3_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bt_3_ORD 194
#define DT_N_S_behaviors_S_bt_3_ORD_STR_SORTABLE 00194

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bt_3_REQUIRES_ORDS \
	10, /* /behaviors */ \
	178, /* /behaviors/outputs */ \
	182, /* /macros/bt_pairing_c */ \
	193, /* /macros/bt_select_disc_3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bt_3_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bt_3_EXISTS 1
#define DT_N_INST_3_zmk_behavior_tap_dance DT_N_S_behaviors_S_bt_3
#define DT_N_NODELABEL_bt_3                DT_N_S_behaviors_S_bt_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bt_3_REG_NUM 0
#define DT_N_S_behaviors_S_bt_3_RANGES_NUM 0
#define DT_N_S_behaviors_S_bt_3_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bt_3_IRQ_NUM 0
#define DT_N_S_behaviors_S_bt_3_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_bt_3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bt_3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_bt_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bt_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_0_PH DT_N_S_macros_S_bt_select_disc_3
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_2_PH DT_N_S_macros_S_bt_pairing_c
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_2_VAL_param1 3
#define DT_N_S_behaviors_S_bt_3_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_3, bindings, 0) \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 1) \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 2)
#define DT_N_S_behaviors_S_bt_3_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_3, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 2)
#define DT_N_S_behaviors_S_bt_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_3_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_3, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_3, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_3_P_bindings_LEN 3
#define DT_N_S_behaviors_S_bt_3_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_tapping_term_ms 1000
#define DT_N_S_behaviors_S_bt_3_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_label "BT_3"
#define DT_N_S_behaviors_S_bt_3_P_label_STRING_UNQUOTED BT_3
#define DT_N_S_behaviors_S_bt_3_P_label_STRING_TOKEN BT_3
#define DT_N_S_behaviors_S_bt_3_P_label_STRING_UPPER_TOKEN BT_3
#define DT_N_S_behaviors_S_bt_3_P_label_IDX_0 "BT_3"
#define DT_N_S_behaviors_S_bt_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_3, label, 0)
#define DT_N_S_behaviors_S_bt_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_3, label, 0)
#define DT_N_S_behaviors_S_bt_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_3, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_3, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_3_P_label_LEN 1
#define DT_N_S_behaviors_S_bt_3_P_label_EXISTS 1

/*
 * Devicetree node: /macros/bt_disc_4
 *
 * Node identifier: DT_N_S_macros_S_bt_disc_4
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_disc_4_PATH "/macros/bt_disc_4"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_disc_4_FULL_NAME "bt_disc_4"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_disc_4_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_disc_4_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_disc_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_disc_4_ORD 195
#define DT_N_S_macros_S_bt_disc_4_ORD_STR_SORTABLE 00195

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_disc_4_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	179, /* /behaviors/bluetooth */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_disc_4_SUPPORTS_ORDS \
	196, /* /macros/bt_select_disc_4 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_disc_4_EXISTS 1
#define DT_N_INST_14_zmk_behavior_macro DT_N_S_macros_S_bt_disc_4
#define DT_N_NODELABEL_bt_disc_4        DT_N_S_macros_S_bt_disc_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_disc_4_REG_NUM 0
#define DT_N_S_macros_S_bt_disc_4_RANGES_NUM 0
#define DT_N_S_macros_S_bt_disc_4_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_disc_4_IRQ_NUM 0
#define DT_N_S_macros_S_bt_disc_4_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_disc_4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_disc_4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_disc_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_disc_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_disc_4_P_label "BT_DISC_4"
#define DT_N_S_macros_S_bt_disc_4_P_label_STRING_UNQUOTED BT_DISC_4
#define DT_N_S_macros_S_bt_disc_4_P_label_STRING_TOKEN BT_DISC_4
#define DT_N_S_macros_S_bt_disc_4_P_label_STRING_UPPER_TOKEN BT_DISC_4
#define DT_N_S_macros_S_bt_disc_4_P_label_IDX_0 "BT_DISC_4"
#define DT_N_S_macros_S_bt_disc_4_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_4, label, 0)
#define DT_N_S_macros_S_bt_disc_4_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_4, label, 0)
#define DT_N_S_macros_S_bt_disc_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_4, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_4_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_4, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_4_P_label_LEN 1
#define DT_N_S_macros_S_bt_disc_4_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_1_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_1_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_4_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_4_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_4_VAL_param2 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_4_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_5_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_7_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_7_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_7_VAL_param2 2
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_7_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_8_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_8_VAL_param1 20
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_9_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_10_PH DT_N_S_behaviors_S_bluetooth
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_10_VAL_param1 5
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_10_VAL_param2 3
#define DT_N_S_macros_S_bt_disc_4_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_bt_disc_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_disc_4, bindings, 0) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 1) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 2) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 3) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 4) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 5) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 6) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 7) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 8) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 9) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 10)
#define DT_N_S_macros_S_bt_disc_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_disc_4, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 10)
#define DT_N_S_macros_S_bt_disc_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_disc_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_disc_4, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_disc_4, bindings, 10, __VA_ARGS__)
#define DT_N_S_macros_S_bt_disc_4_P_bindings_LEN 11
#define DT_N_S_macros_S_bt_disc_4_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/bt_select_disc_4
 *
 * Node identifier: DT_N_S_macros_S_bt_select_disc_4
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_bt_select_disc_4_PATH "/macros/bt_select_disc_4"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_bt_select_disc_4_FULL_NAME "bt_select_disc_4"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_bt_select_disc_4_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_bt_select_disc_4_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_bt_select_disc_4_ORD 196
#define DT_N_S_macros_S_bt_select_disc_4_ORD_STR_SORTABLE 00196

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_bt_select_disc_4_REQUIRES_ORDS \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */ \
	181, /* /macros/bt_select_c */ \
	195, /* /macros/bt_disc_4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_bt_select_disc_4_SUPPORTS_ORDS \
	197, /* /behaviors/bt_4 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_bt_select_disc_4_EXISTS 1
#define DT_N_INST_19_zmk_behavior_macro DT_N_S_macros_S_bt_select_disc_4
#define DT_N_NODELABEL_bt_select_disc_4 DT_N_S_macros_S_bt_select_disc_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_bt_select_disc_4_REG_NUM 0
#define DT_N_S_macros_S_bt_select_disc_4_RANGES_NUM 0
#define DT_N_S_macros_S_bt_select_disc_4_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_bt_select_disc_4_IRQ_NUM 0
#define DT_N_S_macros_S_bt_select_disc_4_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_bt_select_disc_4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_bt_select_disc_4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_bt_select_disc_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_bt_select_disc_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_bt_select_disc_4_P_label "BT_SELECT_DISC_4"
#define DT_N_S_macros_S_bt_select_disc_4_P_label_STRING_UNQUOTED BT_SELECT_DISC_4
#define DT_N_S_macros_S_bt_select_disc_4_P_label_STRING_TOKEN BT_SELECT_DISC_4
#define DT_N_S_macros_S_bt_select_disc_4_P_label_STRING_UPPER_TOKEN BT_SELECT_DISC_4
#define DT_N_S_macros_S_bt_select_disc_4_P_label_IDX_0 "BT_SELECT_DISC_4"
#define DT_N_S_macros_S_bt_select_disc_4_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_4, label, 0)
#define DT_N_S_macros_S_bt_select_disc_4_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_4, label, 0)
#define DT_N_S_macros_S_bt_select_disc_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_4, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_4_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_4, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_4_P_label_LEN 1
#define DT_N_S_macros_S_bt_select_disc_4_P_label_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_1_PH DT_N_S_macros_S_bt_select_c
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_1_VAL_param1 4
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_IDX_4_PH DT_N_S_macros_S_bt_disc_4
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 0) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 1) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 2) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 3) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 4)
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_bt_select_disc_4, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_LEN 5
#define DT_N_S_macros_S_bt_select_disc_4_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/bt_4
 *
 * Node identifier: DT_N_S_behaviors_S_bt_4
 *
 * Binding (compatible = zmk,behavior-tap-dance):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-tap-dance.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_bt_4_PATH "/behaviors/bt_4"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_bt_4_FULL_NAME "bt_4"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_bt_4_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_bt_4_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_bt_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_bt_4_ORD 197
#define DT_N_S_behaviors_S_bt_4_ORD_STR_SORTABLE 00197

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_bt_4_REQUIRES_ORDS \
	10, /* /behaviors */ \
	178, /* /behaviors/outputs */ \
	182, /* /macros/bt_pairing_c */ \
	196, /* /macros/bt_select_disc_4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_bt_4_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_bt_4_EXISTS 1
#define DT_N_INST_4_zmk_behavior_tap_dance DT_N_S_behaviors_S_bt_4
#define DT_N_NODELABEL_bt_4                DT_N_S_behaviors_S_bt_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_bt_4_REG_NUM 0
#define DT_N_S_behaviors_S_bt_4_RANGES_NUM 0
#define DT_N_S_behaviors_S_bt_4_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_bt_4_IRQ_NUM 0
#define DT_N_S_behaviors_S_bt_4_COMPAT_MATCHES_zmk_behavior_tap_dance 1
#define DT_N_S_behaviors_S_bt_4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_bt_4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_COMPAT_MODEL_IDX_0 "behavior-tap-dance"
#define DT_N_S_behaviors_S_bt_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_bt_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_0_PH DT_N_S_macros_S_bt_select_disc_4
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_1_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_2_PH DT_N_S_macros_S_bt_pairing_c
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_2_VAL_param1 4
#define DT_N_S_behaviors_S_bt_4_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_4, bindings, 0) \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 1) \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 2)
#define DT_N_S_behaviors_S_bt_4_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_4, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 2)
#define DT_N_S_behaviors_S_bt_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_4_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_4, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_bt_4, bindings, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_4_P_bindings_LEN 3
#define DT_N_S_behaviors_S_bt_4_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_tapping_term_ms 1000
#define DT_N_S_behaviors_S_bt_4_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_label "BT_4"
#define DT_N_S_behaviors_S_bt_4_P_label_STRING_UNQUOTED BT_4
#define DT_N_S_behaviors_S_bt_4_P_label_STRING_TOKEN BT_4
#define DT_N_S_behaviors_S_bt_4_P_label_STRING_UPPER_TOKEN BT_4
#define DT_N_S_behaviors_S_bt_4_P_label_IDX_0 "BT_4"
#define DT_N_S_behaviors_S_bt_4_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_bt_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_bt_4, label, 0)
#define DT_N_S_behaviors_S_bt_4_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_bt_4, label, 0)
#define DT_N_S_behaviors_S_bt_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_bt_4, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_4_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_bt_4, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_bt_4_P_label_LEN 1
#define DT_N_S_behaviors_S_bt_4_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/space
 *
 * Node identifier: DT_N_S_behaviors_S_space
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_space_PATH "/behaviors/space"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_space_FULL_NAME "space"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_space_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_space_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_space_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_space_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_space_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_space_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_space_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_space_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_space_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_space_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_space_ORD 198
#define DT_N_S_behaviors_S_space_ORD_STR_SORTABLE 00198

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_space_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_space_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */ \
	213, /* /keymap/layer_direcaacc */ \
	215, /* /keymap/layer_func */ \
	216, /* /keymap/layer_homerow */ \
	217, /* /keymap/layer_navoverleft */ \
	219, /* /keymap/layer_navoverr */ \
	220, /* /keymap/layer_numbers */ \
	221, /* /keymap/lower_layer */ \
	222, /* /keymap/raise_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_space_EXISTS 1
#define DT_N_INST_5_zmk_behavior_hold_tap DT_N_S_behaviors_S_space
#define DT_N_NODELABEL_space              DT_N_S_behaviors_S_space

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_space_REG_NUM 0
#define DT_N_S_behaviors_S_space_RANGES_NUM 0
#define DT_N_S_behaviors_S_space_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_space_IRQ_NUM 0
#define DT_N_S_behaviors_S_space_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_space_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_space_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_space_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_space_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_space_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_space_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_space_P_bindings_IDX_0 DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_space_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_space_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_space_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_space_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_space_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_space_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_space, bindings, 0) \
	fn(DT_N_S_behaviors_S_space, bindings, 1)
#define DT_N_S_behaviors_S_space_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_space, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_space, bindings, 1)
#define DT_N_S_behaviors_S_space_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_space, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_space, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_space_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_space, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_space, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_space_P_bindings_LEN 2
#define DT_N_S_behaviors_S_space_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_space_P_tapping_term_ms 220
#define DT_N_S_behaviors_S_space_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_space_P_quick_tap_ms -1
#define DT_N_S_behaviors_S_space_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_space_P_global_quick_tap 0
#define DT_N_S_behaviors_S_space_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_space_P_require_prior_idle_ms 80
#define DT_N_S_behaviors_S_space_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_space_P_flavor "balanced"
#define DT_N_S_behaviors_S_space_P_flavor_STRING_UNQUOTED balanced
#define DT_N_S_behaviors_S_space_P_flavor_STRING_TOKEN balanced
#define DT_N_S_behaviors_S_space_P_flavor_STRING_UPPER_TOKEN BALANCED
#define DT_N_S_behaviors_S_space_P_flavor_IDX_0 "balanced"
#define DT_N_S_behaviors_S_space_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_space_P_flavor_ENUM_IDX 1
#define DT_N_S_behaviors_S_space_P_flavor_ENUM_VAL_balanced_EXISTS 1
#define DT_N_S_behaviors_S_space_P_flavor_ENUM_TOKEN balanced
#define DT_N_S_behaviors_S_space_P_flavor_ENUM_UPPER_TOKEN BALANCED
#define DT_N_S_behaviors_S_space_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_space, flavor, 0)
#define DT_N_S_behaviors_S_space_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_space, flavor, 0)
#define DT_N_S_behaviors_S_space_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_space, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_space_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_space, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_space_P_flavor_LEN 1
#define DT_N_S_behaviors_S_space_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_space_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_space_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_space_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_space_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_space_P_retro_tap 0
#define DT_N_S_behaviors_S_space_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_space_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_space_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_space_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_space_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_space_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_space_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_space_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_space_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_space_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /behaviors/sysreset
 *
 * Node identifier: DT_N_S_behaviors_S_sysreset
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_sysreset_PATH "/behaviors/sysreset"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_sysreset_FULL_NAME "sysreset"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_sysreset_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_sysreset_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sysreset_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_sysreset_ORD 199
#define DT_N_S_behaviors_S_sysreset_ORD_STR_SORTABLE 00199

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_sysreset_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_sysreset_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_sysreset_EXISTS 1
#define DT_N_INST_0_zmk_behavior_reset DT_N_S_behaviors_S_sysreset
#define DT_N_NODELABEL_sys_reset       DT_N_S_behaviors_S_sysreset

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_sysreset_REG_NUM 0
#define DT_N_S_behaviors_S_sysreset_RANGES_NUM 0
#define DT_N_S_behaviors_S_sysreset_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_sysreset_IRQ_NUM 0
#define DT_N_S_behaviors_S_sysreset_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_sysreset_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sysreset_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_sysreset_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sysreset_COMPAT_MODEL_IDX_0 "behavior-reset"
#define DT_N_S_behaviors_S_sysreset_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_sysreset_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_sysreset_P_type 0
#define DT_N_S_behaviors_S_sysreset_P_type_EXISTS 1
#define DT_N_S_behaviors_S_sysreset_P_display_name "Reset"
#define DT_N_S_behaviors_S_sysreset_P_display_name_STRING_UNQUOTED Reset
#define DT_N_S_behaviors_S_sysreset_P_display_name_STRING_TOKEN Reset
#define DT_N_S_behaviors_S_sysreset_P_display_name_STRING_UPPER_TOKEN RESET
#define DT_N_S_behaviors_S_sysreset_P_display_name_IDX_0 "Reset"
#define DT_N_S_behaviors_S_sysreset_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sysreset_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_sysreset, display_name, 0)
#define DT_N_S_behaviors_S_sysreset_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_sysreset, display_name, 0)
#define DT_N_S_behaviors_S_sysreset_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_sysreset, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sysreset_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_sysreset, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sysreset_P_display_name_LEN 1
#define DT_N_S_behaviors_S_sysreset_P_display_name_EXISTS 1

/*
 * Devicetree node: /behaviors/th_kp_kp_hp
 *
 * Node identifier: DT_N_S_behaviors_S_th_kp_kp_hp
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_PATH "/behaviors/th_kp_kp_hp"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_FULL_NAME "th_kp_kp_hp"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_ORD 200
#define DT_N_S_behaviors_S_th_kp_kp_hp_ORD_STR_SORTABLE 00200

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */ \
	213, /* /keymap/layer_direcaacc */ \
	215, /* /keymap/layer_func */ \
	216, /* /keymap/layer_homerow */ \
	217, /* /keymap/layer_navoverleft */ \
	219, /* /keymap/layer_navoverr */ \
	220, /* /keymap/layer_numbers */ \
	221, /* /keymap/lower_layer */ \
	222, /* /keymap/raise_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_EXISTS 1
#define DT_N_INST_4_zmk_behavior_hold_tap DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_NODELABEL_th_kp_kp_hp        DT_N_S_behaviors_S_th_kp_kp_hp

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_REG_NUM 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_RANGES_NUM 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_IRQ_NUM 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_th_kp_kp_hp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_th_kp_kp_hp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_IDX_0 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 0) \
	fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 1)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 1)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_th_kp_kp_hp, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_LEN 2
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_tapping_term_ms 220
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_quick_tap_ms 190
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_global_quick_tap 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor "hold-preferred"
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_STRING_UNQUOTED hold-preferred
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_STRING_TOKEN hold_preferred
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_STRING_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_IDX_0 "hold-preferred"
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_ENUM_IDX 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_ENUM_VAL_hold_preferred_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_ENUM_TOKEN hold_preferred
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_ENUM_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_th_kp_kp_hp, flavor, 0)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_th_kp_kp_hp, flavor, 0)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_th_kp_kp_hp, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_th_kp_kp_hp, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_LEN 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_retro_tap 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_on_release 1
#define DT_N_S_behaviors_S_th_kp_kp_hp_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /behaviors/transparent
 *
 * Node identifier: DT_N_S_behaviors_S_transparent
 *
 * Binding (compatible = zmk,behavior-transparent):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-transparent.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_transparent_PATH "/behaviors/transparent"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_transparent_FULL_NAME "transparent"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_transparent_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_transparent_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_transparent_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_transparent_ORD 201
#define DT_N_S_behaviors_S_transparent_ORD_STR_SORTABLE 00201

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_transparent_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_transparent_SUPPORTS_ORDS \
	202, /* /keymap/adjust_layer */ \
	206, /* /keymap/base_layer */ \
	213, /* /keymap/layer_direcaacc */ \
	215, /* /keymap/layer_func */ \
	216, /* /keymap/layer_homerow */ \
	217, /* /keymap/layer_navoverleft */ \
	219, /* /keymap/layer_navoverr */ \
	220, /* /keymap/layer_numbers */ \
	221, /* /keymap/lower_layer */ \
	222, /* /keymap/raise_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_transparent_EXISTS 1
#define DT_N_INST_0_zmk_behavior_transparent DT_N_S_behaviors_S_transparent
#define DT_N_NODELABEL_trans                 DT_N_S_behaviors_S_transparent

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_transparent_REG_NUM 0
#define DT_N_S_behaviors_S_transparent_RANGES_NUM 0
#define DT_N_S_behaviors_S_transparent_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_transparent_IRQ_NUM 0
#define DT_N_S_behaviors_S_transparent_COMPAT_MATCHES_zmk_behavior_transparent 1
#define DT_N_S_behaviors_S_transparent_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_transparent_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_transparent_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_transparent_COMPAT_MODEL_IDX_0 "behavior-transparent"
#define DT_N_S_behaviors_S_transparent_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_transparent_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_transparent_P_display_name "Transparent"
#define DT_N_S_behaviors_S_transparent_P_display_name_STRING_UNQUOTED Transparent
#define DT_N_S_behaviors_S_transparent_P_display_name_STRING_TOKEN Transparent
#define DT_N_S_behaviors_S_transparent_P_display_name_STRING_UPPER_TOKEN TRANSPARENT
#define DT_N_S_behaviors_S_transparent_P_display_name_IDX_0 "Transparent"
#define DT_N_S_behaviors_S_transparent_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_transparent_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_transparent, display_name, 0)
#define DT_N_S_behaviors_S_transparent_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_transparent, display_name, 0)
#define DT_N_S_behaviors_S_transparent_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_transparent, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_transparent_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_transparent, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_transparent_P_display_name_LEN 1
#define DT_N_S_behaviors_S_transparent_P_display_name_EXISTS 1

/*
 * Devicetree node: /keymap/adjust_layer
 *
 * Node identifier: DT_N_S_keymap_S_adjust_layer
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_adjust_layer_PATH "/keymap/adjust_layer"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_adjust_layer_FULL_NAME "adjust_layer"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_adjust_layer_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_adjust_layer_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_adjust_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_adjust_layer_ORD 202
#define DT_N_S_keymap_S_adjust_layer_ORD_STR_SORTABLE 00202

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_adjust_layer_REQUIRES_ORDS \
	176, /* /keymap */ \
	177, /* /behaviors/bootload */ \
	178, /* /behaviors/outputs */ \
	185, /* /behaviors/bt_0 */ \
	188, /* /behaviors/bt_1 */ \
	191, /* /behaviors/bt_2 */ \
	194, /* /behaviors/bt_3 */ \
	197, /* /behaviors/bt_4 */ \
	198, /* /behaviors/space */ \
	199, /* /behaviors/sysreset */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_adjust_layer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_adjust_layer_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_adjust_layer_REG_NUM 0
#define DT_N_S_keymap_S_adjust_layer_RANGES_NUM 0
#define DT_N_S_keymap_S_adjust_layer_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_adjust_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_adjust_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_adjust_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_bt_0
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_bt_1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_bt_2
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_bt_3
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_bt_4
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_outputs
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_10_VAL_param1 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_bootload
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_sysreset
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_sysreset
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_bootload
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_adjust_layer_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_adjust_layer, bindings, 0) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 1) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 2) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 3) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 4) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 5) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 6) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 7) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 8) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 9) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 10) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 11) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 12) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 13) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 14) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 15) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 16) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 17) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 18) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 19) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 20) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 21) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 22) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 23) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 24) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 25) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 26) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 27) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 28) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 29) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 30) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 31) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 32) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 33) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 34) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 35) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 36) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 37)
#define DT_N_S_keymap_S_adjust_layer_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_adjust_layer, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 37)
#define DT_N_S_keymap_S_adjust_layer_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_adjust_layer, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_adjust_layer_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_adjust_layer, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_adjust_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_adjust_layer_P_bindings_LEN 38
#define DT_N_S_keymap_S_adjust_layer_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_label "ADJ"
#define DT_N_S_keymap_S_adjust_layer_P_label_STRING_UNQUOTED ADJ
#define DT_N_S_keymap_S_adjust_layer_P_label_STRING_TOKEN ADJ
#define DT_N_S_keymap_S_adjust_layer_P_label_STRING_UPPER_TOKEN ADJ
#define DT_N_S_keymap_S_adjust_layer_P_label_IDX_0 "ADJ"
#define DT_N_S_keymap_S_adjust_layer_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_adjust_layer_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_adjust_layer, label, 0)
#define DT_N_S_keymap_S_adjust_layer_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_adjust_layer, label, 0)
#define DT_N_S_keymap_S_adjust_layer_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_adjust_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_adjust_layer_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_adjust_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_adjust_layer_P_label_LEN 1
#define DT_N_S_keymap_S_adjust_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/lm_homerow
 *
 * Node identifier: DT_N_S_behaviors_S_lm_homerow
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lm_homerow_PATH "/behaviors/lm_homerow"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lm_homerow_FULL_NAME "lm_homerow"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lm_homerow_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lm_homerow_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lm_homerow_ORD 203
#define DT_N_S_behaviors_S_lm_homerow_ORD_STR_SORTABLE 00203

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lm_homerow_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	157, /* /macros/mhr */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lm_homerow_SUPPORTS_ORDS \
	206, /* /keymap/base_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lm_homerow_EXISTS 1
#define DT_N_INST_8_zmk_behavior_hold_tap DT_N_S_behaviors_S_lm_homerow
#define DT_N_NODELABEL_lm_homerow         DT_N_S_behaviors_S_lm_homerow

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lm_homerow_REG_NUM 0
#define DT_N_S_behaviors_S_lm_homerow_RANGES_NUM 0
#define DT_N_S_behaviors_S_lm_homerow_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lm_homerow_IRQ_NUM 0
#define DT_N_S_behaviors_S_lm_homerow_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_lm_homerow_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lm_homerow_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_lm_homerow_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lm_homerow_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_IDX_0 DT_N_S_macros_S_mhr
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_IDX_0_PH DT_N_S_macros_S_mhr
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lm_homerow, bindings, 0) \
	fn(DT_N_S_behaviors_S_lm_homerow, bindings, 1)
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lm_homerow, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lm_homerow, bindings, 1)
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lm_homerow, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lm_homerow, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lm_homerow, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lm_homerow, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lm_homerow_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_tapping_term_ms 220
#define DT_N_S_behaviors_S_lm_homerow_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_quick_tap_ms -1
#define DT_N_S_behaviors_S_lm_homerow_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_global_quick_tap 0
#define DT_N_S_behaviors_S_lm_homerow_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_lm_homerow_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_flavor "hold-preferred"
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_STRING_UNQUOTED hold-preferred
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_STRING_TOKEN hold_preferred
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_STRING_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_IDX_0 "hold-preferred"
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_ENUM_IDX 0
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_ENUM_VAL_hold_preferred_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_ENUM_TOKEN hold_preferred
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_ENUM_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lm_homerow, flavor, 0)
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lm_homerow, flavor, 0)
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lm_homerow, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lm_homerow, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_LEN 1
#define DT_N_S_behaviors_S_lm_homerow_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_lm_homerow_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_lm_homerow_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_retro_tap 0
#define DT_N_S_behaviors_S_lm_homerow_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_lm_homerow_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /behaviors/lm_homerow_short
 *
 * Node identifier: DT_N_S_behaviors_S_lm_homerow_short
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lm_homerow_short_PATH "/behaviors/lm_homerow_short"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lm_homerow_short_FULL_NAME "lm_homerow_short"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lm_homerow_short_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lm_homerow_short_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lm_homerow_short_ORD 204
#define DT_N_S_behaviors_S_lm_homerow_short_ORD_STR_SORTABLE 00204

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lm_homerow_short_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	157, /* /macros/mhr */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lm_homerow_short_SUPPORTS_ORDS \
	206, /* /keymap/base_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lm_homerow_short_EXISTS 1
#define DT_N_INST_9_zmk_behavior_hold_tap DT_N_S_behaviors_S_lm_homerow_short
#define DT_N_NODELABEL_lm_homerow_short   DT_N_S_behaviors_S_lm_homerow_short

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lm_homerow_short_REG_NUM 0
#define DT_N_S_behaviors_S_lm_homerow_short_RANGES_NUM 0
#define DT_N_S_behaviors_S_lm_homerow_short_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lm_homerow_short_IRQ_NUM 0
#define DT_N_S_behaviors_S_lm_homerow_short_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_lm_homerow_short_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lm_homerow_short_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_lm_homerow_short_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lm_homerow_short_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_IDX_0 DT_N_S_macros_S_mhr
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_IDX_0_PH DT_N_S_macros_S_mhr
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 0) \
	fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 1)
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 1)
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lm_homerow_short, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lm_homerow_short_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_tapping_term_ms 150
#define DT_N_S_behaviors_S_lm_homerow_short_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_quick_tap_ms -1
#define DT_N_S_behaviors_S_lm_homerow_short_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_global_quick_tap 0
#define DT_N_S_behaviors_S_lm_homerow_short_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_lm_homerow_short_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor "hold-preferred"
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_STRING_UNQUOTED hold-preferred
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_STRING_TOKEN hold_preferred
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_STRING_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_IDX_0 "hold-preferred"
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_ENUM_IDX 0
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_ENUM_VAL_hold_preferred_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_ENUM_TOKEN hold_preferred
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_ENUM_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lm_homerow_short, flavor, 0)
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lm_homerow_short, flavor, 0)
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lm_homerow_short, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lm_homerow_short, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_LEN 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_retro_tap 0
#define DT_N_S_behaviors_S_lm_homerow_short_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_lm_homerow_short_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /behaviors/thumb_layer_access_spacebarlm
 *
 * Node identifier: DT_N_S_behaviors_S_thumb_layer_access_spacebarlm
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_PATH "/behaviors/thumb_layer_access_spacebarlm"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FULL_NAME "thumb_layer_access_spacebarlm"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_ORD 205
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_ORD_STR_SORTABLE 00205

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_SUPPORTS_ORDS \
	206, /* /keymap/base_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_EXISTS 1
#define DT_N_INST_6_zmk_behavior_hold_tap DT_N_S_behaviors_S_thumb_layer_access_spacebarlm
#define DT_N_NODELABEL_spacelm            DT_N_S_behaviors_S_thumb_layer_access_spacebarlm

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_REG_NUM 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_RANGES_NUM 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_IRQ_NUM 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_IDX_0 DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_IDX_0_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 0) \
	fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 1)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 1)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_LEN 2
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_tapping_term_ms 220
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_quick_tap_ms -1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_global_quick_tap 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_require_prior_idle_ms 80
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor "balanced"
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_STRING_UNQUOTED balanced
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_STRING_TOKEN balanced
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_STRING_UPPER_TOKEN BALANCED
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_IDX_0 "balanced"
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_ENUM_IDX 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_ENUM_VAL_balanced_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_ENUM_TOKEN balanced
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_ENUM_UPPER_TOKEN BALANCED
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, flavor, 0)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, flavor, 0)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_LEN 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_retro_tap 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_thumb_layer_access_spacebarlm_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /keymap/base_layer
 *
 * Node identifier: DT_N_S_keymap_S_base_layer
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_base_layer_PATH "/keymap/base_layer"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_base_layer_FULL_NAME "base_layer"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_base_layer_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_base_layer_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_base_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_base_layer_ORD 206
#define DT_N_S_keymap_S_base_layer_ORD_STR_SORTABLE 00206

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_base_layer_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	176, /* /keymap */ \
	201, /* /behaviors/transparent */ \
	203, /* /behaviors/lm_homerow */ \
	204, /* /behaviors/lm_homerow_short */ \
	205, /* /behaviors/thumb_layer_access_spacebarlm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_base_layer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_base_layer_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_base_layer_REG_NUM 0
#define DT_N_S_keymap_S_base_layer_RANGES_NUM 0
#define DT_N_S_keymap_S_base_layer_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_base_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_base_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_base_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_0_VAL_param1 458772
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_1_VAL_param1 458778
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_2_VAL_param1 458761
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_3_VAL_param1 458771
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_4_VAL_param1 458757
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_5_VAL_param1 458765
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_6_VAL_param1 458767
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_7_VAL_param1 458776
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_8_VAL_param1 458780
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_9_VAL_param1 458804
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_10_VAL_param1 458756
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_11_VAL_param1 458773
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_12_VAL_param1 458774
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_13_VAL_param1 458775
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_14_VAL_param1 458762
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_15_VAL_param1 458768
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_16_VAL_param1 458769
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_17_VAL_param1 458760
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_18_VAL_param1 458764
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_19_VAL_param1 458770
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lm_homerow_short
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_21_VAL_param1 458781
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_22_VAL_param1 458779
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_23_VAL_param1 458758
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_24_VAL_param1 458759
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_25_VAL_param1 458777
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_26_VAL_param1 458766
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_27_VAL_param1 458763
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_28_VAL_param1 458806
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_29_VAL_param1 458807
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_30_VAL_param1 458808
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lm_homerow
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_lm_homerow_short
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_lm_homerow_short
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_lm_homerow_short
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_thumb_layer_access_spacebarlm
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_base_layer_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_base_layer, bindings, 0) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 1) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 2) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 3) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 4) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 5) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 6) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 7) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 8) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 9) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 10) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 11) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 12) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 13) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 14) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 15) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 16) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 17) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 18) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 19) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 20) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 21) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 22) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 23) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 24) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 25) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 26) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 27) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 28) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 29) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 30) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 31) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 32) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 33) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 34) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 35) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 36) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 37)
#define DT_N_S_keymap_S_base_layer_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_base_layer, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 37)
#define DT_N_S_keymap_S_base_layer_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_base_layer, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_base_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_base_layer_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_base_layer, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_base_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_base_layer_P_bindings_LEN 38
#define DT_N_S_keymap_S_base_layer_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_label "BASE"
#define DT_N_S_keymap_S_base_layer_P_label_STRING_UNQUOTED BASE
#define DT_N_S_keymap_S_base_layer_P_label_STRING_TOKEN BASE
#define DT_N_S_keymap_S_base_layer_P_label_STRING_UPPER_TOKEN BASE
#define DT_N_S_keymap_S_base_layer_P_label_IDX_0 "BASE"
#define DT_N_S_keymap_S_base_layer_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_base_layer_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_base_layer, label, 0)
#define DT_N_S_keymap_S_base_layer_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_base_layer, label, 0)
#define DT_N_S_keymap_S_base_layer_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_base_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_base_layer_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_base_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_base_layer_P_label_LEN 1
#define DT_N_S_keymap_S_base_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/sticky_key
 *
 * Node identifier: DT_N_S_behaviors_S_sticky_key
 *
 * Binding (compatible = zmk,behavior-sticky-key):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-sticky-key.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_sticky_key_PATH "/behaviors/sticky_key"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_sticky_key_FULL_NAME "sticky_key"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_sticky_key_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_sticky_key_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_sticky_key_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_sticky_key_ORD 207
#define DT_N_S_behaviors_S_sticky_key_ORD_STR_SORTABLE 00207

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_sticky_key_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_sticky_key_SUPPORTS_ORDS \
	213, /* /keymap/layer_direcaacc */ \
	215, /* /keymap/layer_func */ \
	227, /* /macros/mc_quesd */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_sticky_key_EXISTS 1
#define DT_N_INST_0_zmk_behavior_sticky_key DT_N_S_behaviors_S_sticky_key
#define DT_N_NODELABEL_sk                   DT_N_S_behaviors_S_sticky_key

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_sticky_key_REG_NUM 0
#define DT_N_S_behaviors_S_sticky_key_RANGES_NUM 0
#define DT_N_S_behaviors_S_sticky_key_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_sticky_key_IRQ_NUM 0
#define DT_N_S_behaviors_S_sticky_key_COMPAT_MATCHES_zmk_behavior_sticky_key 1
#define DT_N_S_behaviors_S_sticky_key_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_sticky_key_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_COMPAT_MODEL_IDX_0 "behavior-sticky-key"
#define DT_N_S_behaviors_S_sticky_key_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_sticky_key_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_sticky_key_P_bindings_IDX_0 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_sticky_key_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_sticky_key_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_sticky_key, bindings, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_key_P_bindings_LEN 1
#define DT_N_S_behaviors_S_sticky_key_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_release_after_ms 1000
#define DT_N_S_behaviors_S_sticky_key_P_release_after_ms_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_quick_release 0
#define DT_N_S_behaviors_S_sticky_key_P_quick_release_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_lazy 0
#define DT_N_S_behaviors_S_sticky_key_P_lazy_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_ignore_modifiers 1
#define DT_N_S_behaviors_S_sticky_key_P_ignore_modifiers_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_display_name "Sticky Key"
#define DT_N_S_behaviors_S_sticky_key_P_display_name_STRING_UNQUOTED Sticky Key
#define DT_N_S_behaviors_S_sticky_key_P_display_name_STRING_TOKEN Sticky_Key
#define DT_N_S_behaviors_S_sticky_key_P_display_name_STRING_UPPER_TOKEN STICKY_KEY
#define DT_N_S_behaviors_S_sticky_key_P_display_name_IDX_0 "Sticky Key"
#define DT_N_S_behaviors_S_sticky_key_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_sticky_key_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_sticky_key, display_name, 0)
#define DT_N_S_behaviors_S_sticky_key_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_sticky_key, display_name, 0)
#define DT_N_S_behaviors_S_sticky_key_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_sticky_key, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_key_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_sticky_key, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_sticky_key_P_display_name_LEN 1
#define DT_N_S_behaviors_S_sticky_key_P_display_name_EXISTS 1

/*
 * Devicetree node: /macros/scl_l_to_r
 *
 * Node identifier: DT_N_S_macros_S_scl_l_to_r
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_scl_l_to_r_PATH "/macros/scl_l_to_r"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_scl_l_to_r_FULL_NAME "scl_l_to_r"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_scl_l_to_r_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_scl_l_to_r_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_scl_l_to_r_ORD 208
#define DT_N_S_macros_S_scl_l_to_r_ORD_STR_SORTABLE 00208

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_scl_l_to_r_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_scl_l_to_r_SUPPORTS_ORDS \
	210, /* /behaviors/tdSelectCoppingLR */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_scl_l_to_r_EXISTS 1
#define DT_N_INST_4_zmk_behavior_macro DT_N_S_macros_S_scl_l_to_r
#define DT_N_NODELABEL_scl_l_to_r      DT_N_S_macros_S_scl_l_to_r

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_scl_l_to_r_REG_NUM 0
#define DT_N_S_macros_S_scl_l_to_r_RANGES_NUM 0
#define DT_N_S_macros_S_scl_l_to_r_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_scl_l_to_r_IRQ_NUM 0
#define DT_N_S_macros_S_scl_l_to_r_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_scl_l_to_r_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_scl_l_to_r_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_scl_l_to_r_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_scl_l_to_r_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_scl_l_to_r_P_label "&SCL_L_TO_R"
#define DT_N_S_macros_S_scl_l_to_r_P_label_STRING_UNQUOTED &SCL_L_TO_R
#define DT_N_S_macros_S_scl_l_to_r_P_label_STRING_TOKEN _SCL_L_TO_R
#define DT_N_S_macros_S_scl_l_to_r_P_label_STRING_UPPER_TOKEN _SCL_L_TO_R
#define DT_N_S_macros_S_scl_l_to_r_P_label_IDX_0 "&SCL_L_TO_R"
#define DT_N_S_macros_S_scl_l_to_r_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scl_l_to_r, label, 0)
#define DT_N_S_macros_S_scl_l_to_r_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scl_l_to_r, label, 0)
#define DT_N_S_macros_S_scl_l_to_r_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scl_l_to_r, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scl_l_to_r_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scl_l_to_r, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scl_l_to_r_P_label_LEN 1
#define DT_N_S_macros_S_scl_l_to_r_P_label_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_1_VAL_param1 134676560
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_2_VAL_param1 5
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_4_VAL_param1 168230991
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_5_VAL_param1 5
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_7_VAL_param1 134676486
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scl_l_to_r, bindings, 0) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 1) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 2) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 3) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 4) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 5) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 6) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 7)
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scl_l_to_r, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 7)
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scl_l_to_r, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scl_l_to_r, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scl_l_to_r, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_LEN 8
#define DT_N_S_macros_S_scl_l_to_r_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/scw_l_to_r
 *
 * Node identifier: DT_N_S_macros_S_scw_l_to_r
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_scw_l_to_r_PATH "/macros/scw_l_to_r"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_scw_l_to_r_FULL_NAME "scw_l_to_r"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_scw_l_to_r_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_scw_l_to_r_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_scw_l_to_r_ORD 209
#define DT_N_S_macros_S_scw_l_to_r_ORD_STR_SORTABLE 00209

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_scw_l_to_r_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	32, /* /behaviors/macro_wait_time */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_scw_l_to_r_SUPPORTS_ORDS \
	210, /* /behaviors/tdSelectCoppingLR */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_scw_l_to_r_EXISTS 1
#define DT_N_INST_7_zmk_behavior_macro DT_N_S_macros_S_scw_l_to_r
#define DT_N_NODELABEL_scw_l_to_r      DT_N_S_macros_S_scw_l_to_r

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_scw_l_to_r_REG_NUM 0
#define DT_N_S_macros_S_scw_l_to_r_RANGES_NUM 0
#define DT_N_S_macros_S_scw_l_to_r_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_scw_l_to_r_IRQ_NUM 0
#define DT_N_S_macros_S_scw_l_to_r_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_scw_l_to_r_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_scw_l_to_r_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_scw_l_to_r_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_scw_l_to_r_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_scw_l_to_r_P_label "&SCW_L_TO_R"
#define DT_N_S_macros_S_scw_l_to_r_P_label_STRING_UNQUOTED &SCW_L_TO_R
#define DT_N_S_macros_S_scw_l_to_r_P_label_STRING_TOKEN _SCW_L_TO_R
#define DT_N_S_macros_S_scw_l_to_r_P_label_STRING_UPPER_TOKEN _SCW_L_TO_R
#define DT_N_S_macros_S_scw_l_to_r_P_label_IDX_0 "&SCW_L_TO_R"
#define DT_N_S_macros_S_scw_l_to_r_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scw_l_to_r, label, 0)
#define DT_N_S_macros_S_scw_l_to_r_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scw_l_to_r, label, 0)
#define DT_N_S_macros_S_scw_l_to_r_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scw_l_to_r, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scw_l_to_r_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scw_l_to_r, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scw_l_to_r_P_label_LEN 1
#define DT_N_S_macros_S_scw_l_to_r_P_label_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_1_VAL_param1 67567696
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_2_VAL_param1 5
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_4_VAL_param1 101122127
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_wait_time
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_5_VAL_param1 5
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_6_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_7_VAL_param1 134676486
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scw_l_to_r, bindings, 0) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 1) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 2) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 3) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 4) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 5) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 6) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 7)
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scw_l_to_r, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 7)
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scw_l_to_r, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scw_l_to_r, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scw_l_to_r, bindings, 7, __VA_ARGS__)
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_LEN 8
#define DT_N_S_macros_S_scw_l_to_r_P_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/tdSelectCoppingLR
 *
 * Node identifier: DT_N_S_behaviors_S_tdselectcoppinglr
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_PATH "/behaviors/tdSelectCoppingLR"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_FULL_NAME "tdSelectCoppingLR"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_ORD 210
#define DT_N_S_behaviors_S_tdselectcoppinglr_ORD_STR_SORTABLE 00210

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_REQUIRES_ORDS \
	10, /* /behaviors */ \
	208, /* /macros/scl_l_to_r */ \
	209, /* /macros/scw_l_to_r */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_SUPPORTS_ORDS \
	213, /* /keymap/layer_direcaacc */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_EXISTS 1
#define DT_N_INST_0_zmk_behavior_hold_tap DT_N_S_behaviors_S_tdselectcoppinglr
#define DT_N_NODELABEL_tdselectcoppinglr  DT_N_S_behaviors_S_tdselectcoppinglr

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_REG_NUM 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_RANGES_NUM 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_IRQ_NUM 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_tdselectcoppinglr_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_tdselectcoppinglr_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_IDX_0 DT_N_S_macros_S_scl_l_to_r
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_IDX_0_PH DT_N_S_macros_S_scl_l_to_r
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_IDX_1 DT_N_S_macros_S_scw_l_to_r
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_IDX_1_PH DT_N_S_macros_S_scw_l_to_r
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 0) \
	fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 1)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 1)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_tdselectcoppinglr, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_LEN 2
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_quick_tap_ms 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_global_quick_tap 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor "tap-preferred"
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_STRING_UNQUOTED tap-preferred
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_STRING_TOKEN tap_preferred
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_STRING_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_IDX_0 "tap-preferred"
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_ENUM_IDX 2
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_ENUM_VAL_tap_preferred_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_ENUM_TOKEN tap_preferred
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_ENUM_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_tdselectcoppinglr, flavor, 0)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_tdselectcoppinglr, flavor, 0)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_tdselectcoppinglr, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_tdselectcoppinglr, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_LEN 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_retro_tap 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_on_release 0
#define DT_N_S_behaviors_S_tdselectcoppinglr_P_hold_trigger_on_release_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_tap_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_tap_time
 *
 * Binding (compatible = zmk,macro-control-tap-time):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-control-tap-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_tap_time_PATH "/behaviors/macro_tap_time"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_tap_time_FULL_NAME "macro_tap_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_tap_time_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_tap_time_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_tap_time_ORD 211
#define DT_N_S_behaviors_S_macro_tap_time_ORD_STR_SORTABLE 00211

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_tap_time_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_tap_time_SUPPORTS_ORDS \
	212, /* /macros/mc_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_tap_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_tap_time DT_N_S_behaviors_S_macro_tap_time
#define DT_N_NODELABEL_macro_tap_time          DT_N_S_behaviors_S_macro_tap_time

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_tap_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_tap_time_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_tap_time_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_tap_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_MATCHES_zmk_macro_control_tap_time 1
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_tap_time_COMPAT_MODEL_IDX_0 "macro-control-tap-time"
#define DT_N_S_behaviors_S_macro_tap_time_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_tap_time_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /macros/mc_sleep
 *
 * Node identifier: DT_N_S_macros_S_mc_sleep
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_mc_sleep_PATH "/macros/mc_sleep"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_mc_sleep_FULL_NAME "mc_sleep"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_mc_sleep_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_mc_sleep_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_mc_sleep_ORD 212
#define DT_N_S_macros_S_mc_sleep_ORD_STR_SORTABLE 00212

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_mc_sleep_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	211, /* /behaviors/macro_tap_time */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_mc_sleep_SUPPORTS_ORDS \
	213, /* /keymap/layer_direcaacc */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_mc_sleep_EXISTS 1
#define DT_N_INST_2_zmk_behavior_macro DT_N_S_macros_S_mc_sleep
#define DT_N_NODELABEL_mc_sleep        DT_N_S_macros_S_mc_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_mc_sleep_REG_NUM 0
#define DT_N_S_macros_S_mc_sleep_RANGES_NUM 0
#define DT_N_S_macros_S_mc_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_mc_sleep_IRQ_NUM 0
#define DT_N_S_macros_S_mc_sleep_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_mc_sleep_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_mc_sleep_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_mc_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_mc_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap_time
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_0_VAL_param1 1000
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_1_VAL_param1 151453716
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_tap_time
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_2_VAL_param1 20
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_3_VAL_param1 458793
#define DT_N_S_macros_S_mc_sleep_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_sleep_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mc_sleep, bindings, 0) \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 1) \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 2) \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 3)
#define DT_N_S_macros_S_mc_sleep_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mc_sleep, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 3)
#define DT_N_S_macros_S_mc_sleep_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_sleep, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 3, __VA_ARGS__)
#define DT_N_S_macros_S_mc_sleep_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_sleep, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_sleep, bindings, 3, __VA_ARGS__)
#define DT_N_S_macros_S_mc_sleep_P_bindings_LEN 4
#define DT_N_S_macros_S_mc_sleep_P_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/layer_direcaacc
 *
 * Node identifier: DT_N_S_keymap_S_layer_direcaacc
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_layer_direcaacc_PATH "/keymap/layer_direcaacc"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_layer_direcaacc_FULL_NAME "layer_direcaacc"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_layer_direcaacc_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_layer_direcaacc_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_layer_direcaacc_ORD 213
#define DT_N_S_keymap_S_layer_direcaacc_ORD_STR_SORTABLE 00213

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_layer_direcaacc_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	164, /* /behaviors/td_find_s_ht */ \
	167, /* /behaviors/td_find_g_ht */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	185, /* /behaviors/bt_0 */ \
	188, /* /behaviors/bt_1 */ \
	191, /* /behaviors/bt_2 */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	207, /* /behaviors/sticky_key */ \
	210, /* /behaviors/tdSelectCoppingLR */ \
	212, /* /macros/mc_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_layer_direcaacc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_layer_direcaacc_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_layer_direcaacc_REG_NUM 0
#define DT_N_S_keymap_S_layer_direcaacc_RANGES_NUM 0
#define DT_N_S_keymap_S_layer_direcaacc_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_layer_direcaacc_IRQ_NUM 0
#define DT_N_S_keymap_S_layer_direcaacc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_layer_direcaacc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_0_PH DT_N_S_behaviors_S_td_find_s_ht
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_0_VAL_param1 458756
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_0_VAL_param2 134676489
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_1_PH DT_N_S_behaviors_S_td_find_g_ht
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_1_VAL_param1 458756
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_1_VAL_param2 168230921
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_2_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_2_VAL_param1 101122059
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_2_VAL_param2 101122117
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_2_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_3_VAL_param1 50790445
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_4_VAL_param1 50790445
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_5_VAL_param1 786665
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_6_VAL_param1 786614
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_7_VAL_param1 786637
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_8_VAL_param1 786613
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_9_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_10_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_10_VAL_param1 458977
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_11_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_11_VAL_param1 458976
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_12_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_12_VAL_param1 458978
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_13_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_13_VAL_param1 458979
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_14_PH DT_N_S_behaviors_S_tdselectcoppinglr
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_14_VAL_param1 458756
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_14_VAL_param2 458756
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_14_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_15_VAL_param1 786666
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_16_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_16_VAL_param1 458983
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_17_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_17_VAL_param1 458982
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_18_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_18_VAL_param1 458980
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_19_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_19_VAL_param1 458981
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_20_PH DT_N_S_macros_S_mc_sleep
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_21_PH DT_N_S_behaviors_S_td_find_s_ht
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_21_VAL_param1 458756
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_21_VAL_param2 134676489
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_21_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_22_PH DT_N_S_behaviors_S_td_find_g_ht
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_22_VAL_param1 458756
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_22_VAL_param2 168230921
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_22_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_23_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_23_VAL_param1 101122059
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_23_VAL_param2 101122117
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_23_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_24_VAL_param1 50790445
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_25_VAL_param1 17236013
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_26_VAL_param1 786658
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_27_VAL_param1 786544
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_28_VAL_param1 786543
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_29_PH DT_N_S_behaviors_S_bt_0
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_30_PH DT_N_S_behaviors_S_bt_1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_31_PH DT_N_S_behaviors_S_bt_2
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 0) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 1) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 2) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 3) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 4) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 5) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 6) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 7) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 8) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 9) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 10) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 11) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 12) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 13) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 14) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 15) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 16) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 17) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 18) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 19) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 20) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 21) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 22) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 23) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 24) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 25) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 26) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 27) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 28) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 29) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 30) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 31) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 32) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 33) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 34) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 35) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 36) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 37)
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 37)
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_direcaacc, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_LEN 38
#define DT_N_S_keymap_S_layer_direcaacc_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_label "DIRECTACC"
#define DT_N_S_keymap_S_layer_direcaacc_P_label_STRING_UNQUOTED DIRECTACC
#define DT_N_S_keymap_S_layer_direcaacc_P_label_STRING_TOKEN DIRECTACC
#define DT_N_S_keymap_S_layer_direcaacc_P_label_STRING_UPPER_TOKEN DIRECTACC
#define DT_N_S_keymap_S_layer_direcaacc_P_label_IDX_0 "DIRECTACC"
#define DT_N_S_keymap_S_layer_direcaacc_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_direcaacc_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_direcaacc, label, 0)
#define DT_N_S_keymap_S_layer_direcaacc_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_direcaacc, label, 0)
#define DT_N_S_keymap_S_layer_direcaacc_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_direcaacc, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_direcaacc_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_direcaacc, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_direcaacc_P_label_LEN 1
#define DT_N_S_keymap_S_layer_direcaacc_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/lrrMo
 *
 * Node identifier: DT_N_S_behaviors_S_lrrmo
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_lrrmo_PATH "/behaviors/lrrMo"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_lrrmo_FULL_NAME "lrrMo"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_lrrmo_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_lrrmo_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lrrmo_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_lrrmo_ORD 214
#define DT_N_S_behaviors_S_lrrmo_ORD_STR_SORTABLE 00214

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_lrrmo_REQUIRES_ORDS \
	10, /* /behaviors */ \
	24, /* /behaviors/key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_lrrmo_SUPPORTS_ORDS \
	215, /* /keymap/layer_func */ \
	216, /* /keymap/layer_homerow */ \
	217, /* /keymap/layer_navoverleft */ \
	219, /* /keymap/layer_navoverr */ \
	220, /* /keymap/layer_numbers */ \
	221, /* /keymap/lower_layer */ \
	222, /* /keymap/raise_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_lrrmo_EXISTS 1
#define DT_N_INST_2_zmk_behavior_hold_tap DT_N_S_behaviors_S_lrrmo
#define DT_N_NODELABEL_lrrmo              DT_N_S_behaviors_S_lrrmo

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_lrrmo_REG_NUM 0
#define DT_N_S_behaviors_S_lrrmo_RANGES_NUM 0
#define DT_N_S_behaviors_S_lrrmo_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_lrrmo_IRQ_NUM 0
#define DT_N_S_behaviors_S_lrrmo_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_lrrmo_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_lrrmo_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_COMPAT_MODEL_IDX_0 "behavior-hold-tap"
#define DT_N_S_behaviors_S_lrrmo_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_lrrmo_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_lrrmo_P_bindings_IDX_0 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrrmo_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrrmo_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_bindings_IDX_1 DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrrmo_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_behaviors_S_lrrmo_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lrrmo, bindings, 0) \
	fn(DT_N_S_behaviors_S_lrrmo, bindings, 1)
#define DT_N_S_behaviors_S_lrrmo_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lrrmo, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lrrmo, bindings, 1)
#define DT_N_S_behaviors_S_lrrmo_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lrrmo, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_lrrmo, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrrmo_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lrrmo, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_lrrmo, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrrmo_P_bindings_LEN 2
#define DT_N_S_behaviors_S_lrrmo_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_tapping_term_ms 220
#define DT_N_S_behaviors_S_lrrmo_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_quick_tap_ms 175
#define DT_N_S_behaviors_S_lrrmo_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_global_quick_tap 0
#define DT_N_S_behaviors_S_lrrmo_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_require_prior_idle_ms -1
#define DT_N_S_behaviors_S_lrrmo_P_require_prior_idle_ms_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_flavor "hold-preferred"
#define DT_N_S_behaviors_S_lrrmo_P_flavor_STRING_UNQUOTED hold-preferred
#define DT_N_S_behaviors_S_lrrmo_P_flavor_STRING_TOKEN hold_preferred
#define DT_N_S_behaviors_S_lrrmo_P_flavor_STRING_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_lrrmo_P_flavor_IDX_0 "hold-preferred"
#define DT_N_S_behaviors_S_lrrmo_P_flavor_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_flavor_ENUM_IDX 0
#define DT_N_S_behaviors_S_lrrmo_P_flavor_ENUM_VAL_hold_preferred_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_flavor_ENUM_TOKEN hold_preferred
#define DT_N_S_behaviors_S_lrrmo_P_flavor_ENUM_UPPER_TOKEN HOLD_PREFERRED
#define DT_N_S_behaviors_S_lrrmo_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lrrmo, flavor, 0)
#define DT_N_S_behaviors_S_lrrmo_P_flavor_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lrrmo, flavor, 0)
#define DT_N_S_behaviors_S_lrrmo_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lrrmo, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrrmo_P_flavor_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lrrmo, flavor, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrrmo_P_flavor_LEN 1
#define DT_N_S_behaviors_S_lrrmo_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_hold_while_undecided 0
#define DT_N_S_behaviors_S_lrrmo_P_hold_while_undecided_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_hold_while_undecided_linger 0
#define DT_N_S_behaviors_S_lrrmo_P_hold_while_undecided_linger_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_retro_tap 0
#define DT_N_S_behaviors_S_lrrmo_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP(fn, sep) 
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_on_release 1
#define DT_N_S_behaviors_S_lrrmo_P_hold_trigger_on_release_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_label "LRRMO"
#define DT_N_S_behaviors_S_lrrmo_P_label_STRING_UNQUOTED LRRMO
#define DT_N_S_behaviors_S_lrrmo_P_label_STRING_TOKEN LRRMO
#define DT_N_S_behaviors_S_lrrmo_P_label_STRING_UPPER_TOKEN LRRMO
#define DT_N_S_behaviors_S_lrrmo_P_label_IDX_0 "LRRMO"
#define DT_N_S_behaviors_S_lrrmo_P_label_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_lrrmo_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_lrrmo, label, 0)
#define DT_N_S_behaviors_S_lrrmo_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_lrrmo, label, 0)
#define DT_N_S_behaviors_S_lrrmo_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_lrrmo, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrrmo_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_lrrmo, label, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_lrrmo_P_label_LEN 1
#define DT_N_S_behaviors_S_lrrmo_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/layer_func
 *
 * Node identifier: DT_N_S_keymap_S_layer_func
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_layer_func_PATH "/keymap/layer_func"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_layer_func_FULL_NAME "layer_func"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_layer_func_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_layer_func_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_func_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_layer_func_ORD 215
#define DT_N_S_keymap_S_layer_func_ORD_STR_SORTABLE 00215

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_layer_func_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	26, /* /behaviors/none */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	207, /* /behaviors/sticky_key */ \
	214, /* /behaviors/lrrMo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_layer_func_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_layer_func_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_layer_func_REG_NUM 0
#define DT_N_S_keymap_S_layer_func_RANGES_NUM 0
#define DT_N_S_keymap_S_layer_func_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_layer_func_IRQ_NUM 0
#define DT_N_S_keymap_S_layer_func_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_layer_func_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_0_VAL_param1 458810
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_1_VAL_param1 458811
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_2_VAL_param1 458812
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_3_VAL_param1 458813
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_4_VAL_param1 458814
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_5_VAL_param1 458815
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_6_VAL_param1 458816
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_7_VAL_param1 458817
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_8_VAL_param1 458818
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_9_VAL_param1 458819
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_10_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_10_VAL_param1 458977
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_11_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_11_VAL_param1 458976
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_12_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_12_VAL_param1 458978
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_13_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_13_VAL_param1 458979
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_14_VAL_param1 458820
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_15_VAL_param1 458821
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_16_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_16_VAL_param1 458983
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_17_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_17_VAL_param1 458982
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_18_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_18_VAL_param1 458983
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_19_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_19_VAL_param1 458981
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_21_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_22_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_23_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_24_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_25_VAL_param1 458820
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_26_VAL_param1 458821
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_27_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_28_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_29_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_30_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_func_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_func, bindings, 0) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 1) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 2) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 3) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 4) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 5) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 6) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 7) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 8) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 9) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 10) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 11) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 12) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 13) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 14) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 15) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 16) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 17) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 18) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 19) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 20) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 21) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 22) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 23) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 24) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 25) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 26) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 27) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 28) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 29) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 30) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 31) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 32) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 33) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 34) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 35) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 36) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 37)
#define DT_N_S_keymap_S_layer_func_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_func, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 37)
#define DT_N_S_keymap_S_layer_func_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_func, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_func, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_func_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_func, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_func, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_func_P_bindings_LEN 38
#define DT_N_S_keymap_S_layer_func_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_label "FUNC"
#define DT_N_S_keymap_S_layer_func_P_label_STRING_UNQUOTED FUNC
#define DT_N_S_keymap_S_layer_func_P_label_STRING_TOKEN FUNC
#define DT_N_S_keymap_S_layer_func_P_label_STRING_UPPER_TOKEN FUNC
#define DT_N_S_keymap_S_layer_func_P_label_IDX_0 "FUNC"
#define DT_N_S_keymap_S_layer_func_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_func_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_func, label, 0)
#define DT_N_S_keymap_S_layer_func_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_func, label, 0)
#define DT_N_S_keymap_S_layer_func_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_func, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_func_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_func, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_func_P_label_LEN 1
#define DT_N_S_keymap_S_layer_func_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/layer_homerow
 *
 * Node identifier: DT_N_S_keymap_S_layer_homerow
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_layer_homerow_PATH "/keymap/layer_homerow"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_layer_homerow_FULL_NAME "layer_homerow"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_layer_homerow_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_layer_homerow_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_homerow_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_layer_homerow_ORD 216
#define DT_N_S_keymap_S_layer_homerow_ORD_STR_SORTABLE 00216

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_layer_homerow_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	214, /* /behaviors/lrrMo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_layer_homerow_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_layer_homerow_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_layer_homerow_REG_NUM 0
#define DT_N_S_keymap_S_layer_homerow_RANGES_NUM 0
#define DT_N_S_keymap_S_layer_homerow_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_layer_homerow_IRQ_NUM 0
#define DT_N_S_keymap_S_layer_homerow_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_layer_homerow_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_0_VAL_param1 458772
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_1_VAL_param1 458778
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_2_VAL_param1 458761
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_3_VAL_param1 458771
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_4_VAL_param1 458757
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_5_VAL_param1 458765
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_6_VAL_param1 458767
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_7_VAL_param1 458776
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_8_VAL_param1 458780
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_9_VAL_param1 458804
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_10_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_10_VAL_param1 458977
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_10_VAL_param2 458756
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_11_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_11_VAL_param1 458976
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_11_VAL_param2 458773
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_11_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_12_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_12_VAL_param1 458978
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_12_VAL_param2 458774
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_12_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_13_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_13_VAL_param1 458979
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_13_VAL_param2 458775
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_13_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_14_VAL_param1 458762
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_15_VAL_param1 458768
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_16_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_16_VAL_param1 458983
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_16_VAL_param2 458769
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_16_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_17_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_17_VAL_param1 458982
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_17_VAL_param2 458760
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_17_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_18_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_18_VAL_param1 458980
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_18_VAL_param2 458764
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_18_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_19_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_19_VAL_param1 458981
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_19_VAL_param2 458770
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_19_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_21_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_21_VAL_param1 458781
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_22_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_22_VAL_param1 458779
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_23_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_23_VAL_param1 458758
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_24_VAL_param1 458759
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_25_VAL_param1 458777
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_26_VAL_param1 458766
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_27_VAL_param1 458763
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_28_VAL_param1 458806
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_29_VAL_param1 458807
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_30_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_30_VAL_param1 458982
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_30_VAL_param2 458808
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_30_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_homerow_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_homerow, bindings, 0) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 1) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 2) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 3) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 4) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 5) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 6) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 7) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 8) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 9) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 10) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 11) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 12) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 13) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 14) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 15) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 16) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 17) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 18) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 19) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 20) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 21) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 22) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 23) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 24) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 25) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 26) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 27) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 28) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 29) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 30) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 31) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 32) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 33) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 34) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 35) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 36) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 37)
#define DT_N_S_keymap_S_layer_homerow_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_homerow, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 37)
#define DT_N_S_keymap_S_layer_homerow_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_homerow, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_homerow_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_homerow, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_homerow, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_homerow_P_bindings_LEN 38
#define DT_N_S_keymap_S_layer_homerow_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_label "HOMEROW"
#define DT_N_S_keymap_S_layer_homerow_P_label_STRING_UNQUOTED HOMEROW
#define DT_N_S_keymap_S_layer_homerow_P_label_STRING_TOKEN HOMEROW
#define DT_N_S_keymap_S_layer_homerow_P_label_STRING_UPPER_TOKEN HOMEROW
#define DT_N_S_keymap_S_layer_homerow_P_label_IDX_0 "HOMEROW"
#define DT_N_S_keymap_S_layer_homerow_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_homerow_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_homerow, label, 0)
#define DT_N_S_keymap_S_layer_homerow_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_homerow, label, 0)
#define DT_N_S_keymap_S_layer_homerow_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_homerow, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_homerow_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_homerow, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_homerow_P_label_LEN 1
#define DT_N_S_keymap_S_layer_homerow_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/layer_navoverleft
 *
 * Node identifier: DT_N_S_keymap_S_layer_navoverleft
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_layer_navoverleft_PATH "/keymap/layer_navoverleft"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_layer_navoverleft_FULL_NAME "layer_navoverleft"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_layer_navoverleft_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_layer_navoverleft_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_layer_navoverleft_ORD 217
#define DT_N_S_keymap_S_layer_navoverleft_ORD_STR_SORTABLE 00217

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_layer_navoverleft_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	214, /* /behaviors/lrrMo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_layer_navoverleft_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_layer_navoverleft_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_layer_navoverleft_REG_NUM 0
#define DT_N_S_keymap_S_layer_navoverleft_RANGES_NUM 0
#define DT_N_S_keymap_S_layer_navoverleft_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_layer_navoverleft_IRQ_NUM 0
#define DT_N_S_keymap_S_layer_navoverleft_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_layer_navoverleft_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_0_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_1_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_2_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_3_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_4_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_5_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_6_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_7_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_8_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_9_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_10_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_11_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_11_VAL_param1 458826
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_12_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_12_VAL_param1 458834
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_13_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_13_VAL_param1 458829
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_14_VAL_param1 458827
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_15_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_16_VAL_param1 458979
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_17_VAL_param1 458978
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_18_VAL_param1 458976
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_19_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_19_VAL_param1 458977
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_21_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_22_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_22_VAL_param1 458832
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_23_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_23_VAL_param1 458833
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_24_VAL_param1 458831
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_25_VAL_param1 458830
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_26_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_27_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_28_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_29_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_30_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 0) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 1) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 2) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 3) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 4) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 5) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 6) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 7) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 8) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 9) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 10) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 11) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 12) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 13) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 14) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 15) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 16) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 17) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 18) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 19) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 20) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 21) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 22) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 23) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 24) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 25) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 26) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 27) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 28) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 29) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 30) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 31) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 32) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 33) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 34) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 35) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 36) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 37)
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 37)
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverleft, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_LEN 38
#define DT_N_S_keymap_S_layer_navoverleft_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_label "NAVOVERRLEFT"
#define DT_N_S_keymap_S_layer_navoverleft_P_label_STRING_UNQUOTED NAVOVERRLEFT
#define DT_N_S_keymap_S_layer_navoverleft_P_label_STRING_TOKEN NAVOVERRLEFT
#define DT_N_S_keymap_S_layer_navoverleft_P_label_STRING_UPPER_TOKEN NAVOVERRLEFT
#define DT_N_S_keymap_S_layer_navoverleft_P_label_IDX_0 "NAVOVERRLEFT"
#define DT_N_S_keymap_S_layer_navoverleft_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverleft_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_navoverleft, label, 0)
#define DT_N_S_keymap_S_layer_navoverleft_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_navoverleft, label, 0)
#define DT_N_S_keymap_S_layer_navoverleft_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_navoverleft, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverleft_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_navoverleft, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverleft_P_label_LEN 1
#define DT_N_S_keymap_S_layer_navoverleft_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/caps_word
 *
 * Node identifier: DT_N_S_behaviors_S_caps_word
 *
 * Binding (compatible = zmk,behavior-caps-word):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-caps-word.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_caps_word_PATH "/behaviors/caps_word"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_caps_word_FULL_NAME "caps_word"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_caps_word_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_caps_word_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_caps_word_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_caps_word_ORD 218
#define DT_N_S_behaviors_S_caps_word_ORD_STR_SORTABLE 00218

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_caps_word_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_caps_word_SUPPORTS_ORDS \
	219, /* /keymap/layer_navoverr */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_caps_word_EXISTS 1
#define DT_N_INST_0_zmk_behavior_caps_word DT_N_S_behaviors_S_caps_word
#define DT_N_NODELABEL_caps_word           DT_N_S_behaviors_S_caps_word

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_caps_word_REG_NUM 0
#define DT_N_S_behaviors_S_caps_word_RANGES_NUM 0
#define DT_N_S_behaviors_S_caps_word_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_caps_word_IRQ_NUM 0
#define DT_N_S_behaviors_S_caps_word_COMPAT_MATCHES_zmk_behavior_caps_word 1
#define DT_N_S_behaviors_S_caps_word_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_caps_word_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_caps_word_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_caps_word_COMPAT_MODEL_IDX_0 "behavior-caps-word"
#define DT_N_S_behaviors_S_caps_word_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_caps_word_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_caps_word_P_continue_list {34013229 /* 0x207002d */, 458797 /* 0x7002d */}
#define DT_N_S_behaviors_S_caps_word_P_continue_list_IDX_0 34013229
#define DT_N_S_behaviors_S_caps_word_P_continue_list_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_caps_word_P_continue_list_IDX_1 458797
#define DT_N_S_behaviors_S_caps_word_P_continue_list_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_caps_word_P_continue_list_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_caps_word, continue_list, 0) \
	fn(DT_N_S_behaviors_S_caps_word, continue_list, 1)
#define DT_N_S_behaviors_S_caps_word_P_continue_list_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_caps_word, continue_list, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_caps_word, continue_list, 1)
#define DT_N_S_behaviors_S_caps_word_P_continue_list_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_caps_word, continue_list, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_caps_word, continue_list, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_caps_word_P_continue_list_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_caps_word, continue_list, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_behaviors_S_caps_word, continue_list, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_caps_word_P_continue_list_LEN 2
#define DT_N_S_behaviors_S_caps_word_P_continue_list_EXISTS 1
#define DT_N_S_behaviors_S_caps_word_P_display_name "Caps Word"
#define DT_N_S_behaviors_S_caps_word_P_display_name_STRING_UNQUOTED Caps Word
#define DT_N_S_behaviors_S_caps_word_P_display_name_STRING_TOKEN Caps_Word
#define DT_N_S_behaviors_S_caps_word_P_display_name_STRING_UPPER_TOKEN CAPS_WORD
#define DT_N_S_behaviors_S_caps_word_P_display_name_IDX_0 "Caps Word"
#define DT_N_S_behaviors_S_caps_word_P_display_name_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_caps_word_P_display_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_caps_word, display_name, 0)
#define DT_N_S_behaviors_S_caps_word_P_display_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_behaviors_S_caps_word, display_name, 0)
#define DT_N_S_behaviors_S_caps_word_P_display_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_caps_word, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_caps_word_P_display_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_behaviors_S_caps_word, display_name, 0, __VA_ARGS__)
#define DT_N_S_behaviors_S_caps_word_P_display_name_LEN 1
#define DT_N_S_behaviors_S_caps_word_P_display_name_EXISTS 1

/*
 * Devicetree node: /keymap/layer_navoverr
 *
 * Node identifier: DT_N_S_keymap_S_layer_navoverr
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_layer_navoverr_PATH "/keymap/layer_navoverr"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_layer_navoverr_FULL_NAME "layer_navoverr"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_layer_navoverr_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_layer_navoverr_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_layer_navoverr_ORD 219
#define DT_N_S_keymap_S_layer_navoverr_ORD_STR_SORTABLE 00219

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_layer_navoverr_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	26, /* /behaviors/none */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	214, /* /behaviors/lrrMo */ \
	218, /* /behaviors/caps_word */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_layer_navoverr_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_layer_navoverr_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_layer_navoverr_REG_NUM 0
#define DT_N_S_keymap_S_layer_navoverr_RANGES_NUM 0
#define DT_N_S_keymap_S_layer_navoverr_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_layer_navoverr_IRQ_NUM 0
#define DT_N_S_keymap_S_layer_navoverr_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_layer_navoverr_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_0_VAL_param1 458810
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_1_VAL_param1 458811
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_2_VAL_param1 458812
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_3_VAL_param1 458813
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_4_VAL_param1 458814
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_5_VAL_param1 458815
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_6_VAL_param1 458816
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_7_VAL_param1 458817
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_8_VAL_param1 458818
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_9_VAL_param1 458819
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_10_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_10_VAL_param1 458977
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_10_VAL_param2 458756
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_11_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_11_VAL_param1 458976
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_11_VAL_param2 458773
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_11_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_12_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_12_VAL_param1 458978
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_12_VAL_param2 458774
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_12_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_13_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_13_VAL_param1 458979
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_13_VAL_param2 458775
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_13_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_14_VAL_param1 458820
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_15_VAL_param1 458821
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_16_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_16_VAL_param1 458983
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_16_VAL_param2 458769
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_16_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_17_VAL_param1 458834
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_18_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_18_VAL_param1 458980
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_18_VAL_param2 458764
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_18_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_19_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_19_VAL_param1 458981
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_21_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_22_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_23_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_24_PH DT_N_S_behaviors_S_none
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_25_PH DT_N_S_behaviors_S_caps_word
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_26_VAL_param1 458809
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_27_VAL_param1 458832
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_28_VAL_param1 458833
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_29_VAL_param1 458831
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_30_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_30_VAL_param1 458982
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_navoverr, bindings, 0) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 1) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 2) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 3) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 4) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 5) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 6) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 7) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 8) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 9) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 10) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 11) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 12) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 13) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 14) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 15) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 16) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 17) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 18) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 19) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 20) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 21) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 22) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 23) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 24) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 25) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 26) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 27) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 28) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 29) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 30) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 31) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 32) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 33) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 34) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 35) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 36) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 37)
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_navoverr, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 37)
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_navoverr, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_navoverr, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_navoverr, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_LEN 38
#define DT_N_S_keymap_S_layer_navoverr_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_label "NAVOVERR"
#define DT_N_S_keymap_S_layer_navoverr_P_label_STRING_UNQUOTED NAVOVERR
#define DT_N_S_keymap_S_layer_navoverr_P_label_STRING_TOKEN NAVOVERR
#define DT_N_S_keymap_S_layer_navoverr_P_label_STRING_UPPER_TOKEN NAVOVERR
#define DT_N_S_keymap_S_layer_navoverr_P_label_IDX_0 "NAVOVERR"
#define DT_N_S_keymap_S_layer_navoverr_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_navoverr_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_navoverr, label, 0)
#define DT_N_S_keymap_S_layer_navoverr_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_navoverr, label, 0)
#define DT_N_S_keymap_S_layer_navoverr_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_navoverr, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverr_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_navoverr, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_navoverr_P_label_LEN 1
#define DT_N_S_keymap_S_layer_navoverr_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/layer_numbers
 *
 * Node identifier: DT_N_S_keymap_S_layer_numbers
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_layer_numbers_PATH "/keymap/layer_numbers"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_layer_numbers_FULL_NAME "layer_numbers"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_layer_numbers_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_layer_numbers_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_layer_numbers_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_layer_numbers_ORD 220
#define DT_N_S_keymap_S_layer_numbers_ORD_STR_SORTABLE 00220

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_layer_numbers_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	214, /* /behaviors/lrrMo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_layer_numbers_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_layer_numbers_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_layer_numbers_REG_NUM 0
#define DT_N_S_keymap_S_layer_numbers_RANGES_NUM 0
#define DT_N_S_keymap_S_layer_numbers_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_layer_numbers_IRQ_NUM 0
#define DT_N_S_keymap_S_layer_numbers_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_layer_numbers_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_0_VAL_param1 34013214
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_1_VAL_param1 34013215
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_2_VAL_param1 34013216
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_3_VAL_param1 34013217
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_4_VAL_param1 34013218
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_5_VAL_param1 458798
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_6_VAL_param1 458788
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_7_VAL_param1 458789
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_8_VAL_param1 458790
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_9_VAL_param1 34013221
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_10_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_10_VAL_param1 458977
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_11_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_11_VAL_param1 458976
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_12_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_12_VAL_param1 458978
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_13_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_13_VAL_param1 458979
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_14_VAL_param1 458806
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_15_VAL_param1 458807
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_16_VAL_param1 458785
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_17_VAL_param1 458786
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_18_VAL_param1 458787
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_19_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_19_VAL_param1 458791
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_21_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_21_VAL_param1 458801
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_22_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_22_VAL_param1 458799
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_23_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_23_VAL_param1 458800
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_24_VAL_param1 458805
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_25_VAL_param1 458797
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_26_VAL_param1 34013230
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_27_VAL_param1 458782
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_28_VAL_param1 458783
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_29_VAL_param1 458784
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_30_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_30_VAL_param1 458808
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_layer_numbers_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_numbers, bindings, 0) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 1) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 2) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 3) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 4) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 5) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 6) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 7) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 8) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 9) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 10) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 11) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 12) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 13) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 14) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 15) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 16) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 17) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 18) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 19) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 20) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 21) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 22) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 23) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 24) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 25) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 26) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 27) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 28) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 29) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 30) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 31) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 32) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 33) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 34) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 35) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 36) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 37)
#define DT_N_S_keymap_S_layer_numbers_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_numbers, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 37)
#define DT_N_S_keymap_S_layer_numbers_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_numbers, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_numbers_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_numbers, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_layer_numbers, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_numbers_P_bindings_LEN 38
#define DT_N_S_keymap_S_layer_numbers_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_label "NUMBERS"
#define DT_N_S_keymap_S_layer_numbers_P_label_STRING_UNQUOTED NUMBERS
#define DT_N_S_keymap_S_layer_numbers_P_label_STRING_TOKEN NUMBERS
#define DT_N_S_keymap_S_layer_numbers_P_label_STRING_UPPER_TOKEN NUMBERS
#define DT_N_S_keymap_S_layer_numbers_P_label_IDX_0 "NUMBERS"
#define DT_N_S_keymap_S_layer_numbers_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_layer_numbers_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_layer_numbers, label, 0)
#define DT_N_S_keymap_S_layer_numbers_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_layer_numbers, label, 0)
#define DT_N_S_keymap_S_layer_numbers_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_layer_numbers, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_numbers_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_layer_numbers, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_layer_numbers_P_label_LEN 1
#define DT_N_S_keymap_S_layer_numbers_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/lower_layer
 *
 * Node identifier: DT_N_S_keymap_S_lower_layer
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_lower_layer_PATH "/keymap/lower_layer"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_lower_layer_FULL_NAME "lower_layer"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_lower_layer_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_lower_layer_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_lower_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_lower_layer_ORD 221
#define DT_N_S_keymap_S_lower_layer_ORD_STR_SORTABLE 00221

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_lower_layer_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	214, /* /behaviors/lrrMo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_lower_layer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_lower_layer_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_lower_layer_REG_NUM 0
#define DT_N_S_keymap_S_lower_layer_RANGES_NUM 0
#define DT_N_S_keymap_S_lower_layer_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_lower_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_lower_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_lower_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_0_VAL_param1 458782
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_1_VAL_param1 458783
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_2_VAL_param1 458784
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_3_VAL_param1 458785
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_4_VAL_param1 458786
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_5_VAL_param1 458787
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_6_VAL_param1 458788
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_7_VAL_param1 458789
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_8_VAL_param1 458790
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_9_VAL_param1 458791
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_10_VAL_param1 458977
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_11_VAL_param1 458976
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_VAL_param1 458978
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_VAL_param1 458979
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_VAL_param1 34013229
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_VAL_param1 34013230
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_VAL_param1 458983
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_VAL_param1 458834
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_18_VAL_param1 458980
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_19_VAL_param1 458981
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_21_VAL_param1 458801
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_22_VAL_param1 458799
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_23_VAL_param1 458800
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_24_VAL_param1 458805
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_25_VAL_param1 458797
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_26_VAL_param1 458798
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_27_VAL_param1 458832
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_28_VAL_param1 458833
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_29_VAL_param1 458831
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_30_VAL_param1 458982
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_30_VAL_param2 458808
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_30_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_lower_layer_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_lower_layer, bindings, 0) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 1) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 2) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 3) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 4) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 5) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 6) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 7) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 8) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 9) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 10) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 11) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 12) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 13) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 14) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 15) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 16) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 17) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 18) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 19) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 20) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 21) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 22) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 23) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 24) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 25) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 26) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 27) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 28) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 29) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 30) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 31) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 32) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 33) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 34) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 35) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 36) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 37)
#define DT_N_S_keymap_S_lower_layer_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_lower_layer, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 37)
#define DT_N_S_keymap_S_lower_layer_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_lower_layer, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_lower_layer_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_lower_layer, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_lower_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_lower_layer_P_bindings_LEN 38
#define DT_N_S_keymap_S_lower_layer_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_label "LOWER"
#define DT_N_S_keymap_S_lower_layer_P_label_STRING_UNQUOTED LOWER
#define DT_N_S_keymap_S_lower_layer_P_label_STRING_TOKEN LOWER
#define DT_N_S_keymap_S_lower_layer_P_label_STRING_UPPER_TOKEN LOWER
#define DT_N_S_keymap_S_lower_layer_P_label_IDX_0 "LOWER"
#define DT_N_S_keymap_S_lower_layer_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_lower_layer_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_lower_layer, label, 0)
#define DT_N_S_keymap_S_lower_layer_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_lower_layer, label, 0)
#define DT_N_S_keymap_S_lower_layer_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_lower_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_lower_layer_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_lower_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_lower_layer_P_label_LEN 1
#define DT_N_S_keymap_S_lower_layer_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/raise_layer
 *
 * Node identifier: DT_N_S_keymap_S_raise_layer
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_raise_layer_PATH "/keymap/raise_layer"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_raise_layer_FULL_NAME "raise_layer"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_raise_layer_PARENT DT_N_S_keymap

/* Node's index in its parent's list of children: */
#define DT_N_S_keymap_S_raise_layer_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_keymap_S_raise_layer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_raise_layer_ORD 222
#define DT_N_S_keymap_S_raise_layer_ORD_STR_SORTABLE 00222

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_raise_layer_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	169, /* /behaviors/lrlMo */ \
	176, /* /keymap */ \
	198, /* /behaviors/space */ \
	200, /* /behaviors/th_kp_kp_hp */ \
	201, /* /behaviors/transparent */ \
	214, /* /behaviors/lrrMo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_raise_layer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_raise_layer_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_raise_layer_REG_NUM 0
#define DT_N_S_keymap_S_raise_layer_RANGES_NUM 0
#define DT_N_S_keymap_S_raise_layer_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_raise_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_raise_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_raise_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_0_VAL_param1 34013214
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_1_VAL_param1 34013215
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_2_VAL_param1 34013216
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_3_VAL_param1 34013217
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_4_VAL_param1 34013218
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_5_VAL_param1 34013219
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_6_VAL_param1 34013220
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_7_VAL_param1 34013221
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_8_VAL_param1 34013222
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_9_VAL_param1 34013223
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_VAL_param1 458977
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_VAL_param2 34013233
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_10_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_VAL_param1 458976
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_VAL_param2 34013231
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_11_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_VAL_param1 458978
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_VAL_param2 34013232
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_12_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_13_VAL_param1 458976
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_13_VAL_param2 34013237
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_13_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_14_VAL_param1 34013229
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_15_VAL_param1 34013230
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_16_VAL_param1 458983
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_16_VAL_param2 34013235
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_16_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_17_VAL_param1 458982
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_17_VAL_param2 34013238
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_17_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_VAL_param1 458980
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_VAL_param2 34013239
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_18_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_VAL_param1 458981
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_VAL_param2 34013240
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_19_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_lrlmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_VAL_param1 458978
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_VAL_param2 458978
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_20_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_21_VAL_param1 458801
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_22_VAL_param1 458799
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_23_VAL_param1 458800
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_24_VAL_param1 458805
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_25_VAL_param1 458797
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_26_VAL_param1 458798
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_27_VAL_param1 458803
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_28_VAL_param1 458806
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_29_VAL_param1 458807
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_30_VAL_param1 458808
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_lrrmo
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_31_VAL_param1 458979
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_31_VAL_param2 458979
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_33_VAL_param1 458977
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_33_VAL_param2 458794
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_VAL_param2 458795
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_th_kp_kp_hp
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_VAL_param1 458978
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_VAL_param2 458792
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_35_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_space
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_VAL_param1 4
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_VAL_param2 458796
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_36_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_transparent
#define DT_N_S_keymap_S_raise_layer_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_raise_layer, bindings, 0) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 1) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 2) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 3) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 4) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 5) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 6) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 7) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 8) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 9) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 10) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 11) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 12) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 13) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 14) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 15) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 16) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 17) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 18) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 19) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 20) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 21) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 22) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 23) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 24) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 25) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 26) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 27) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 28) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 29) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 30) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 31) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 32) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 33) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 34) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 35) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 36) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 37)
#define DT_N_S_keymap_S_raise_layer_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_raise_layer, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 35) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 36) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 37)
#define DT_N_S_keymap_S_raise_layer_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_raise_layer, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_raise_layer_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_raise_layer, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 35, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 36, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_keymap_S_raise_layer, bindings, 37, __VA_ARGS__)
#define DT_N_S_keymap_S_raise_layer_P_bindings_LEN 38
#define DT_N_S_keymap_S_raise_layer_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_label "RAISE"
#define DT_N_S_keymap_S_raise_layer_P_label_STRING_UNQUOTED RAISE
#define DT_N_S_keymap_S_raise_layer_P_label_STRING_TOKEN RAISE
#define DT_N_S_keymap_S_raise_layer_P_label_STRING_UPPER_TOKEN RAISE
#define DT_N_S_keymap_S_raise_layer_P_label_IDX_0 "RAISE"
#define DT_N_S_keymap_S_raise_layer_P_label_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_raise_layer_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_raise_layer, label, 0)
#define DT_N_S_keymap_S_raise_layer_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_keymap_S_raise_layer, label, 0)
#define DT_N_S_keymap_S_raise_layer_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_raise_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_raise_layer_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_keymap_S_raise_layer, label, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_raise_layer_P_label_LEN 1
#define DT_N_S_keymap_S_raise_layer_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 223
#define DT_N_S_leds_ORD_STR_SORTABLE 00223

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	224, /* /leds/led_0 */ \
	225, /* /leds/led_1 */ \
	226, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 224
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00224

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	7, /* /soc/gpio@50000000 */ \
	223, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_led0 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 26
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "Red LED"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED Red LED
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN Red_LED
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN RED_LED
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "Red LED"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 225
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00225

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	7, /* /soc/gpio@50000000 */ \
	223, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led1     DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_led1 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 30
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "Blue LED"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED Blue LED
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN Blue_LED
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN BLUE_LED
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "Blue LED"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 226
#define DT_N_S_leds_S_led_2_ORD_STR_SORTABLE 00226

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	7, /* /soc/gpio@50000000 */ \
	223, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led2     DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_led2 DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 6
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "Green LED"
#define DT_N_S_leds_S_led_2_P_label_STRING_UNQUOTED Green LED
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN Green_LED
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN GREEN_LED
#define DT_N_S_leds_S_led_2_P_label_IDX_0 "Green LED"
#define DT_N_S_leds_S_led_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_LEN 1
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /macros/mc_quesd
 *
 * Node identifier: DT_N_S_macros_S_mc_quesd
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_mc_quesd_PATH "/macros/mc_quesd"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_mc_quesd_FULL_NAME "mc_quesd"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_mc_quesd_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_mc_quesd_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_quesd_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_mc_quesd_ORD 227
#define DT_N_S_macros_S_mc_quesd_ORD_STR_SORTABLE 00227

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_mc_quesd_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	154, /* /behaviors/macro_pause_for_release */ \
	155, /* /behaviors/macro_press */ \
	156, /* /behaviors/macro_release */ \
	207, /* /behaviors/sticky_key */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_mc_quesd_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_mc_quesd_EXISTS 1
#define DT_N_INST_3_zmk_behavior_macro DT_N_S_macros_S_mc_quesd
#define DT_N_NODELABEL_mc_quesd        DT_N_S_macros_S_mc_quesd

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_mc_quesd_REG_NUM 0
#define DT_N_S_macros_S_mc_quesd_RANGES_NUM 0
#define DT_N_S_macros_S_mc_quesd_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_mc_quesd_IRQ_NUM 0
#define DT_N_S_macros_S_mc_quesd_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_mc_quesd_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_mc_quesd_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_mc_quesd_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_mc_quesd_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_1_VAL_param1 101122104
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_press
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_3_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_3_VAL_param1 458977
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_4_PH DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_release
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_6_PH DT_N_S_behaviors_S_sticky_key
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_6_VAL_param1 458977
#define DT_N_S_macros_S_mc_quesd_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mc_quesd, bindings, 0) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 1) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 2) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 3) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 4) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 5) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 6)
#define DT_N_S_macros_S_mc_quesd_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mc_quesd, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 6)
#define DT_N_S_macros_S_mc_quesd_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_quesd, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 6, __VA_ARGS__)
#define DT_N_S_macros_S_mc_quesd_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_quesd, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_quesd, bindings, 6, __VA_ARGS__)
#define DT_N_S_macros_S_mc_quesd_P_bindings_LEN 7
#define DT_N_S_macros_S_mc_quesd_P_bindings_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_wait_ms 0
#define DT_N_S_macros_S_mc_quesd_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_mc_quesd_P_tap_ms 0
#define DT_N_S_macros_S_mc_quesd_P_tap_ms_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_param_2to1
 *
 * Node identifier: DT_N_S_behaviors_S_macro_param_2to1
 *
 * Binding (compatible = zmk,macro-param-2to1):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/macros/zmk,macro-param-2to1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_param_2to1_PATH "/behaviors/macro_param_2to1"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_param_2to1_FULL_NAME "macro_param_2to1"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_param_2to1_PARENT DT_N_S_behaviors

/* Node's index in its parent's list of children: */
#define DT_N_S_behaviors_S_macro_param_2to1_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_param_2to1_ORD 228
#define DT_N_S_behaviors_S_macro_param_2to1_ORD_STR_SORTABLE 00228

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_param_2to1_REQUIRES_ORDS \
	10, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_param_2to1_SUPPORTS_ORDS \
	229, /* /macros/mc_tilde */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_param_2to1_EXISTS 1
#define DT_N_INST_0_zmk_macro_param_2to1 DT_N_S_behaviors_S_macro_param_2to1
#define DT_N_NODELABEL_macro_param_2to1  DT_N_S_behaviors_S_macro_param_2to1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_param_2to1_REG_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to1_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to1_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_param_2to1_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_MATCHES_zmk_macro_param_2to1 1
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_macro_param_2to1_COMPAT_MODEL_IDX_0 "macro-param-2to1"
#define DT_N_S_behaviors_S_macro_param_2to1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_param_2to1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /macros/mc_tilde
 *
 * Node identifier: DT_N_S_macros_S_mc_tilde
 *
 * Binding (compatible = zmk,behavior-macro-two-param):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro-two-param.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_mc_tilde_PATH "/macros/mc_tilde"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_mc_tilde_FULL_NAME "mc_tilde"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_mc_tilde_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_mc_tilde_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_mc_tilde_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_mc_tilde_ORD 229
#define DT_N_S_macros_S_mc_tilde_ORD_STR_SORTABLE 00229

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_mc_tilde_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	25, /* /behaviors/momentary_layer */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	63, /* /behaviors/macro_param_1to1 */ \
	228, /* /behaviors/macro_param_2to1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_mc_tilde_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_mc_tilde_EXISTS 1
#define DT_N_INST_0_zmk_behavior_macro_two_param DT_N_S_macros_S_mc_tilde
#define DT_N_NODELABEL_mc_tilde                  DT_N_S_macros_S_mc_tilde

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_mc_tilde_REG_NUM 0
#define DT_N_S_macros_S_mc_tilde_RANGES_NUM 0
#define DT_N_S_macros_S_mc_tilde_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_mc_tilde_IRQ_NUM 0
#define DT_N_S_macros_S_mc_tilde_COMPAT_MATCHES_zmk_behavior_macro_two_param 1
#define DT_N_S_macros_S_mc_tilde_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_mc_tilde_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_COMPAT_MODEL_IDX_0 "behavior-macro-two-param"
#define DT_N_S_macros_S_mc_tilde_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_mc_tilde_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_1_PH DT_N_S_behaviors_S_macro_param_1to1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_2_PH DT_N_S_behaviors_S_momentary_layer
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_2_VAL_param1 0
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_param_2to1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_4_VAL_param1 0
#define DT_N_S_macros_S_mc_tilde_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_mc_tilde, bindings, 0) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 1) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 2) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 3) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 4)
#define DT_N_S_macros_S_mc_tilde_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_mc_tilde, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 4)
#define DT_N_S_macros_S_mc_tilde_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_mc_tilde, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_mc_tilde_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_mc_tilde, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_mc_tilde, bindings, 4, __VA_ARGS__)
#define DT_N_S_macros_S_mc_tilde_P_bindings_LEN 5
#define DT_N_S_macros_S_mc_tilde_P_bindings_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_wait_ms 0
#define DT_N_S_macros_S_mc_tilde_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_mc_tilde_P_tap_ms 0
#define DT_N_S_macros_S_mc_tilde_P_tap_ms_EXISTS 1

/*
 * Devicetree node: /macros/scfw_l_to_r
 *
 * Node identifier: DT_N_S_macros_S_scfw_l_to_r
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_scfw_l_to_r_PATH "/macros/scfw_l_to_r"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_scfw_l_to_r_FULL_NAME "scfw_l_to_r"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_scfw_l_to_r_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_scfw_l_to_r_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_scfw_l_to_r_ORD 230
#define DT_N_S_macros_S_scfw_l_to_r_ORD_STR_SORTABLE 00230

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_scfw_l_to_r_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	154, /* /behaviors/macro_pause_for_release */ \
	155, /* /behaviors/macro_press */ \
	156, /* /behaviors/macro_release */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_scfw_l_to_r_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_scfw_l_to_r_EXISTS 1
#define DT_N_INST_9_zmk_behavior_macro DT_N_S_macros_S_scfw_l_to_r
#define DT_N_NODELABEL_scfw_l_to_r     DT_N_S_macros_S_scfw_l_to_r

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_scfw_l_to_r_REG_NUM 0
#define DT_N_S_macros_S_scfw_l_to_r_RANGES_NUM 0
#define DT_N_S_macros_S_scfw_l_to_r_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_scfw_l_to_r_IRQ_NUM 0
#define DT_N_S_macros_S_scfw_l_to_r_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_scfw_l_to_r_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_scfw_l_to_r_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_scfw_l_to_r_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_scfw_l_to_r_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_scfw_l_to_r_P_label "&SCFW_L_TO_R"
#define DT_N_S_macros_S_scfw_l_to_r_P_label_STRING_UNQUOTED &SCFW_L_TO_R
#define DT_N_S_macros_S_scfw_l_to_r_P_label_STRING_TOKEN _SCFW_L_TO_R
#define DT_N_S_macros_S_scfw_l_to_r_P_label_STRING_UPPER_TOKEN _SCFW_L_TO_R
#define DT_N_S_macros_S_scfw_l_to_r_P_label_IDX_0 "&SCFW_L_TO_R"
#define DT_N_S_macros_S_scfw_l_to_r_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scfw_l_to_r, label, 0)
#define DT_N_S_macros_S_scfw_l_to_r_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scfw_l_to_r, label, 0)
#define DT_N_S_macros_S_scfw_l_to_r_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scfw_l_to_r, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_l_to_r_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scfw_l_to_r, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_l_to_r_P_label_LEN 1
#define DT_N_S_macros_S_scfw_l_to_r_P_label_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_press
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_1_VAL_param1 101122127
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_release
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_4_VAL_param1 101122127
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_6_VAL_param1 134676486
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 0) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 1) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 2) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 3) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 4) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 5) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 6)
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 6)
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 6, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_l_to_r, bindings, 6, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_LEN 7
#define DT_N_S_macros_S_scfw_l_to_r_P_bindings_EXISTS 1

/*
 * Devicetree node: /macros/scfw_r_to_l
 *
 * Node identifier: DT_N_S_macros_S_scfw_r_to_l
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/haroldhernandez/totem/zmk-config-totem/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_scfw_r_to_l_PATH "/macros/scfw_r_to_l"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_scfw_r_to_l_FULL_NAME "scfw_r_to_l"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_scfw_r_to_l_PARENT DT_N_S_macros

/* Node's index in its parent's list of children: */
#define DT_N_S_macros_S_scfw_r_to_l_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_scfw_r_to_l_ORD 231
#define DT_N_S_macros_S_scfw_r_to_l_ORD_STR_SORTABLE 00231

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_scfw_r_to_l_REQUIRES_ORDS \
	24, /* /behaviors/key_press */ \
	30, /* /macros */ \
	31, /* /behaviors/macro_tap */ \
	154, /* /behaviors/macro_pause_for_release */ \
	155, /* /behaviors/macro_press */ \
	156, /* /behaviors/macro_release */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_scfw_r_to_l_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_scfw_r_to_l_EXISTS 1
#define DT_N_INST_8_zmk_behavior_macro DT_N_S_macros_S_scfw_r_to_l
#define DT_N_NODELABEL_scfw_r_to_l     DT_N_S_macros_S_scfw_r_to_l

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_scfw_r_to_l_REG_NUM 0
#define DT_N_S_macros_S_scfw_r_to_l_RANGES_NUM 0
#define DT_N_S_macros_S_scfw_r_to_l_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_scfw_r_to_l_IRQ_NUM 0
#define DT_N_S_macros_S_scfw_r_to_l_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_scfw_r_to_l_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_COMPAT_VENDOR_IDX_0 "ZMK Project"
#define DT_N_S_macros_S_scfw_r_to_l_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_COMPAT_MODEL_IDX_0 "behavior-macro"
#define DT_N_S_macros_S_scfw_r_to_l_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_scfw_r_to_l_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_scfw_r_to_l_P_label "&SCFW_R_TO_L"
#define DT_N_S_macros_S_scfw_r_to_l_P_label_STRING_UNQUOTED &SCFW_R_TO_L
#define DT_N_S_macros_S_scfw_r_to_l_P_label_STRING_TOKEN _SCFW_R_TO_L
#define DT_N_S_macros_S_scfw_r_to_l_P_label_STRING_UPPER_TOKEN _SCFW_R_TO_L
#define DT_N_S_macros_S_scfw_r_to_l_P_label_IDX_0 "&SCFW_R_TO_L"
#define DT_N_S_macros_S_scfw_r_to_l_P_label_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scfw_r_to_l, label, 0)
#define DT_N_S_macros_S_scfw_r_to_l_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scfw_r_to_l, label, 0)
#define DT_N_S_macros_S_scfw_r_to_l_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scfw_r_to_l, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_r_to_l_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scfw_r_to_l, label, 0, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_r_to_l_P_label_LEN 1
#define DT_N_S_macros_S_scfw_r_to_l_P_label_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_0_PH DT_N_S_behaviors_S_macro_press
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_1_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_1_VAL_param1 101122128
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_2_PH DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_3_PH DT_N_S_behaviors_S_macro_release
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_4_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_4_VAL_param1 101122128
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_5_PH DT_N_S_behaviors_S_macro_tap
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_6_PH DT_N_S_behaviors_S_key_press
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_6_VAL_param1 134676486
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 0) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 1) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 2) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 3) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 4) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 5) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 6)
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 6)
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 6, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_macros_S_scfw_r_to_l, bindings, 6, __VA_ARGS__)
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_LEN 7
#define DT_N_S_macros_S_scfw_r_to_l_P_bindings_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = nordic,nrf-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nordic,nrf-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_spi2_default) fn(DT_N_S_pin_controller_S_spi2_sleep) fn(DT_N_S_pin_controller_S_qspi_default) fn(DT_N_S_pin_controller_S_qspi_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_spi2_default) fn(DT_N_S_pin_controller_S_spi2_sleep) fn(DT_N_S_pin_controller_S_qspi_default) fn(DT_N_S_pin_controller_S_qspi_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi2_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 232
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00232

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	233, /* /pin-controller/i2c0_default */ \
	235, /* /pin-controller/i2c0_sleep */ \
	237, /* /pin-controller/qspi_default */ \
	239, /* /pin-controller/qspi_sleep */ \
	242, /* /pin-controller/spi2_default */ \
	244, /* /pin-controller/spi2_sleep */ \
	246, /* /pin-controller/uart0_default */ \
	249, /* /pin-controller/uart0_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl         DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_nordic_nrf_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "nrf-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_compatible {"nordic,nrf-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0 "nordic,nrf-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PINCTRL
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_PATH "/pin-controller/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME "i2c0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_ORD 233
#define DT_N_S_pin_controller_S_i2c0_default_ORD_STR_SORTABLE 00233

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_SUPPORTS_ORDS \
	234, /* /pin-controller/i2c0_default/group1 */ \
	265, /* /soc/i2c@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_pin_controller_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PATH "/pin-controller/i2c0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/i2c0_default) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD 234
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD_STR_SORTABLE 00234

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REQUIRES_ORDS \
	233, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels {786436 /* 0xc0004 */, 720901 /* 0xb0005 */}
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_0 786436
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_1 720901
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PATH "/pin-controller/i2c0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_sleep_FULL_NAME "i2c0_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_sleep_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_sleep_ORD 235
#define DT_N_S_pin_controller_S_i2c0_sleep_ORD_STR_SORTABLE 00235

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_sleep_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_sleep_SUPPORTS_ORDS \
	236, /* /pin-controller/i2c0_sleep/group1 */ \
	265, /* /soc/i2c@40003000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_sleep_EXISTS 1
#define DT_N_NODELABEL_i2c0_sleep DT_N_S_pin_controller_S_i2c0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PATH "/pin-controller/i2c0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/i2c0_sleep) identifier: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_ORD 236
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_ORD_STR_SORTABLE 00236

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_REQUIRES_ORDS \
	235, /* /pin-controller/i2c0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels {786436 /* 0xc0004 */, 720901 /* 0xb0005 */}
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_0 786436
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_1 720901
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/qspi_default
 *
 * Node identifier: DT_N_S_pin_controller_S_qspi_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_qspi_default_PATH "/pin-controller/qspi_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_qspi_default_FULL_NAME "qspi_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_qspi_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_qspi_default_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_qspi_default_S_group1)
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_qspi_default_S_group1)
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_qspi_default_S_group1)
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_qspi_default_S_group1)
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_qspi_default_ORD 237
#define DT_N_S_pin_controller_S_qspi_default_ORD_STR_SORTABLE 00237

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_qspi_default_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_qspi_default_SUPPORTS_ORDS \
	238, /* /pin-controller/qspi_default/group1 */ \
	306, /* /soc/qspi@40029000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_qspi_default_EXISTS 1
#define DT_N_NODELABEL_qspi_default DT_N_S_pin_controller_S_qspi_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_qspi_default_REG_NUM 0
#define DT_N_S_pin_controller_S_qspi_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_qspi_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_qspi_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_qspi_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_qspi_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/qspi_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_qspi_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_PATH "/pin-controller/qspi_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/qspi_default) identifier: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_PARENT DT_N_S_pin_controller_S_qspi_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_ORD 238
#define DT_N_S_pin_controller_S_qspi_default_S_group1_ORD_STR_SORTABLE 00238

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_REQUIRES_ORDS \
	237, /* /pin-controller/qspi_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_qspi_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels {1900565 /* 0x1d0015 */, 2031636 /* 0x1f0014 */, 2097176 /* 0x200018 */, 2162710 /* 0x210016 */, 2228247 /* 0x220017 */, 1966105 /* 0x1e0019 */}
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_0 1900565
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_1 2031636
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_2 2097176
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_3 2162710
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_4 2228247
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_4_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_5 1966105
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_IDX_5_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 2) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 3) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 4) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 5)
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 5)
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 3, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 4, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 5, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_default_S_group1, psels, 5, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_LEN 6
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_qspi_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/qspi_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_qspi_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_qspi_sleep_PATH "/pin-controller/qspi_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_qspi_sleep_FULL_NAME "qspi_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_qspi_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_qspi_sleep_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2)
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2)
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2)
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2)
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_qspi_sleep_ORD 239
#define DT_N_S_pin_controller_S_qspi_sleep_ORD_STR_SORTABLE 00239

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_qspi_sleep_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_qspi_sleep_SUPPORTS_ORDS \
	240, /* /pin-controller/qspi_sleep/group1 */ \
	241, /* /pin-controller/qspi_sleep/group2 */ \
	306, /* /soc/qspi@40029000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_qspi_sleep_EXISTS 1
#define DT_N_NODELABEL_qspi_sleep DT_N_S_pin_controller_S_qspi_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_qspi_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_qspi_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_qspi_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/qspi_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_qspi_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_PATH "/pin-controller/qspi_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/qspi_sleep) identifier: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_PARENT DT_N_S_pin_controller_S_qspi_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_ORD 240
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_ORD_STR_SORTABLE 00240

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_REQUIRES_ORDS \
	239, /* /pin-controller/qspi_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels {1900565 /* 0x1d0015 */, 2031636 /* 0x1f0014 */, 2097176 /* 0x200018 */, 2162710 /* 0x210016 */, 2228247 /* 0x220017 */}
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_0 1900565
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_1 2031636
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_2 2097176
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_3 2162710
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_4 2228247
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_IDX_4_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 2) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 3) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 4)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 4)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 3, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 4, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, psels, 4, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_LEN 5
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/qspi_sleep/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_qspi_sleep_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_PATH "/pin-controller/qspi_sleep/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/qspi_sleep) identifier: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_PARENT DT_N_S_pin_controller_S_qspi_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_ORD 241
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_ORD_STR_SORTABLE 00241

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_REQUIRES_ORDS \
	239, /* /pin-controller/qspi_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels {1966105 /* 0x1e0019 */}
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_IDX_0 1966105
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_LEN 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_nordic_invert 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_low_power_enable 1
#define DT_N_S_pin_controller_S_qspi_sleep_S_group2_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi2_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spi2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi2_default_PATH "/pin-controller/spi2_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi2_default_FULL_NAME "spi2_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi2_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi2_default_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi2_default_S_group1)
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi2_default_S_group1)
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi2_default_S_group1)
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi2_default_S_group1)
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi2_default_ORD 242
#define DT_N_S_pin_controller_S_spi2_default_ORD_STR_SORTABLE 00242

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi2_default_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi2_default_SUPPORTS_ORDS \
	243, /* /pin-controller/spi2_default/group1 */ \
	284, /* /soc/spi@40023000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi2_default_EXISTS 1
#define DT_N_NODELABEL_spi2_default DT_N_S_pin_controller_S_spi2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi2_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spi2_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi2_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi2_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi2_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spi2_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi2_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_PATH "/pin-controller/spi2_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/spi2_default) identifier: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_PARENT DT_N_S_pin_controller_S_spi2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_ORD 243
#define DT_N_S_pin_controller_S_spi2_default_S_group1_ORD_STR_SORTABLE 00243

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_REQUIRES_ORDS \
	242, /* /pin-controller/spi2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi2_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels {262189 /* 0x4002d */, 327727 /* 0x5002f */, 393262 /* 0x6002e */}
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_IDX_0 262189
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_IDX_1 327727
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_IDX_2 393262
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_default_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_LEN 3
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_spi2_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi2_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_spi2_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi2_sleep_PATH "/pin-controller/spi2_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi2_sleep_FULL_NAME "spi2_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi2_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi2_sleep_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi2_sleep_ORD 244
#define DT_N_S_pin_controller_S_spi2_sleep_ORD_STR_SORTABLE 00244

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi2_sleep_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi2_sleep_SUPPORTS_ORDS \
	245, /* /pin-controller/spi2_sleep/group1 */ \
	284, /* /soc/spi@40023000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi2_sleep_EXISTS 1
#define DT_N_NODELABEL_spi2_sleep DT_N_S_pin_controller_S_spi2_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi2_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_spi2_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi2_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi2_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi2_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi2_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spi2_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi2_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_PATH "/pin-controller/spi2_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/spi2_sleep) identifier: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_PARENT DT_N_S_pin_controller_S_spi2_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_ORD 245
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_ORD_STR_SORTABLE 00245

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_REQUIRES_ORDS \
	244, /* /pin-controller/spi2_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels {262189 /* 0x4002d */, 327727 /* 0x5002f */, 393262 /* 0x6002e */}
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_IDX_0 262189
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_IDX_1 327727
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_IDX_2 393262
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_LEN 3
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_spi2_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 246
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00246

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	247, /* /pin-controller/uart0_default/group1 */ \
	248, /* /pin-controller/uart0_default/group2 */ \
	292, /* /soc/uart@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 247
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00247

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	246, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels {43 /* 0x2b */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0 43
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PATH "/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD 248
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00248

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	246, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels {65580 /* 0x1002c */}
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_IDX_0 65580
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_PATH "/pin-controller/uart0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_FULL_NAME "uart0_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_ORD 249
#define DT_N_S_pin_controller_S_uart0_sleep_ORD_STR_SORTABLE 00249

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_REQUIRES_ORDS \
	232, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_SUPPORTS_ORDS \
	250, /* /pin-controller/uart0_sleep/group1 */ \
	292, /* /soc/uart@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_EXISTS 1
#define DT_N_NODELABEL_uart0_sleep DT_N_S_pin_controller_S_uart0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PATH "/pin-controller/uart0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart0_sleep) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_uart0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD 250
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD_STR_SORTABLE 00250

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REQUIRES_ORDS \
	249, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels {43 /* 0x2b */, 65580 /* 0x1002c */}
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0 43
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1 65580
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /soc/acl@4001e000
 *
 * Node identifier: DT_N_S_soc_S_acl_4001e000
 *
 * Binding (compatible = nordic,nrf-acl):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-acl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_acl_4001e000_PATH "/soc/acl@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_acl_4001e000_FULL_NAME "acl@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_acl_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_acl_4001e000_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_acl_4001e000_ORD 251
#define DT_N_S_soc_S_acl_4001e000_ORD_STR_SORTABLE 00251

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_acl_4001e000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_acl_4001e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_acl_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_acl DT_N_S_soc_S_acl_4001e000
#define DT_N_NODELABEL_acl         DT_N_S_soc_S_acl_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_acl_4001e000_REG_NUM 1
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_acl_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_acl_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_acl_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MATCHES_nordic_nrf_acl 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MODEL_IDX_0 "nrf-acl"
#define DT_N_S_soc_S_acl_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_acl_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_acl_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status "okay"
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_acl_4001e000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_acl_4001e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_4001e000, status, 0)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_4001e000, status, 0)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_status_LEN 1
#define DT_N_S_soc_S_acl_4001e000_P_status_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible {"nordic,nrf-acl"}
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0 "nordic,nrf-acl"
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-acl
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_acl
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ACL
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_acl_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_acl_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ccm@4000f000
 *
 * Node identifier: DT_N_S_soc_S_ccm_4000f000
 *
 * Binding (compatible = nordic,nrf-ccm):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ccm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_4000f000_PATH "/soc/ccm@4000f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_4000f000_FULL_NAME "ccm@4000f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ccm_4000f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_4000f000_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_4000f000_ORD 252
#define DT_N_S_soc_S_ccm_4000f000_ORD_STR_SORTABLE 00252

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_4000f000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_4000f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_4000f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ccm DT_N_S_soc_S_ccm_4000f000
#define DT_N_NODELABEL_ccm         DT_N_S_soc_S_ccm_4000f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_4000f000_REG_NUM 1
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_VAL_ADDRESS 1073803264 /* 0x4000f000 */
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ccm_4000f000_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_4000f000_IRQ_NUM 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MATCHES_nordic_nrf_ccm 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MODEL_IDX_0 "nrf-ccm"
#define DT_N_S_soc_S_ccm_4000f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_4000f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_4000f000_P_reg {1073803264 /* 0x4000f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_0 1073803264
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts {15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_length_field_length_8_bits 1
#define DT_N_S_soc_S_ccm_4000f000_P_length_field_length_8_bits_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_headermask_supported 0
#define DT_N_S_soc_S_ccm_4000f000_P_headermask_supported_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status "okay"
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ccm_4000f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ccm_4000f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4000f000, status, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4000f000, status, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_status_LEN 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible {"nordic,nrf-ccm"}
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0 "nordic,nrf-ccm"
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ccm
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ccm
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CCM
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_LEN 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_wakeup_source 0
#define DT_N_S_soc_S_ccm_4000f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ccm_4000f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clock@40000000
 *
 * Node identifier: DT_N_S_soc_S_clock_40000000
 *
 * Binding (compatible = nordic,nrf-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/nordic,nrf-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_40000000_PATH "/soc/clock@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_40000000_FULL_NAME "clock@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_40000000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_40000000_ORD 253
#define DT_N_S_soc_S_clock_40000000_ORD_STR_SORTABLE 00253

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_40000000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_40000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_clock DT_N_S_soc_S_clock_40000000
#define DT_N_NODELABEL_clock         DT_N_S_soc_S_clock_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_40000000_REG_NUM 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MATCHES_nordic_nrf_clock 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_clock_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MODEL_IDX_0 "nrf-clock"
#define DT_N_S_soc_S_clock_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, status, 0)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_40000000, status, 0)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_status_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible {"nordic,nrf-clock"}
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0 "nordic,nrf-clock"
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-clock
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_clock
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CLOCK
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/comparator@40013000
 *
 * Node identifier: DT_N_S_soc_S_comparator_40013000
 *
 * Binding (compatible = nordic,nrf-comp):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-comp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_comparator_40013000_PATH "/soc/comparator@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_comparator_40013000_FULL_NAME "comparator@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_comparator_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_comparator_40013000_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_comparator_40013000_ORD 254
#define DT_N_S_soc_S_comparator_40013000_ORD_STR_SORTABLE 00254

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_comparator_40013000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_comparator_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_comparator_40013000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_comp DT_N_S_soc_S_comparator_40013000
#define DT_N_NODELABEL_comp         DT_N_S_soc_S_comparator_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_comparator_40013000_REG_NUM 1
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_comparator_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_comparator_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_comparator_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MATCHES_nordic_nrf_comp 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MODEL_IDX_0 "nrf-comp"
#define DT_N_S_soc_S_comparator_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_comparator_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_comparator_40013000_P_reg {1073819648 /* 0x40013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts {19 /* 0x13 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status "disabled"
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_comparator_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_comparator_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_comparator_40013000, status, 0)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_comparator_40013000, status, 0)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_comparator_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_comparator_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_status_LEN 1
#define DT_N_S_soc_S_comparator_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible {"nordic,nrf-comp"}
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0 "nordic,nrf-comp"
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-comp
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_comp
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_COMP
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_comparator_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_comparator_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000
 *
 * Binding (compatible = arm,cryptocell-310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/arm,cryptocell-310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_PATH "/soc/crypto@5002a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_5002a000_FULL_NAME "crypto@5002a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_crypto_5002a000_CHILD_IDX 54

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_ORD 255
#define DT_N_S_soc_S_crypto_5002a000_ORD_STR_SORTABLE 00255

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_EXISTS 1
#define DT_N_INST_0_nordic_cryptocell  DT_N_S_soc_S_crypto_5002a000
#define DT_N_INST_0_arm_cryptocell_310 DT_N_S_soc_S_crypto_5002a000
#define DT_N_NODELABEL_cryptocell      DT_N_S_soc_S_crypto_5002a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_5002a000_REG_NUM 2
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_ADDRESS 1342349312 /* 0x5002a000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_ADDRESS 1342353408 /* 0x5002b000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_wrapper_VAL_ADDRESS DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_wrapper_VAL_SIZE DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_core_VAL_ADDRESS DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_crypto_5002a000_REG_NAME_core_VAL_SIZE DT_N_S_soc_S_crypto_5002a000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_crypto_5002a000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_5002a000_IRQ_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_crypto_5002a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MATCHES_nordic_cryptocell 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_0 "cryptocell"
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MATCHES_arm_cryptocell_310 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_1 "cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_5002a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_P_reg {1342349312 /* 0x5002a000 */, 4096 /* 0x1000 */, 1342353408 /* 0x5002b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0 1342349312
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_2 1342353408
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_3 4096
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts {42 /* 0x2a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status "disabled"
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_crypto_5002a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_crypto_5002a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, status, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, status, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_status_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible {"nordic,cryptocell", "arm,cryptocell-310"}
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0 "nordic,cryptocell"
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,cryptocell
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_TOKEN nordic_cryptocell
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_CRYPTOCELL
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1 "arm,cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_STRING_UNQUOTED arm,cryptocell-310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_STRING_TOKEN arm_cryptocell_310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_CRYPTOCELL_310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_LEN 2
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names {"wrapper", "core"}
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0 "wrapper"
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_STRING_UNQUOTED wrapper
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_STRING_TOKEN wrapper
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_STRING_UPPER_TOKEN WRAPPER
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1 "core"
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_STRING_UNQUOTED core
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_STRING_TOKEN core
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_STRING_UPPER_TOKEN CORE
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_crypto_5002a000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_LEN 2
#define DT_N_S_soc_S_crypto_5002a000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_crypto_5002a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ecb@4000e000
 *
 * Node identifier: DT_N_S_soc_S_ecb_4000e000
 *
 * Binding (compatible = nordic,nrf-ecb):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ecb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecb_4000e000_PATH "/soc/ecb@4000e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecb_4000e000_FULL_NAME "ecb@4000e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecb_4000e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ecb_4000e000_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecb_4000e000_ORD 256
#define DT_N_S_soc_S_ecb_4000e000_ORD_STR_SORTABLE 00256

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecb_4000e000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecb_4000e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecb_4000e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ecb DT_N_S_soc_S_ecb_4000e000
#define DT_N_NODELABEL_ecb         DT_N_S_soc_S_ecb_4000e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecb_4000e000_REG_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_ADDRESS 1073799168 /* 0x4000e000 */
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ecb_4000e000_RANGES_NUM 0
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecb_4000e000_IRQ_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MATCHES_nordic_nrf_ecb 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MODEL_IDX_0 "nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecb_4000e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecb_4000e000_P_reg {1073799168 /* 0x4000e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0 1073799168
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts {14 /* 0xe */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, status, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4000e000, status, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_status_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible {"nordic,nrf-ecb"}
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0 "nordic,nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ecb
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ecb
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ECB
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source 0
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ecb_4000e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40014000
 *
 * Node identifier: DT_N_S_soc_S_egu_40014000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40014000_PATH "/soc/egu@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40014000_FULL_NAME "egu@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40014000_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40014000_ORD 257
#define DT_N_S_soc_S_egu_40014000_ORD_STR_SORTABLE 00257

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40014000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40014000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40014000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_egu DT_N_S_soc_S_egu_40014000
#define DT_N_INST_0_nordic_nrf_swi DT_N_S_soc_S_egu_40014000
#define DT_N_NODELABEL_egu0        DT_N_S_soc_S_egu_40014000
#define DT_N_NODELABEL_swi0        DT_N_S_soc_S_egu_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40014000_REG_NUM 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40014000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40014000_P_reg {1073823744 /* 0x40014000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts {20 /* 0x14 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status "okay"
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, status, 0)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40014000, status, 0)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40014000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40014000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40015000
 *
 * Node identifier: DT_N_S_soc_S_egu_40015000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40015000_PATH "/soc/egu@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40015000_FULL_NAME "egu@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40015000_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40015000_ORD 258
#define DT_N_S_soc_S_egu_40015000_ORD_STR_SORTABLE 00258

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40015000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40015000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_egu DT_N_S_soc_S_egu_40015000
#define DT_N_INST_1_nordic_nrf_swi DT_N_S_soc_S_egu_40015000
#define DT_N_NODELABEL_egu1        DT_N_S_soc_S_egu_40015000
#define DT_N_NODELABEL_swi1        DT_N_S_soc_S_egu_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40015000_REG_NUM 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40015000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40015000_P_reg {1073827840 /* 0x40015000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts {21 /* 0x15 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status "okay"
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, status, 0)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40015000, status, 0)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40015000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40015000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40016000
 *
 * Node identifier: DT_N_S_soc_S_egu_40016000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40016000_PATH "/soc/egu@40016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40016000_FULL_NAME "egu@40016000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40016000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40016000_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40016000_ORD 259
#define DT_N_S_soc_S_egu_40016000_ORD_STR_SORTABLE 00259

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40016000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40016000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40016000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_egu DT_N_S_soc_S_egu_40016000
#define DT_N_INST_2_nordic_nrf_swi DT_N_S_soc_S_egu_40016000
#define DT_N_NODELABEL_egu2        DT_N_S_soc_S_egu_40016000
#define DT_N_NODELABEL_swi2        DT_N_S_soc_S_egu_40016000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40016000_REG_NUM 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_ADDRESS 1073831936 /* 0x40016000 */
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40016000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40016000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40016000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40016000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40016000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40016000_P_reg {1073831936 /* 0x40016000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0 1073831936
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts {22 /* 0x16 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status "okay"
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40016000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, status, 0)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40016000, status, 0)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40016000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40016000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40016000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40016000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40016000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40017000
 *
 * Node identifier: DT_N_S_soc_S_egu_40017000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40017000_PATH "/soc/egu@40017000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40017000_FULL_NAME "egu@40017000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40017000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40017000_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40017000_ORD 260
#define DT_N_S_soc_S_egu_40017000_ORD_STR_SORTABLE 00260

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40017000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40017000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40017000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_egu DT_N_S_soc_S_egu_40017000
#define DT_N_INST_3_nordic_nrf_swi DT_N_S_soc_S_egu_40017000
#define DT_N_NODELABEL_egu3        DT_N_S_soc_S_egu_40017000
#define DT_N_NODELABEL_swi3        DT_N_S_soc_S_egu_40017000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40017000_REG_NUM 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_ADDRESS 1073836032 /* 0x40017000 */
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40017000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40017000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40017000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40017000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40017000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40017000_P_reg {1073836032 /* 0x40017000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0 1073836032
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts {23 /* 0x17 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status "okay"
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40017000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, status, 0)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40017000, status, 0)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40017000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40017000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40017000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40017000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40017000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40018000
 *
 * Node identifier: DT_N_S_soc_S_egu_40018000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40018000_PATH "/soc/egu@40018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40018000_FULL_NAME "egu@40018000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40018000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40018000_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40018000_ORD 261
#define DT_N_S_soc_S_egu_40018000_ORD_STR_SORTABLE 00261

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40018000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40018000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40018000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_egu DT_N_S_soc_S_egu_40018000
#define DT_N_INST_4_nordic_nrf_swi DT_N_S_soc_S_egu_40018000
#define DT_N_NODELABEL_egu4        DT_N_S_soc_S_egu_40018000
#define DT_N_NODELABEL_swi4        DT_N_S_soc_S_egu_40018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40018000_REG_NUM 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_ADDRESS 1073840128 /* 0x40018000 */
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40018000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40018000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40018000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40018000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40018000_P_reg {1073840128 /* 0x40018000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0 1073840128
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts {24 /* 0x18 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status "okay"
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40018000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, status, 0)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40018000, status, 0)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40018000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40018000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40018000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40018000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40019000
 *
 * Node identifier: DT_N_S_soc_S_egu_40019000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40019000_PATH "/soc/egu@40019000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40019000_FULL_NAME "egu@40019000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40019000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40019000_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40019000_ORD 262
#define DT_N_S_soc_S_egu_40019000_ORD_STR_SORTABLE 00262

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40019000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40019000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40019000_EXISTS 1
#define DT_N_INST_5_nordic_nrf_egu DT_N_S_soc_S_egu_40019000
#define DT_N_INST_5_nordic_nrf_swi DT_N_S_soc_S_egu_40019000
#define DT_N_NODELABEL_egu5        DT_N_S_soc_S_egu_40019000
#define DT_N_NODELABEL_swi5        DT_N_S_soc_S_egu_40019000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40019000_REG_NUM 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_ADDRESS 1073844224 /* 0x40019000 */
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40019000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40019000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40019000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40019000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40019000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40019000_P_reg {1073844224 /* 0x40019000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0 1073844224
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts {25 /* 0x19 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status "okay"
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40019000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, status, 0)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40019000, status, 0)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40019000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40019000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40019000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40019000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40019000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ficr@10000000
 *
 * Node identifier: DT_N_S_soc_S_ficr_10000000
 *
 * Binding (compatible = nordic,nrf-ficr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ficr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ficr_10000000_PATH "/soc/ficr@10000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ficr_10000000_FULL_NAME "ficr@10000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ficr_10000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ficr_10000000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ficr_10000000_ORD 263
#define DT_N_S_soc_S_ficr_10000000_ORD_STR_SORTABLE 00263

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ficr_10000000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ficr_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ficr_10000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ficr DT_N_S_soc_S_ficr_10000000
#define DT_N_NODELABEL_ficr         DT_N_S_soc_S_ficr_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ficr_10000000_REG_NUM 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ficr_10000000_RANGES_NUM 0
#define DT_N_S_soc_S_ficr_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ficr_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MATCHES_nordic_nrf_ficr 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MODEL_IDX_0 "nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ficr_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ficr_10000000_P_reg {268435456 /* 0x10000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, status, 0)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_10000000, status, 0)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_10000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_status_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_status_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible {"nordic,nrf-ficr"}
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0 "nordic,nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ficr
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ficr
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_FICR
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source 0
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ficr_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpiote@40006000
 *
 * Node identifier: DT_N_S_soc_S_gpiote_40006000
 *
 * Binding (compatible = nordic,nrf-gpiote):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpiote.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpiote_40006000_PATH "/soc/gpiote@40006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpiote_40006000_FULL_NAME "gpiote@40006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpiote_40006000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpiote_40006000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpiote_40006000_ORD 264
#define DT_N_S_soc_S_gpiote_40006000_ORD_STR_SORTABLE 00264

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpiote_40006000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpiote_40006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpiote_40006000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpiote DT_N_S_soc_S_gpiote_40006000
#define DT_N_NODELABEL_gpiote         DT_N_S_soc_S_gpiote_40006000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpiote_40006000_REG_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_ADDRESS 1073766400 /* 0x40006000 */
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpiote_40006000_RANGES_NUM 0
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpiote_40006000_IRQ_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MATCHES_nordic_nrf_gpiote 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MODEL_IDX_0 "nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpiote_40006000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpiote_40006000_P_reg {1073766400 /* 0x40006000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0 1073766400
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts {6 /* 0x6 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, status, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_40006000, status, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_status_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible {"nordic,nrf-gpiote"}
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0 "nordic,nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpiote
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpiote
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIOTE
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source 0
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpiote_40006000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000
 *
 * Binding (compatible = nordic,nrf-twi):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_PATH "/soc/i2c@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_FULL_NAME "i2c@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_ORD 265
#define DT_N_S_soc_S_i2c_40003000_ORD_STR_SORTABLE 00265

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	233, /* /pin-controller/i2c0_default */ \
	235, /* /pin-controller/i2c0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twi DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_i2c0        DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_xiao_i2c    DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MATCHES_nordic_nrf_twi 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MODEL_IDX_0 "nrf-twi"
#define DT_N_S_soc_S_i2c_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NUM 2
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_i2c0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_i2c_40003000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, status, 0)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, status, 0)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible {"nordic,nrf-twi"}
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0 "nordic,nrf-twi"
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-twi
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_twi
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TWI
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_i2c0_sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_i2c0_sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004000_PATH "/soc/i2c@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004000_FULL_NAME "i2c@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004000_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004000_ORD 266
#define DT_N_S_soc_S_i2c_40004000_ORD_STR_SORTABLE 00266

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twim DT_N_S_soc_S_i2c_40004000
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0 "nrf-twim"
#define DT_N_S_soc_S_i2c_40004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_i2c_40004000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-twim
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_twim
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TWIM
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40025000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40025000
 *
 * Binding (compatible = nordic,nrf-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/nordic,nrf-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40025000_PATH "/soc/i2s@40025000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40025000_FULL_NAME "i2s@40025000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40025000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40025000_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40025000_ORD 267
#define DT_N_S_soc_S_i2s_40025000_ORD_STR_SORTABLE 00267

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40025000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40025000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40025000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_i2s DT_N_S_soc_S_i2s_40025000
#define DT_N_NODELABEL_i2s0        DT_N_S_soc_S_i2s_40025000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40025000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_ADDRESS 1073893376 /* 0x40025000 */
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_40025000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40025000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40025000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MATCHES_nordic_nrf_i2s 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MODEL_IDX_0 "nrf-i2s"
#define DT_N_S_soc_S_i2s_40025000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40025000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40025000_P_reg {1073893376 /* 0x40025000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0 1073893376
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts {37 /* 0x25 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_UNQUOTED PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_IDX_0 "PCLK32M_HFXO"
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_VAL_PCLK32M_HFXO_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40025000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, status, 0)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, status, 0)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible {"nordic,nrf-i2s"}
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0 "nordic,nrf-i2s"
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-i2s
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_i2s
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_I2S
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40025000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 268
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00268

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mwu@40020000
 *
 * Node identifier: DT_N_S_soc_S_mwu_40020000
 *
 * Binding (compatible = nordic,nrf-mwu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-mwu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mwu_40020000_PATH "/soc/mwu@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mwu_40020000_FULL_NAME "mwu@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mwu_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mwu_40020000_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mwu_40020000_ORD 269
#define DT_N_S_soc_S_mwu_40020000_ORD_STR_SORTABLE 00269

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mwu_40020000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mwu_40020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mwu_40020000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_mwu DT_N_S_soc_S_mwu_40020000
#define DT_N_NODELABEL_mwu         DT_N_S_soc_S_mwu_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mwu_40020000_REG_NUM 1
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mwu_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_mwu_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mwu_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MATCHES_nordic_nrf_mwu 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MODEL_IDX_0 "nrf-mwu"
#define DT_N_S_soc_S_mwu_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mwu_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mwu_40020000_P_reg {1073872896 /* 0x40020000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status "okay"
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mwu_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_mwu_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mwu_40020000, status, 0)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mwu_40020000, status, 0)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mwu_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_status_LEN 1
#define DT_N_S_soc_S_mwu_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible {"nordic,nrf-mwu"}
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0 "nordic,nrf-mwu"
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-mwu
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_mwu
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_MWU
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_mwu_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mwu_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/nfct@40005000
 *
 * Node identifier: DT_N_S_soc_S_nfct_40005000
 *
 * Binding (compatible = nordic,nrf-nfct):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-nfct.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nfct_40005000_PATH "/soc/nfct@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nfct_40005000_FULL_NAME "nfct@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_nfct_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nfct_40005000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nfct_40005000_ORD 270
#define DT_N_S_soc_S_nfct_40005000_ORD_STR_SORTABLE 00270

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nfct_40005000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nfct_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nfct_40005000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_nfct DT_N_S_soc_S_nfct_40005000
#define DT_N_NODELABEL_nfct         DT_N_S_soc_S_nfct_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nfct_40005000_REG_NUM 1
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_nfct_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_nfct_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nfct_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MATCHES_nordic_nrf_nfct 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MODEL_IDX_0 "nrf-nfct"
#define DT_N_S_soc_S_nfct_40005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nfct_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_nfct_40005000_P_reg {1073762304 /* 0x40005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts {5 /* 0x5 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status "okay"
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_nfct_40005000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_nfct_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nfct_40005000, status, 0)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nfct_40005000, status, 0)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nfct_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_status_LEN 1
#define DT_N_S_soc_S_nfct_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible {"nordic,nrf-nfct"}
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0 "nordic,nrf-nfct"
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-nfct
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_nfct
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_NFCT
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_nfct_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_nfct_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pdm@4001d000
 *
 * Node identifier: DT_N_S_soc_S_pdm_4001d000
 *
 * Binding (compatible = nordic,nrf-pdm):
 *   $ZEPHYR_BASE/dts/bindings/audio/nordic,nrf-pdm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pdm_4001d000_PATH "/soc/pdm@4001d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pdm_4001d000_FULL_NAME "pdm@4001d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pdm_4001d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pdm_4001d000_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pdm_4001d000_ORD 271
#define DT_N_S_soc_S_pdm_4001d000_ORD_STR_SORTABLE 00271

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pdm_4001d000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pdm_4001d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pdm_4001d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pdm DT_N_S_soc_S_pdm_4001d000
#define DT_N_NODELABEL_pdm0        DT_N_S_soc_S_pdm_4001d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pdm_4001d000_REG_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_ADDRESS 1073860608 /* 0x4001d000 */
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pdm_4001d000_RANGES_NUM 0
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pdm_4001d000_IRQ_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MATCHES_nordic_nrf_pdm 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MODEL_IDX_0 "nrf-pdm"
#define DT_N_S_soc_S_pdm_4001d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pdm_4001d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pdm_4001d000_P_reg {1073860608 /* 0x4001d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0 1073860608
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts {29 /* 0x1d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_UNQUOTED PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_IDX_0 "PCLK32M_HFXO"
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_VAL_PCLK32M_HFXO_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size 4
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status "disabled"
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pdm_4001d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, status, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, status, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_status_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible {"nordic,nrf-pdm"}
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0 "nordic,nrf-pdm"
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pdm
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pdm
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PDM
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source 0
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pdm_4001d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ppi@4001f000
 *
 * Node identifier: DT_N_S_soc_S_ppi_4001f000
 *
 * Binding (compatible = nordic,nrf-ppi):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ppi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ppi_4001f000_PATH "/soc/ppi@4001f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ppi_4001f000_FULL_NAME "ppi@4001f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ppi_4001f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ppi_4001f000_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ppi_4001f000_ORD 272
#define DT_N_S_soc_S_ppi_4001f000_ORD_STR_SORTABLE 00272

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ppi_4001f000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ppi_4001f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ppi_4001f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ppi DT_N_S_soc_S_ppi_4001f000
#define DT_N_NODELABEL_ppi         DT_N_S_soc_S_ppi_4001f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ppi_4001f000_REG_NUM 1
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_VAL_ADDRESS 1073868800 /* 0x4001f000 */
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ppi_4001f000_RANGES_NUM 0
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ppi_4001f000_IRQ_NUM 0
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MATCHES_nordic_nrf_ppi 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MODEL_IDX_0 "nrf-ppi"
#define DT_N_S_soc_S_ppi_4001f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ppi_4001f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ppi_4001f000_P_reg {1073868800 /* 0x4001f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_0 1073868800
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status "okay"
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ppi_4001f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ppi_4001f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ppi_4001f000, status, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ppi_4001f000, status, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ppi_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_status_LEN 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible {"nordic,nrf-ppi"}
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0 "nordic,nrf-ppi"
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ppi
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ppi
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PPI
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_LEN 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_wakeup_source 0
#define DT_N_S_soc_S_ppi_4001f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ppi_4001f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4001c000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4001c000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4001c000_PATH "/soc/pwm@4001c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4001c000_FULL_NAME "pwm@4001c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4001c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_4001c000_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4001c000_ORD 273
#define DT_N_S_soc_S_pwm_4001c000_ORD_STR_SORTABLE 00273

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4001c000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4001c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4001c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pwm DT_N_S_soc_S_pwm_4001c000
#define DT_N_NODELABEL_pwm0        DT_N_S_soc_S_pwm_4001c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4001c000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_ADDRESS 1073856512 /* 0x4001c000 */
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4001c000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4001c000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4001c000_P_reg {1073856512 /* 0x4001c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0 1073856512
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4001c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_4001c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, status, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, status, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts {28 /* 0x1c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_4001c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40021000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40021000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40021000_PATH "/soc/pwm@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40021000_FULL_NAME "pwm@40021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40021000_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40021000_ORD 274
#define DT_N_S_soc_S_pwm_40021000_ORD_STR_SORTABLE 00274

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40021000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40021000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_pwm DT_N_S_soc_S_pwm_40021000
#define DT_N_NODELABEL_pwm1        DT_N_S_soc_S_pwm_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40021000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40021000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40021000_P_reg {1073876992 /* 0x40021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, status, 0)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40021000, status, 0)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts {33 /* 0x21 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40022000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40022000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40022000_PATH "/soc/pwm@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40022000_FULL_NAME "pwm@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40022000_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40022000_ORD 275
#define DT_N_S_soc_S_pwm_40022000_ORD_STR_SORTABLE 00275

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40022000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40022000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_pwm DT_N_S_soc_S_pwm_40022000
#define DT_N_NODELABEL_pwm2        DT_N_S_soc_S_pwm_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40022000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40022000_P_reg {1073881088 /* 0x40022000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, status, 0)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40022000, status, 0)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts {34 /* 0x22 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4002d000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4002d000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4002d000_PATH "/soc/pwm@4002d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4002d000_FULL_NAME "pwm@4002d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4002d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_4002d000_CHILD_IDX 50

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4002d000_ORD 276
#define DT_N_S_soc_S_pwm_4002d000_ORD_STR_SORTABLE 00276

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4002d000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4002d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4002d000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_pwm DT_N_S_soc_S_pwm_4002d000
#define DT_N_NODELABEL_pwm3        DT_N_S_soc_S_pwm_4002d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4002d000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_ADDRESS 1073926144 /* 0x4002d000 */
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4002d000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4002d000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4002d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4002d000_P_reg {1073926144 /* 0x4002d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0 1073926144
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, status, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4002d000, status, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts {45 /* 0x2d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_4002d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/qdec@40012000
 *
 * Node identifier: DT_N_S_soc_S_qdec_40012000
 *
 * Binding (compatible = nordic,nrf-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_40012000_PATH "/soc/qdec@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_40012000_FULL_NAME "qdec@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_40012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qdec_40012000_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_40012000_ORD 277
#define DT_N_S_soc_S_qdec_40012000_ORD_STR_SORTABLE 00277

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_40012000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_40012000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qdec DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec         DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec0        DT_N_S_soc_S_qdec_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_40012000_REG_NUM 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qdec_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MATCHES_nordic_nrf_qdec 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MODEL_IDX_0 "nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_40012000_P_reg {1073815552 /* 0x40012000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts {18 /* 0x12 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, status, 0)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_40012000, status, 0)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_status_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible {"nordic,nrf-qdec"}
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0 "nordic,nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-qdec
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_qdec
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_QDEC
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qdec_40012000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/random@4000d000
 *
 * Node identifier: DT_N_S_soc_S_random_4000d000
 *
 * Binding (compatible = nordic,nrf-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/nordic,nrf-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_4000d000_PATH "/soc/random@4000d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_4000d000_FULL_NAME "random@4000d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_4000d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_random_4000d000_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_4000d000_ORD 278
#define DT_N_S_soc_S_random_4000d000_ORD_STR_SORTABLE 00278

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_4000d000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_4000d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_4000d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rng DT_N_S_soc_S_random_4000d000
#define DT_N_NODELABEL_rng         DT_N_S_soc_S_random_4000d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_4000d000_REG_NUM 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_ADDRESS 1073795072 /* 0x4000d000 */
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_random_4000d000_RANGES_NUM 0
#define DT_N_S_soc_S_random_4000d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_4000d000_IRQ_NUM 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MATCHES_nordic_nrf_rng 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_random_4000d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MODEL_IDX_0 "nrf-rng"
#define DT_N_S_soc_S_random_4000d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_4000d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_4000d000_P_reg {1073795072 /* 0x4000d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0 1073795072
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts {13 /* 0xd */, 1 /* 0x1 */}
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, status, 0)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_4000d000, status, 0)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_4000d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_status_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible {"nordic,nrf-rng"}
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0 "nordic,nrf-rng"
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rng
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rng
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RNG
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, compatible, 0)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_4000d000, compatible, 0)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_4000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source 0
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_random_4000d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@4000b000
 *
 * Node identifier: DT_N_S_soc_S_rtc_4000b000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_4000b000_PATH "/soc/rtc@4000b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_4000b000_FULL_NAME "rtc@4000b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_4000b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_4000b000_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_4000b000_ORD 279
#define DT_N_S_soc_S_rtc_4000b000_ORD_STR_SORTABLE 00279

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_4000b000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_4000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_4000b000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rtc DT_N_S_soc_S_rtc_4000b000
#define DT_N_NODELABEL_rtc0        DT_N_S_soc_S_rtc_4000b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_4000b000_REG_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_ADDRESS 1073786880 /* 0x4000b000 */
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_4000b000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_4000b000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_4000b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_4000b000_P_reg {1073786880 /* 0x4000b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0 1073786880
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num 3
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_zli 0
#define DT_N_S_soc_S_rtc_4000b000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status "disabled"
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_4000b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_4000b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, status, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4000b000, status, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_4000b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40011000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40011000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40011000_PATH "/soc/rtc@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40011000_FULL_NAME "rtc@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40011000_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40011000_ORD 280
#define DT_N_S_soc_S_rtc_40011000_ORD_STR_SORTABLE 00280

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40011000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40011000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_rtc DT_N_S_soc_S_rtc_40011000
#define DT_N_NODELABEL_rtc1        DT_N_S_soc_S_rtc_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40011000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40011000_P_reg {1073811456 /* 0x40011000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40011000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_zli 0
#define DT_N_S_soc_S_rtc_40011000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status "disabled"
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40011000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, status, 0)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40011000, status, 0)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40011000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40024000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40024000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40024000_PATH "/soc/rtc@40024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40024000_FULL_NAME "rtc@40024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40024000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40024000_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40024000_ORD 281
#define DT_N_S_soc_S_rtc_40024000_ORD_STR_SORTABLE 00281

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40024000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40024000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_rtc DT_N_S_soc_S_rtc_40024000
#define DT_N_NODELABEL_rtc2        DT_N_S_soc_S_rtc_40024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40024000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_ADDRESS 1073889280 /* 0x40024000 */
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40024000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40024000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40024000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40024000_P_reg {1073889280 /* 0x40024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0 1073889280
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40024000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_zli 0
#define DT_N_S_soc_S_rtc_40024000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts {36 /* 0x24 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status "disabled"
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40024000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40024000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, status, 0)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40024000, status, 0)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40024000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003000
 *
 * Node identifier: DT_N_S_soc_S_spi_40003000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003000_PATH "/soc/spi@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003000_FULL_NAME "spi@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003000_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003000_ORD 282
#define DT_N_S_soc_S_spi_40003000_ORD_STR_SORTABLE 00282

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spim DT_N_S_soc_S_spi_40003000
#define DT_N_NODELABEL_spi0         DT_N_S_soc_S_spi_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003000_REG_NUM 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40003000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40003000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40003000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40003000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, status, 0)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003000, status, 0)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, compatible, 0)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003000, compatible, 0)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40004000
 *
 * Node identifier: DT_N_S_soc_S_spi_40004000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40004000_PATH "/soc/spi@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40004000_FULL_NAME "spi@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40004000_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40004000_ORD 283
#define DT_N_S_soc_S_spi_40004000_ORD_STR_SORTABLE 00283

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40004000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40004000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_spim DT_N_S_soc_S_spi_40004000
#define DT_N_NODELABEL_spi1         DT_N_S_soc_S_spi_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40004000_REG_NUM 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40004000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40004000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40004000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40004000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status "disabled"
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40004000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, status, 0)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, status, 0)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40023000
 *
 * Node identifier: DT_N_S_soc_S_spi_40023000
 *
 * Binding (compatible = nordic,nrf-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40023000_PATH "/soc/spi@40023000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40023000_FULL_NAME "spi@40023000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40023000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40023000_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40023000_ORD 284
#define DT_N_S_soc_S_spi_40023000_ORD_STR_SORTABLE 00284

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40023000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	242, /* /pin-controller/spi2_default */ \
	244, /* /pin-controller/spi2_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40023000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40023000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spi DT_N_S_soc_S_spi_40023000
#define DT_N_NODELABEL_spi2        DT_N_S_soc_S_spi_40023000
#define DT_N_NODELABEL_xiao_spi    DT_N_S_soc_S_spi_40023000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40023000_REG_NUM 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_ADDRESS 1073885184 /* 0x40023000 */
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40023000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40023000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40023000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_MATCHES_nordic_nrf_spi 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40023000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_MODEL_IDX_0 "nrf-spi"
#define DT_N_S_soc_S_spi_40023000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NUM 2
#define DT_N_S_soc_S_spi_40023000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40023000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spi2_default
#define DT_N_S_soc_S_spi_40023000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_spi_40023000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_spi2_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40023000_P_reg {1073885184 /* 0x40023000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0 1073885184
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts {35 /* 0x23 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spi2_default
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spi2_default
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40023000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40023000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40023000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, status, 0)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, status, 0)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible {"nordic,nrf-spi"}
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0 "nordic,nrf-spi"
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spi
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spi
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPI
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, compatible, 0)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, compatible, 0)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40023000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_spi2_sleep
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_spi2_sleep
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, pinctrl_1, 0)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, pinctrl_1, 0)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 1)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 1)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40023000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_spi_40023000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/spi@4002f000
 *
 * Node identifier: DT_N_S_soc_S_spi_4002f000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4002f000_PATH "/soc/spi@4002f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4002f000_FULL_NAME "spi@4002f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4002f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_4002f000_CHILD_IDX 51

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4002f000_ORD 285
#define DT_N_S_soc_S_spi_4002f000_ORD_STR_SORTABLE 00285

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4002f000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4002f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4002f000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_spim DT_N_S_soc_S_spi_4002f000
#define DT_N_NODELABEL_spi3         DT_N_S_soc_S_spi_4002f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4002f000_REG_NUM 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_ADDRESS 1073934336 /* 0x4002f000 */
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_4002f000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4002f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4002f000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4002f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_supported 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay 2
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg {1073934336 /* 0x4002f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0 1073934336
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts {47 /* 0x2f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_max_frequency 32000000
#define DT_N_S_soc_S_spi_4002f000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_overrun_character 255
#define DT_N_S_soc_S_spi_4002f000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_4002f000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, status, 0)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4002f000, status, 0)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4002f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_status_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_4002f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/temp@4000c000
 *
 * Node identifier: DT_N_S_soc_S_temp_4000c000
 *
 * Binding (compatible = nordic,nrf-temp):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_temp_4000c000_PATH "/soc/temp@4000c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_temp_4000c000_FULL_NAME "temp@4000c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_temp_4000c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_temp_4000c000_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_temp_4000c000_ORD 286
#define DT_N_S_soc_S_temp_4000c000_ORD_STR_SORTABLE 00286

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_temp_4000c000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_temp_4000c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_temp_4000c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_temp DT_N_S_soc_S_temp_4000c000
#define DT_N_NODELABEL_temp         DT_N_S_soc_S_temp_4000c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_temp_4000c000_REG_NUM 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_ADDRESS 1073790976 /* 0x4000c000 */
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_temp_4000c000_RANGES_NUM 0
#define DT_N_S_soc_S_temp_4000c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_temp_4000c000_IRQ_NUM 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MATCHES_nordic_nrf_temp 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MODEL_IDX_0 "nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_temp_4000c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_temp_4000c000_P_reg {1073790976 /* 0x4000c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0 1073790976
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts {12 /* 0xc */, 1 /* 0x1 */}
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, status, 0)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_4000c000, status, 0)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_status_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_status_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible {"nordic,nrf-temp"}
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0 "nordic,nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-temp
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_temp
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TEMP
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source 0
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_temp_4000c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40008000
 *
 * Node identifier: DT_N_S_soc_S_timer_40008000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40008000_PATH "/soc/timer@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40008000_FULL_NAME "timer@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40008000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40008000_ORD 287
#define DT_N_S_soc_S_timer_40008000_ORD_STR_SORTABLE 00287

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40008000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40008000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_timer DT_N_S_soc_S_timer_40008000
#define DT_N_NODELABEL_timer0        DT_N_S_soc_S_timer_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40008000_REG_NUM 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40008000_P_reg {1073774592 /* 0x40008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_cc_num 4
#define DT_N_S_soc_S_timer_40008000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_40008000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_prescaler 0
#define DT_N_S_soc_S_timer_40008000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_zli 0
#define DT_N_S_soc_S_timer_40008000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status "disabled"
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, status, 0)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40008000, status, 0)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, compatible, 0)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40008000, compatible, 0)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4000a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4000a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4000a000_PATH "/soc/timer@4000a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4000a000_FULL_NAME "timer@4000a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4000a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4000a000_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4000a000_ORD 288
#define DT_N_S_soc_S_timer_4000a000_ORD_STR_SORTABLE 00288

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4000a000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4000a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4000a000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_timer DT_N_S_soc_S_timer_4000a000
#define DT_N_NODELABEL_timer2        DT_N_S_soc_S_timer_4000a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4000a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_ADDRESS 1073782784 /* 0x4000a000 */
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4000a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4000a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4000a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4000a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4000a000_P_reg {1073782784 /* 0x4000a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0 1073782784
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_cc_num 4
#define DT_N_S_soc_S_timer_4000a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4000a000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4000a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_zli 0
#define DT_N_S_soc_S_timer_4000a000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status "disabled"
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4000a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4000a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, status, 0)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4000a000, status, 0)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4000a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001a000_PATH "/soc/timer@4001a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001a000_FULL_NAME "timer@4001a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4001a000_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001a000_ORD 289
#define DT_N_S_soc_S_timer_4001a000_ORD_STR_SORTABLE 00289

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001a000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001a000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_timer DT_N_S_soc_S_timer_4001a000
#define DT_N_NODELABEL_timer3        DT_N_S_soc_S_timer_4001a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_ADDRESS 1073848320 /* 0x4001a000 */
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001a000_P_reg {1073848320 /* 0x4001a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0 1073848320
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4001a000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts {26 /* 0x1a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_zli 0
#define DT_N_S_soc_S_timer_4001a000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status "disabled"
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4001a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, status, 0)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001a000, status, 0)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4001a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001b000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001b000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001b000_PATH "/soc/timer@4001b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001b000_FULL_NAME "timer@4001b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4001b000_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001b000_ORD 290
#define DT_N_S_soc_S_timer_4001b000_ORD_STR_SORTABLE 00290

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001b000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001b000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_timer DT_N_S_soc_S_timer_4001b000
#define DT_N_NODELABEL_timer4        DT_N_S_soc_S_timer_4001b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001b000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_ADDRESS 1073852416 /* 0x4001b000 */
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001b000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001b000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001b000_P_reg {1073852416 /* 0x4001b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0 1073852416
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4001b000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts {27 /* 0x1b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_zli 0
#define DT_N_S_soc_S_timer_4001b000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status "disabled"
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4001b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, status, 0)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001b000, status, 0)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4001b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 291
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00291

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@40002000
 *
 * Node identifier: DT_N_S_soc_S_uart_40002000
 *
 * Binding (compatible = nordic,nrf-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40002000_PATH "/soc/uart@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40002000_FULL_NAME "uart@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40002000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40002000_ORD 292
#define DT_N_S_soc_S_uart_40002000_ORD_STR_SORTABLE 00292

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40002000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	246, /* /pin-controller/uart0_default */ \
	249, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40002000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uart DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_uart0        DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_xiao_serial  DT_N_S_soc_S_uart_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40002000_REG_NUM 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MATCHES_nordic_nrf_uart 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uart_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MODEL_IDX_0 "nrf-uart"
#define DT_N_S_soc_S_uart_40002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NUM 2
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40002000_P_reg {1073750016 /* 0x40002000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts {2 /* 0x2 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40002000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40002000_P_current_speed_ENUM_IDX 12
#define DT_N_S_soc_S_uart_40002000_P_current_speed_ENUM_VAL_115200_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status "disabled"
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, status, 0)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, status, 0)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible {"nordic,nrf-uart"}
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0 "nordic,nrf-uart"
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uart
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uart
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UART
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/uart@40028000
 *
 * Node identifier: DT_N_S_soc_S_uart_40028000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40028000_PATH "/soc/uart@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40028000_FULL_NAME "uart@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40028000_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40028000_ORD 293
#define DT_N_S_soc_S_uart_40028000_ORD_STR_SORTABLE 00293

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40028000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40028000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uarte DT_N_S_soc_S_uart_40028000
#define DT_N_NODELABEL_uart1         DT_N_S_soc_S_uart_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40028000_REG_NUM 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uart_40028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MODEL_IDX_0 "nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40028000_P_reg {1073905664 /* 0x40028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts {40 /* 0x28 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40028000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, status, 0)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, status, 0)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uarte
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uarte
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UARTE
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40028000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uicr@10001000
 *
 * Node identifier: DT_N_S_soc_S_uicr_10001000
 *
 * Binding (compatible = nordic,nrf-uicr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-uicr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uicr_10001000_PATH "/soc/uicr@10001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uicr_10001000_FULL_NAME "uicr@10001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uicr_10001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uicr_10001000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uicr_10001000_ORD 294
#define DT_N_S_soc_S_uicr_10001000_ORD_STR_SORTABLE 00294

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uicr_10001000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uicr_10001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uicr_10001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uicr DT_N_S_soc_S_uicr_10001000
#define DT_N_NODELABEL_uicr         DT_N_S_soc_S_uicr_10001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uicr_10001000_REG_NUM 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_ADDRESS 268439552 /* 0x10001000 */
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uicr_10001000_RANGES_NUM 0
#define DT_N_S_soc_S_uicr_10001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uicr_10001000_IRQ_NUM 0
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MATCHES_nordic_nrf_uicr 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MODEL_IDX_0 "nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uicr_10001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uicr_10001000_P_reg {268439552 /* 0x10001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0 268439552
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_nfct_pins_as_gpios 0
#define DT_N_S_soc_S_uicr_10001000_P_nfct_pins_as_gpios_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_gpio_as_nreset 0
#define DT_N_S_soc_S_uicr_10001000_P_gpio_as_nreset_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, status, 0)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_10001000, status, 0)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_10001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_status_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_status_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible {"nordic,nrf-uicr"}
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0 "nordic,nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uicr
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uicr
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UICR
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source 0
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uicr_10001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40010000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40010000
 *
 * Binding (compatible = nordic,nrf-wdt):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nordic,nrf-wdt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40010000_PATH "/soc/watchdog@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40010000_FULL_NAME "watchdog@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40010000_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40010000_ORD 295
#define DT_N_S_soc_S_watchdog_40010000_ORD_STR_SORTABLE 00295

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40010000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40010000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_wdt DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt         DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt0        DT_N_S_soc_S_watchdog_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40010000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40010000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MATCHES_nordic_nrf_wdt 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MODEL_IDX_0 "nrf-wdt"
#define DT_N_S_soc_S_watchdog_40010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40010000_P_reg {1073807360 /* 0x40010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts {16 /* 0x10 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, status, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40010000, status, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible {"nordic,nrf-wdt"}
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0 "nordic,nrf-wdt"
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-wdt
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_wdt
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_WDT
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000
 *
 * Binding (compatible = nordic,nrf52-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf52-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_PATH "/soc/flash-controller@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_FULL_NAME "flash-controller@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_ORD 296
#define DT_N_S_soc_S_flash_controller_4001e000_ORD_STR_SORTABLE 00296

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_SUPPORTS_ORDS \
	297, /* /soc/flash-controller@4001e000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf52_flash_controller DT_N_S_soc_S_flash_controller_4001e000
#define DT_N_NODELABEL_flash_controller           DT_N_S_soc_S_flash_controller_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MATCHES_nordic_nrf52_flash_controller 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MODEL_IDX_0 "nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_P_partial_erase 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_partial_erase_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible {"nordic,nrf52-flash-controller"}
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0 "nordic,nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf52-flash-controller
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf52_flash_controller
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF52_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PATH "/soc/flash-controller@4001e000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FULL_NAME "flash@0"

/* Node parent (/soc/flash-controller@4001e000) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_4001e000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD 297
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD_STR_SORTABLE 00297

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REQUIRES_ORDS \
	296, /* /soc/flash-controller@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_SUPPORTS_ORDS \
	298, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PATH "/soc/flash-controller@4001e000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@4001e000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD 298
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00298

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REQUIRES_ORDS \
	297, /* /soc/flash-controller@4001e000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	299, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@0 */ \
	300, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@27000 */ \
	301, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000 */ \
	302, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD 299
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00299

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	298, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_sd_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 155648 /* 0x26000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label "softdevice"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED softdevice
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN softdevice
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN SOFTDEVICE
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0 "softdevice"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 155648 /* 0x26000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 155648
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@27000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@27000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FULL_NAME "partition@27000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_ORD 300
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_ORD_STR_SORTABLE 00300

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_REQUIRES_ORDS \
	298, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_EXISTS 1
#define DT_N_NODELABEL_code_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_REG_IDX_0_VAL_ADDRESS 159744 /* 0x27000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_REG_IDX_0_VAL_SIZE 806912 /* 0xc5000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label "code_partition"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_STRING_UNQUOTED code_partition
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_STRING_TOKEN code_partition
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_STRING_UPPER_TOKEN CODE_PARTITION
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_IDX_0 "code_partition"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_reg {159744 /* 0x27000 */, 806912 /* 0xc5000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_reg_IDX_0 159744
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_reg_IDX_1 806912
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@ec000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FULL_NAME "partition@ec000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_ORD 301
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_ORD_STR_SORTABLE 00301

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REQUIRES_ORDS \
	298, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_ADDRESS 966656 /* 0xec000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg {966656 /* 0xec000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0 966656
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@f4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FULL_NAME "partition@f4000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_ORD 302
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_ORD_STR_SORTABLE 00302

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REQUIRES_ORDS \
	298, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_ADDRESS 999424 /* 0xf4000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label "adafruit_boot"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_STRING_UNQUOTED adafruit_boot
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_STRING_TOKEN adafruit_boot
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_STRING_UPPER_TOKEN ADAFRUIT_BOOT
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_IDX_0 "adafruit_boot"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg {999424 /* 0xf4000 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0 999424
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000
 *
 * Node identifier: DT_N_S_soc_S_power_40000000
 *
 * Binding (compatible = nordic,nrf-power):
 *   $ZEPHYR_BASE/dts/bindings/power/nordic,nrf-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_PATH "/soc/power@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_FULL_NAME "power@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_power_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_ORD 303
#define DT_N_S_soc_S_power_40000000_ORD_STR_SORTABLE 00303

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_SUPPORTS_ORDS \
	304, /* /soc/power@40000000/gpregret1@4000051c */ \
	305, /* /soc/power@40000000/gpregret2@40000520 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_power DT_N_S_soc_S_power_40000000
#define DT_N_NODELABEL_power         DT_N_S_soc_S_power_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_power_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_MATCHES_nordic_nrf_power 1
#define DT_N_S_soc_S_power_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_MODEL_IDX_0 "nrf-power"
#define DT_N_S_soc_S_power_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status "okay"
#define DT_N_S_soc_S_power_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000, status, 0)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000, status, 0)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_compatible {"nordic,nrf-power"}
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0 "nordic,nrf-power"
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-power
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_power
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_POWER
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000, compatible, 0)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000, compatible, 0)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000/gpregret1@4000051c
 *
 * Node identifier: DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PATH "/soc/power@40000000/gpregret1@4000051c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FULL_NAME "gpregret1@4000051c"

/* Node parent (/soc/power@40000000) identifier: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PARENT DT_N_S_soc_S_power_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_ORD 304
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_ORD_STR_SORTABLE 00304

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REQUIRES_ORDS \
	303, /* /soc/power@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpregret DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c
#define DT_N_NODELABEL_gpregret1        DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_VAL_ADDRESS 1073743132 /* 0x4000051c */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_IRQ_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg {1073743132 /* 0x4000051c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_0 1073743132
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000/gpregret2@40000520
 *
 * Node identifier: DT_N_S_soc_S_power_40000000_S_gpregret2_40000520
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PATH "/soc/power@40000000/gpregret2@40000520"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FULL_NAME "gpregret2@40000520"

/* Node parent (/soc/power@40000000) identifier: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PARENT DT_N_S_soc_S_power_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_ORD 305
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_ORD_STR_SORTABLE 00305

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REQUIRES_ORDS \
	303, /* /soc/power@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpregret DT_N_S_soc_S_power_40000000_S_gpregret2_40000520
#define DT_N_NODELABEL_gpregret2        DT_N_S_soc_S_power_40000000_S_gpregret2_40000520

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_VAL_ADDRESS 1073743136 /* 0x40000520 */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_IRQ_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg {1073743136 /* 0x40000520 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_0 1073743136
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/qspi@40029000
 *
 * Node identifier: DT_N_S_soc_S_qspi_40029000
 *
 * Binding (compatible = nordic,nrf-qspi):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf-qspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qspi_40029000_PATH "/soc/qspi@40029000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qspi_40029000_FULL_NAME "qspi@40029000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qspi_40029000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qspi_40029000_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0)
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0)
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0)
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0)
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qspi_40029000_ORD 306
#define DT_N_S_soc_S_qspi_40029000_ORD_STR_SORTABLE 00306

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qspi_40029000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	237, /* /pin-controller/qspi_default */ \
	239, /* /pin-controller/qspi_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qspi_40029000_SUPPORTS_ORDS \
	307, /* /soc/qspi@40029000/gd25q16@0 */ \
	308, /* /soc/qspi@40029000/p25q16h@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qspi_40029000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qspi DT_N_S_soc_S_qspi_40029000
#define DT_N_NODELABEL_qspi         DT_N_S_soc_S_qspi_40029000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qspi_40029000_REG_NUM 2
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS 1073909760 /* 0x40029000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS 301989888 /* 0x12000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_RANGES_NUM 0
#define DT_N_S_soc_S_qspi_40029000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qspi_40029000_IRQ_NUM 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MATCHES_nordic_nrf_qspi 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MODEL_IDX_0 "nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NUM 2
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_qspi_default
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_qspi_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_qspi_40029000_P_interrupts {41 /* 0x29 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_qspi_default
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_qspi_default
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_0, 0)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_0, 0)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg {1073909760 /* 0x40029000 */, 4096 /* 0x1000 */, 301989888 /* 0x12000000 */, 134217728 /* 0x8000000 */}
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0 1073909760
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2 301989888
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3 134217728
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status "okay"
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_qspi_40029000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_qspi_40029000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, status, 0)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, status, 0)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_status_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_status_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible {"nordic,nrf-qspi"}
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0 "nordic,nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-qspi
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_qspi
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_QSPI
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names {"qspi", "qspi_mm"}
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0 "qspi"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_UNQUOTED qspi
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_TOKEN qspi
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_UPPER_TOKEN QSPI
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1 "qspi_mm"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_UNQUOTED qspi_mm
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_TOKEN qspi_mm
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_UPPER_TOKEN QSPI_MM
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_LEN 2
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source 0
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qspi_40029000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_qspi_sleep
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_qspi_sleep
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_1, 0)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_1, 0)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_qspi_40029000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/qspi@40029000/gd25q16@0
 *
 * Node identifier: DT_N_S_soc_S_qspi_40029000_S_gd25q16_0
 *
 * Binding (compatible = nordic,qspi-nor):
 *   $ZEPHYR_BASE/dts/bindings/mtd/nordic,qspi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_PATH "/soc/qspi@40029000/gd25q16@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FULL_NAME "gd25q16@0"

/* Node parent (/soc/qspi@40029000) identifier: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_PARENT DT_N_S_soc_S_qspi_40029000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_ORD 307
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_ORD_STR_SORTABLE 00307

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_REQUIRES_ORDS \
	306, /* /soc/qspi@40029000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_EXISTS 1
#define DT_N_INST_0_nordic_qspi_nor DT_N_S_soc_S_qspi_40029000_S_gd25q16_0
#define DT_N_NODELABEL_gd25q16      DT_N_S_soc_S_qspi_40029000_S_gd25q16_0

/* Bus info (controller: '/soc/qspi@40029000', type: '['qspi']') */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_BUS_qspi 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_BUS DT_N_S_soc_S_qspi_40029000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_REG_NUM 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_RANGES_NUM 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_IRQ_NUM 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_COMPAT_MATCHES_nordic_qspi_nor 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_COMPAT_MODEL_IDX_0 "qspi-nor"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id {200 /* 0xc8 */, 64 /* 0x40 */, 21 /* 0x15 */}
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_IDX_0 200
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_IDX_1 64
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_IDX_2 21
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_IDX_2_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 0) \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 1) \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 2)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 2)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_LEN 3
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_jedec_id_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_size 2097152
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_size_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements "S1B6"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_STRING_UNQUOTED S1B6
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_STRING_TOKEN S1B6
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_STRING_UPPER_TOKEN S1B6
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_IDX_0 "S1B6"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_ENUM_IDX 2
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_ENUM_VAL_S1B6_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_ENUM_TOKEN S1B6
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_ENUM_UPPER_TOKEN S1B6
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, quad_enable_requirements, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, quad_enable_requirements, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, quad_enable_requirements, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, quad_enable_requirements, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_LEN 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_quad_enable_requirements_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc "read2io"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_STRING_UNQUOTED read2io
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_STRING_TOKEN read2io
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_STRING_UPPER_TOKEN READ2IO
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_IDX_0 "read2io"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_ENUM_IDX 2
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_ENUM_VAL_read2io_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_ENUM_TOKEN read2io
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_ENUM_UPPER_TOKEN READ2IO
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, readoc, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, readoc, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, readoc, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, readoc, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_LEN 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_readoc_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc "pp2o"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_STRING_UNQUOTED pp2o
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_STRING_TOKEN pp2o
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_STRING_UPPER_TOKEN PP2O
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_IDX_0 "pp2o"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_ENUM_IDX 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_ENUM_VAL_pp2o_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_ENUM_TOKEN pp2o
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_ENUM_UPPER_TOKEN PP2O
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, writeoc, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, writeoc, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, writeoc, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, writeoc, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_LEN 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_writeoc_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_address_size_32 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_address_size_32_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_ppsize_512 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_ppsize_512_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_sck_delay 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_sck_delay_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_cpha 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_cpha_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_cpol 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_cpol_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_sck_frequency 16000000
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_sck_frequency_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible {"nordic,qspi-nor"}
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_IDX_0 "nordic,qspi-nor"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_IDX_0_STRING_UNQUOTED nordic,qspi-nor
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_IDX_0_STRING_TOKEN nordic_qspi_nor
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_QSPI_NOR
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_LEN 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label "GD25Q16"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_STRING_UNQUOTED GD25Q16
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_STRING_TOKEN GD25Q16
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_STRING_UPPER_TOKEN GD25Q16
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_IDX_0 "GD25Q16"
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, label, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, label, 0)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_LEN 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_label_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_wakeup_source 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_requires_ulbpr 0
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_requires_ulbpr_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_has_dpd 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_has_dpd_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_t_enter_dpd 20000
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_t_enter_dpd_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_t_exit_dpd 20000
#define DT_N_S_soc_S_qspi_40029000_S_gd25q16_0_P_t_exit_dpd_EXISTS 1

/*
 * Devicetree node: /soc/qspi@40029000/p25q16h@0
 *
 * Node identifier: DT_N_S_soc_S_qspi_40029000_S_p25q16h_0
 *
 * Binding (compatible = nordic,qspi-nor):
 *   $ZEPHYR_BASE/dts/bindings/mtd/nordic,qspi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_PATH "/soc/qspi@40029000/p25q16h@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FULL_NAME "p25q16h@0"

/* Node parent (/soc/qspi@40029000) identifier: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_PARENT DT_N_S_soc_S_qspi_40029000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_ORD 308
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_ORD_STR_SORTABLE 00308

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_REQUIRES_ORDS \
	306, /* /soc/qspi@40029000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_EXISTS 1
#define DT_N_INST_1_nordic_qspi_nor DT_N_S_soc_S_qspi_40029000_S_p25q16h_0
#define DT_N_NODELABEL_p25q16h      DT_N_S_soc_S_qspi_40029000_S_p25q16h_0

/* Bus info (controller: '/soc/qspi@40029000', type: '['qspi']') */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_BUS_qspi 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_BUS DT_N_S_soc_S_qspi_40029000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_REG_NUM 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_RANGES_NUM 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_IRQ_NUM 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_COMPAT_MATCHES_nordic_qspi_nor 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_COMPAT_MODEL_IDX_0 "qspi-nor"
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id {133 /* 0x85 */, 96 /* 0x60 */, 21 /* 0x15 */}
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_IDX_0 133
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_IDX_1 96
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_IDX_2 21
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_IDX_2_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 0) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 1) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 2)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 2)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_LEN 3
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_jedec_id_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_size 16777216
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_size_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements "S2B1v1"
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_STRING_UNQUOTED S2B1v1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_STRING_TOKEN S2B1v1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_STRING_UPPER_TOKEN S2B1V1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_IDX_0 "S2B1v1"
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_ENUM_IDX 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_ENUM_VAL_S2B1v1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_ENUM_TOKEN S2B1v1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_ENUM_UPPER_TOKEN S2B1V1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, quad_enable_requirements, 0)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, quad_enable_requirements, 0)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, quad_enable_requirements, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, quad_enable_requirements, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_LEN 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_quad_enable_requirements_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_address_size_32 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_address_size_32_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_ppsize_512 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_ppsize_512_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sck_delay 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sck_delay_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_cpha 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_cpha_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_cpol 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_cpol_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sck_frequency 104000000
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sck_frequency_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible {"nordic,qspi-nor"}
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_IDX_0 "nordic,qspi-nor"
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_IDX_0_STRING_UNQUOTED nordic,qspi-nor
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_IDX_0_STRING_TOKEN nordic_qspi_nor
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_QSPI_NOR
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_LEN 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_wakeup_source 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_requires_ulbpr 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_requires_ulbpr_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_has_dpd 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_has_dpd_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_t_enter_dpd 3000
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_t_enter_dpd_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_t_exit_dpd 8000
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_t_exit_dpd_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp {229 /* 0xe5 */, 32 /* 0x20 */, 241 /* 0xf1 */, 255 /* 0xff */, 255 /* 0xff */, 255 /* 0xff */, 255 /* 0xff */, 0 /* 0x0 */, 68 /* 0x44 */, 235 /* 0xeb */, 8 /* 0x8 */, 107 /* 0x6b */, 8 /* 0x8 */, 59 /* 0x3b */, 128 /* 0x80 */, 187 /* 0xbb */, 238 /* 0xee */, 255 /* 0xff */, 255 /* 0xff */, 255 /* 0xff */, 255 /* 0xff */, 255 /* 0xff */, 0 /* 0x0 */, 255 /* 0xff */, 255 /* 0xff */, 255 /* 0xff */, 0 /* 0x0 */, 255 /* 0xff */, 12 /* 0xc */, 32 /* 0x20 */, 15 /* 0xf */, 82 /* 0x52 */, 16 /* 0x10 */, 216 /* 0xd8 */, 8 /* 0x8 */, 129 /* 0x81 */}
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_0 229
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_1 32
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_2 241
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_2_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_3 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_3_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_4 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_4_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_5 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_5_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_6 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_6_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_7 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_7_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_8 68
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_8_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_9 235
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_9_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_10 8
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_10_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_11 107
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_11_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_12 8
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_12_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_13 59
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_13_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_14 128
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_14_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_15 187
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_15_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_16 238
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_16_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_17 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_17_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_18 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_18_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_19 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_19_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_20 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_20_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_21 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_21_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_22 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_22_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_23 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_23_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_24 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_24_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_25 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_25_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_26 0
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_26_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_27 255
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_27_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_28 12
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_28_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_29 32
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_29_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_30 15
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_30_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_31 82
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_31_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_32 16
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_32_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_33 216
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_33_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_34 8
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_34_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_35 129
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_IDX_35_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 0) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 1) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 2) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 3) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 4) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 5) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 6) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 7) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 8) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 9) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 10) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 11) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 12) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 13) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 14) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 15) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 16) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 17) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 18) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 19) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 20) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 21) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 22) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 23) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 24) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 25) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 26) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 27) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 28) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 29) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 30) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 31) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 32) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 33) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 34) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 35)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 35)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 31, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 32, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 33, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 34, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 35, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, sfdp_bfp, 35, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_LEN 36
#define DT_N_S_soc_S_qspi_40029000_S_p25q16h_0_P_sfdp_bfp_EXISTS 1

/*
 * Devicetree node: /soc/radio@40001000
 *
 * Node identifier: DT_N_S_soc_S_radio_40001000
 *
 * Binding (compatible = nordic,nrf-radio):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-radio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40001000_PATH "/soc/radio@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40001000_FULL_NAME "radio@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_radio_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40001000_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40001000_ORD 309
#define DT_N_S_soc_S_radio_40001000_ORD_STR_SORTABLE 00309

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40001000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40001000_SUPPORTS_ORDS \
	310, /* /soc/radio@40001000/ieee802154 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_radio DT_N_S_soc_S_radio_40001000
#define DT_N_NODELABEL_radio         DT_N_S_soc_S_radio_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40001000_REG_NUM 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_MATCHES_nordic_nrf_radio 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_MODEL_IDX_0 "nrf-radio"
#define DT_N_S_soc_S_radio_40001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40001000_P_reg {1073745920 /* 0x40001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts {1 /* 0x1 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported 0
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ieee802154_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ieee802154_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ble_2mbps_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ble_2mbps_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ble_coded_phy_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ble_coded_phy_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_tx_high_power_supported 1
#define DT_N_S_soc_S_radio_40001000_P_tx_high_power_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status "okay"
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_radio_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, status, 0)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000, status, 0)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_status_LEN 1
#define DT_N_S_soc_S_radio_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible {"nordic,nrf-radio"}
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0 "nordic,nrf-radio"
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-radio
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_radio
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RADIO
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@40001000/ieee802154
 *
 * Node identifier: DT_N_S_soc_S_radio_40001000_S_ieee802154
 *
 * Binding (compatible = nordic,nrf-ieee802154):
 *   $ZEPHYR_BASE/dts/bindings/ieee802154/nordic,nrf-ieee802154.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PATH "/soc/radio@40001000/ieee802154"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FULL_NAME "ieee802154"

/* Node parent (/soc/radio@40001000) identifier: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PARENT DT_N_S_soc_S_radio_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_ORD 310
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_ORD_STR_SORTABLE 00310

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_REQUIRES_ORDS \
	309, /* /soc/radio@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ieee802154 DT_N_S_soc_S_radio_40001000_S_ieee802154
#define DT_N_NODELABEL_ieee802154         DT_N_S_soc_S_radio_40001000_S_ieee802154

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_REG_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_IRQ_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MATCHES_nordic_nrf_ieee802154 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MODEL_IDX_0 "nrf-ieee802154"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status "disabled"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_LEN 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible {"nordic,nrf-ieee802154"}
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0 "nordic,nrf-ieee802154"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ieee802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ieee802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_IEEE802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000
 *
 * Binding (compatible = nordic,nrf-usbd):
 *   $ZEPHYR_BASE/dts/bindings/usb/nordic,nrf-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_PATH "/soc/usbd@40027000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40027000_FULL_NAME "usbd@40027000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_40027000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_40027000_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_ORD 311
#define DT_N_S_soc_S_usbd_40027000_ORD_STR_SORTABLE 00311

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_SUPPORTS_ORDS \
	312, /* /soc/usbd@40027000/snippet_zmk_usb_logging_uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_usbd DT_N_S_soc_S_usbd_40027000
#define DT_N_NODELABEL_usbd         DT_N_S_soc_S_usbd_40027000
#define DT_N_NODELABEL_zephyr_udc0  DT_N_S_soc_S_usbd_40027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40027000_REG_NUM 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_ADDRESS 1073901568 /* 0x40027000 */
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usbd_40027000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40027000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40027000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MATCHES_nordic_nrf_usbd 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MODEL_IDX_0 "nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40027000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_P_reg {1073901568 /* 0x40027000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0 1073901568
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts {39 /* 0x27 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status "okay"
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40027000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usbd_40027000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, status, 0)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000, status, 0)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_status_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible {"nordic,nrf-usbd"}
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0 "nordic,nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-usbd
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_usbd
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_USBD
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_40027000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000/snippet_zmk_usb_logging_uart
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart
 *
 * Binding (compatible = zephyr,cdc-acm-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/zephyr,cdc-acm-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_PATH "/soc/usbd@40027000/snippet_zmk_usb_logging_uart"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FULL_NAME "snippet_zmk_usb_logging_uart"

/* Node parent (/soc/usbd@40027000) identifier: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_PARENT DT_N_S_soc_S_usbd_40027000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_ORD 312
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_ORD_STR_SORTABLE 00312

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_REQUIRES_ORDS \
	311, /* /soc/usbd@40027000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_EXISTS 1
#define DT_N_INST_0_zephyr_cdc_acm_uart             DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart
#define DT_N_NODELABEL_snippet_zmk_usb_logging_uart DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart

/* Bus info (controller: '/soc/usbd@40027000', type: '['usb']') */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_BUS_usb 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_BUS DT_N_S_soc_S_usbd_40027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_REG_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_IRQ_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_COMPAT_MATCHES_zephyr_cdc_acm_uart 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_COMPAT_MODEL_IDX_0 "cdc-acm-uart"
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_tx_fifo_size 1024
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_tx_fifo_size_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_rx_fifo_size 1024
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_rx_fifo_size_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_hw_flow_control 0
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible {"zephyr,cdc-acm-uart"}
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_IDX_0 "zephyr,cdc-acm-uart"
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_IDX_0_STRING_UNQUOTED zephyr,cdc-acm-uart
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_IDX_0_STRING_TOKEN zephyr_cdc_acm_uart
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_CDC_ACM_UART
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_random_4000d000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_4001e000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_uart_mcumgr             DT_N_S_soc_S_uart_40002000
#define DT_CHOSEN_zephyr_uart_mcumgr_EXISTS      1
#define DT_CHOSEN_zephyr_bt_mon_uart             DT_N_S_soc_S_uart_40002000
#define DT_CHOSEN_zephyr_bt_mon_uart_EXISTS      1
#define DT_CHOSEN_zephyr_bt_c2h_uart             DT_N_S_soc_S_uart_40002000
#define DT_CHOSEN_zephyr_bt_c2h_uart_EXISTS      1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zmk_battery                    DT_N_S_vbatt
#define DT_CHOSEN_zmk_battery_EXISTS             1
#define DT_CHOSEN_zmk_kscan                      DT_N_S_kscan_0
#define DT_CHOSEN_zmk_kscan_EXISTS               1
#define DT_CHOSEN_zmk_matrix_transform           DT_N_S_keymap_transform_0
#define DT_CHOSEN_zmk_matrix_transform_EXISTS    1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_comparator_40013000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pdm_4001d000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_i2s_40025000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1) fn(DT_N_S_pin_controller_S_spi2_default) fn(DT_N_S_pin_controller_S_spi2_default_S_group1) fn(DT_N_S_pin_controller_S_spi2_sleep) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1) fn(DT_N_S_pin_controller_S_qspi_default) fn(DT_N_S_pin_controller_S_qspi_default_S_group1) fn(DT_N_S_pin_controller_S_qspi_sleep) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan_0) fn(DT_N_S_behaviors) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_mouse_move) fn(DT_N_S_behaviors_S_mouse_scroll) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_none) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_sticky_layer) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_caps_word) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_studio_unlock) fn(DT_N_S_behaviors_S_bt_0) fn(DT_N_S_behaviors_S_bt_1) fn(DT_N_S_behaviors_S_bt_2) fn(DT_N_S_behaviors_S_bt_3) fn(DT_N_S_behaviors_S_bt_4) fn(DT_N_S_behaviors_S_toggle_layer_on_only) fn(DT_N_S_behaviors_S_toggle_layer_off_only) fn(DT_N_S_behaviors_S_pfind) fn(DT_N_S_behaviors_S_gpfind) fn(DT_N_S_behaviors_S_tdselectcoppinglr) fn(DT_N_S_behaviors_S_lrlmo) fn(DT_N_S_behaviors_S_lrrmo) fn(DT_N_S_behaviors_S_th_mo_kp_hp) fn(DT_N_S_behaviors_S_th_kp_kp_hp) fn(DT_N_S_behaviors_S_space) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm) fn(DT_N_S_behaviors_S_th_kp_sl_hp) fn(DT_N_S_behaviors_S_lm_homerow) fn(DT_N_S_behaviors_S_lm_homerow_short) fn(DT_N_S_behaviors_S_tdselectcoppingrl) fn(DT_N_S_behaviors_S_td_find_s_ht) fn(DT_N_S_behaviors_S_td_find_g_ht) fn(DT_N_S_behaviors_S_nav_esc) fn(DT_N_S_mkp_input_listener) fn(DT_N_S_mmv_input_listener) fn(DT_N_S_msc_input_listener) fn(DT_N_S_macros) fn(DT_N_S_macros_S_mc_sleep) fn(DT_N_S_macros_S_mc_bkctilde) fn(DT_N_S_macros_S_mc_tilde) fn(DT_N_S_macros_S_mc_enne) fn(DT_N_S_macros_S_mac_enne_shift_delete) fn(DT_N_S_macros_S_mc_quesd) fn(DT_N_S_macros_S_mhr) fn(DT_N_S_macros_S_scl_l_to_r) fn(DT_N_S_macros_S_scl_r_to_l) fn(DT_N_S_macros_S_scw_r_to_l) fn(DT_N_S_macros_S_scw_l_to_r) fn(DT_N_S_macros_S_scfw_r_to_l) fn(DT_N_S_macros_S_scfw_l_to_r) fn(DT_N_S_macros_S_bt_disc_0) fn(DT_N_S_macros_S_bt_disc_1) fn(DT_N_S_macros_S_bt_disc_2) fn(DT_N_S_macros_S_bt_disc_3) fn(DT_N_S_macros_S_bt_disc_4) fn(DT_N_S_macros_S_bt_select_disc_0) fn(DT_N_S_macros_S_bt_select_disc_1) fn(DT_N_S_macros_S_bt_select_disc_2) fn(DT_N_S_macros_S_bt_select_disc_3) fn(DT_N_S_macros_S_bt_select_disc_4) fn(DT_N_S_macros_S_bt_select_c) fn(DT_N_S_macros_S_bt_pairing_c) fn(DT_N_S_combos) fn(DT_N_S_combos_S_combo_comb_wf) fn(DT_N_S_combos_S_combo_comb_fp) fn(DT_N_S_combos_S_combo_comb_pb) fn(DT_N_S_combos_S_combo_comb_pb_2) fn(DT_N_S_combos_S_combo_comb_tg_2) fn(DT_N_S_combos_S_combo_comb_tg) fn(DT_N_S_combos_S_combo_comb_cd) fn(DT_N_S_combos_S_combo_comb_xc) fn(DT_N_S_combos_S_combo_comb_gv) fn(DT_N_S_combos_S_combo_comb_td) fn(DT_N_S_combos_S_combo_comb_sc) fn(DT_N_S_combos_S_combo_comb_rx) fn(DT_N_S_combos_S_combo_comb_az) fn(DT_N_S_combos_S_combo_requal) fn(DT_N_S_combos_S_combo_rsemi) fn(DT_N_S_combos_S_combo_semi) fn(DT_N_S_combos_S_combo_colon) fn(DT_N_S_combos_S_combo_fslh) fn(DT_N_S_combos_S_combo_num1) fn(DT_N_S_combos_S_combo_num2) fn(DT_N_S_combos_S_combo_num3) fn(DT_N_S_combos_S_combo_num4) fn(DT_N_S_combos_S_combo_num5) fn(DT_N_S_combos_S_combo_num6) fn(DT_N_S_combos_S_combo_num7) fn(DT_N_S_combos_S_combo_num8) fn(DT_N_S_combos_S_combo_num9) fn(DT_N_S_combos_S_combo_num0) fn(DT_N_S_combos_S_combo_pg_0) fn(DT_N_S_combos_S_combo_pg_1) fn(DT_N_S_combos_S_combo_pg_4) fn(DT_N_S_combos_S_combo_pg_5) fn(DT_N_S_combos_S_comboinv_pg_0_inv) fn(DT_N_S_combos_S_comboinv_pg_1_inv) fn(DT_N_S_combos_S_comboinv_pg_4_inv) fn(DT_N_S_combos_S_comboinv_pg_5_inv) fn(DT_N_S_combos_S_combo_adj_tog_on) fn(DT_N_S_combos_S_combo_adj_tog_off) fn(DT_N_S_combos_S_c_hr_thumb_ar) fn(DT_N_S_combos_S_c_hr_thumb_ars) fn(DT_N_S_combos_S_c_hr_thumb_arst) fn(DT_N_S_combos_S_c_hr_thumb_art) fn(DT_N_S_combos_S_c_hr_thumb_ast) fn(DT_N_S_combos_S_c_hr_thumb_rst) fn(DT_N_S_combos_S_c_hr_thumb_at) fn(DT_N_S_combos_S_c_hr_thumb_st) fn(DT_N_S_combos_S_c_hr_thumb_rs) fn(DT_N_S_combos_S_c_hr_thumb_rt) fn(DT_N_S_combos_S_c_hr_thumb_as) fn(DT_N_S_combos_S_cbks_0) fn(DT_N_S_combos_S_cbkl_2) fn(DT_N_S_combos_S_cbkl_3) fn(DT_N_S_combos_S_cbkl_4) fn(DT_N_S_combos_S_cbks_7) fn(DT_N_S_combos_S_cbks_10) fn(DT_N_S_combos_S_cbknum_11) fn(DT_N_S_combos_S_cbknum_12) fn(DT_N_S_combos_S_cbknum_13) fn(DT_N_S_combos_S_cbknum_14) fn(DT_N_S_combos_S_cbks_16) fn(DT_N_S_combos_S_cbks_17) fn(DT_N_S_combos_S_cbks_18) fn(DT_N_S_combos_S_cbks_19) fn(DT_N_S_combos_S_cbknum_22) fn(DT_N_S_combos_S_cbknum_23) fn(DT_N_S_combos_S_cbknum_24) fn(DT_N_S_combos_S_cbknum_25) fn(DT_N_S_combos_S_cbks_30) fn(DT_N_S_combos_S_ctab_0) fn(DT_N_S_combos_S_ctab_1) fn(DT_N_S_combos_S_ctab_2) fn(DT_N_S_combos_S_ctab_3) fn(DT_N_S_combos_S_ctab_4) fn(DT_N_S_combos_S_ctab_5) fn(DT_N_S_combos_S_ctab_6) fn(DT_N_S_combos_S_ctab_7) fn(DT_N_S_combos_S_ctab_8) fn(DT_N_S_combos_S_ctab_9) fn(DT_N_S_combos_S_ctabd_10) fn(DT_N_S_combos_S_ctabd_11) fn(DT_N_S_combos_S_ctabd_12) fn(DT_N_S_combos_S_ctabd_13) fn(DT_N_S_combos_S_ctabd_14) fn(DT_N_S_combos_S_ctabda_21) fn(DT_N_S_combos_S_ctabda_22) fn(DT_N_S_combos_S_ctabda_23) fn(DT_N_S_combos_S_ctabda_24) fn(DT_N_S_combos_S_ctabda_25) fn(DT_N_S_combos_S_cent_0) fn(DT_N_S_combos_S_cent_1) fn(DT_N_S_combos_S_cent_2) fn(DT_N_S_combos_S_cent_3) fn(DT_N_S_combos_S_cent_4) fn(DT_N_S_combos_S_cent_5) fn(DT_N_S_combos_S_cent_6) fn(DT_N_S_combos_S_cent_7) fn(DT_N_S_combos_S_cent_8) fn(DT_N_S_combos_S_cent_9) fn(DT_N_S_combos_S_cent_10) fn(DT_N_S_combos_S_cent_11) fn(DT_N_S_combos_S_cent_12) fn(DT_N_S_combos_S_cent_13) fn(DT_N_S_combos_S_cent_14) fn(DT_N_S_combos_S_cent_15) fn(DT_N_S_combos_S_cent_16) fn(DT_N_S_combos_S_cent_17) fn(DT_N_S_combos_S_cent_18) fn(DT_N_S_combos_S_cent_19) fn(DT_N_S_combos_S_cent_21) fn(DT_N_S_combos_S_cent_22) fn(DT_N_S_combos_S_cent_23) fn(DT_N_S_combos_S_cent_24) fn(DT_N_S_combos_S_cent_25) fn(DT_N_S_combos_S_cent_26) fn(DT_N_S_combos_S_cent_27) fn(DT_N_S_combos_S_cent_28) fn(DT_N_S_combos_S_cent_29) fn(DT_N_S_combos_S_cent_30) fn(DT_N_S_keymap) fn(DT_N_S_keymap_S_base_layer) fn(DT_N_S_keymap_S_lower_layer) fn(DT_N_S_keymap_S_raise_layer) fn(DT_N_S_keymap_S_layer_homerow) fn(DT_N_S_keymap_S_layer_navoverr) fn(DT_N_S_keymap_S_layer_direcaacc) fn(DT_N_S_keymap_S_layer_func) fn(DT_N_S_keymap_S_adjust_layer) fn(DT_N_S_keymap_S_layer_numbers) fn(DT_N_S_keymap_S_layer_navoverleft)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1) fn(DT_N_S_pin_controller_S_spi2_default) fn(DT_N_S_pin_controller_S_spi2_default_S_group1) fn(DT_N_S_pin_controller_S_spi2_sleep) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1) fn(DT_N_S_pin_controller_S_qspi_default) fn(DT_N_S_pin_controller_S_qspi_default_S_group1) fn(DT_N_S_pin_controller_S_qspi_sleep) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan_0) fn(DT_N_S_behaviors) fn(DT_N_S_behaviors_S_mouse_key_press) fn(DT_N_S_behaviors_S_mouse_move) fn(DT_N_S_behaviors_S_mouse_scroll) fn(DT_N_S_behaviors_S_key_press) fn(DT_N_S_behaviors_S_transparent) fn(DT_N_S_behaviors_S_none) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_sticky_layer) fn(DT_N_S_behaviors_S_momentary_layer) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload) fn(DT_N_S_behaviors_S_rgb_ug) fn(DT_N_S_behaviors_S_bluetooth) fn(DT_N_S_behaviors_S_extpower) fn(DT_N_S_behaviors_S_outputs) fn(DT_N_S_behaviors_S_caps_word) fn(DT_N_S_behaviors_S_macro_tap) fn(DT_N_S_behaviors_S_macro_press) fn(DT_N_S_behaviors_S_macro_release) fn(DT_N_S_behaviors_S_macro_tap_time) fn(DT_N_S_behaviors_S_macro_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_macro_param_1to1) fn(DT_N_S_behaviors_S_macro_param_1to2) fn(DT_N_S_behaviors_S_macro_param_2to1) fn(DT_N_S_behaviors_S_macro_param_2to2) fn(DT_N_S_behaviors_S_studio_unlock) fn(DT_N_S_behaviors_S_bt_0) fn(DT_N_S_behaviors_S_bt_1) fn(DT_N_S_behaviors_S_bt_2) fn(DT_N_S_behaviors_S_bt_3) fn(DT_N_S_behaviors_S_bt_4) fn(DT_N_S_behaviors_S_toggle_layer_on_only) fn(DT_N_S_behaviors_S_toggle_layer_off_only) fn(DT_N_S_behaviors_S_pfind) fn(DT_N_S_behaviors_S_gpfind) fn(DT_N_S_behaviors_S_tdselectcoppinglr) fn(DT_N_S_behaviors_S_lrlmo) fn(DT_N_S_behaviors_S_lrrmo) fn(DT_N_S_behaviors_S_th_mo_kp_hp) fn(DT_N_S_behaviors_S_th_kp_kp_hp) fn(DT_N_S_behaviors_S_space) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm) fn(DT_N_S_behaviors_S_th_kp_sl_hp) fn(DT_N_S_behaviors_S_lm_homerow) fn(DT_N_S_behaviors_S_lm_homerow_short) fn(DT_N_S_behaviors_S_tdselectcoppingrl) fn(DT_N_S_behaviors_S_td_find_s_ht) fn(DT_N_S_behaviors_S_td_find_g_ht) fn(DT_N_S_behaviors_S_nav_esc) fn(DT_N_S_mkp_input_listener) fn(DT_N_S_mmv_input_listener) fn(DT_N_S_msc_input_listener) fn(DT_N_S_macros) fn(DT_N_S_macros_S_mc_sleep) fn(DT_N_S_macros_S_mc_bkctilde) fn(DT_N_S_macros_S_mc_tilde) fn(DT_N_S_macros_S_mc_enne) fn(DT_N_S_macros_S_mac_enne_shift_delete) fn(DT_N_S_macros_S_mc_quesd) fn(DT_N_S_macros_S_mhr) fn(DT_N_S_macros_S_scl_l_to_r) fn(DT_N_S_macros_S_scl_r_to_l) fn(DT_N_S_macros_S_scw_r_to_l) fn(DT_N_S_macros_S_scw_l_to_r) fn(DT_N_S_macros_S_scfw_r_to_l) fn(DT_N_S_macros_S_scfw_l_to_r) fn(DT_N_S_macros_S_bt_disc_0) fn(DT_N_S_macros_S_bt_disc_1) fn(DT_N_S_macros_S_bt_disc_2) fn(DT_N_S_macros_S_bt_disc_3) fn(DT_N_S_macros_S_bt_disc_4) fn(DT_N_S_macros_S_bt_select_disc_0) fn(DT_N_S_macros_S_bt_select_disc_1) fn(DT_N_S_macros_S_bt_select_disc_2) fn(DT_N_S_macros_S_bt_select_disc_3) fn(DT_N_S_macros_S_bt_select_disc_4) fn(DT_N_S_macros_S_bt_select_c) fn(DT_N_S_macros_S_bt_pairing_c) fn(DT_N_S_combos) fn(DT_N_S_combos_S_combo_comb_wf) fn(DT_N_S_combos_S_combo_comb_fp) fn(DT_N_S_combos_S_combo_comb_pb) fn(DT_N_S_combos_S_combo_comb_pb_2) fn(DT_N_S_combos_S_combo_comb_tg_2) fn(DT_N_S_combos_S_combo_comb_tg) fn(DT_N_S_combos_S_combo_comb_cd) fn(DT_N_S_combos_S_combo_comb_xc) fn(DT_N_S_combos_S_combo_comb_gv) fn(DT_N_S_combos_S_combo_comb_td) fn(DT_N_S_combos_S_combo_comb_sc) fn(DT_N_S_combos_S_combo_comb_rx) fn(DT_N_S_combos_S_combo_comb_az) fn(DT_N_S_combos_S_combo_requal) fn(DT_N_S_combos_S_combo_rsemi) fn(DT_N_S_combos_S_combo_semi) fn(DT_N_S_combos_S_combo_colon) fn(DT_N_S_combos_S_combo_fslh) fn(DT_N_S_combos_S_combo_num1) fn(DT_N_S_combos_S_combo_num2) fn(DT_N_S_combos_S_combo_num3) fn(DT_N_S_combos_S_combo_num4) fn(DT_N_S_combos_S_combo_num5) fn(DT_N_S_combos_S_combo_num6) fn(DT_N_S_combos_S_combo_num7) fn(DT_N_S_combos_S_combo_num8) fn(DT_N_S_combos_S_combo_num9) fn(DT_N_S_combos_S_combo_num0) fn(DT_N_S_combos_S_combo_pg_0) fn(DT_N_S_combos_S_combo_pg_1) fn(DT_N_S_combos_S_combo_pg_4) fn(DT_N_S_combos_S_combo_pg_5) fn(DT_N_S_combos_S_comboinv_pg_0_inv) fn(DT_N_S_combos_S_comboinv_pg_1_inv) fn(DT_N_S_combos_S_comboinv_pg_4_inv) fn(DT_N_S_combos_S_comboinv_pg_5_inv) fn(DT_N_S_combos_S_combo_adj_tog_on) fn(DT_N_S_combos_S_combo_adj_tog_off) fn(DT_N_S_combos_S_c_hr_thumb_ar) fn(DT_N_S_combos_S_c_hr_thumb_ars) fn(DT_N_S_combos_S_c_hr_thumb_arst) fn(DT_N_S_combos_S_c_hr_thumb_art) fn(DT_N_S_combos_S_c_hr_thumb_ast) fn(DT_N_S_combos_S_c_hr_thumb_rst) fn(DT_N_S_combos_S_c_hr_thumb_at) fn(DT_N_S_combos_S_c_hr_thumb_st) fn(DT_N_S_combos_S_c_hr_thumb_rs) fn(DT_N_S_combos_S_c_hr_thumb_rt) fn(DT_N_S_combos_S_c_hr_thumb_as) fn(DT_N_S_combos_S_cbks_0) fn(DT_N_S_combos_S_cbkl_2) fn(DT_N_S_combos_S_cbkl_3) fn(DT_N_S_combos_S_cbkl_4) fn(DT_N_S_combos_S_cbks_7) fn(DT_N_S_combos_S_cbks_10) fn(DT_N_S_combos_S_cbknum_11) fn(DT_N_S_combos_S_cbknum_12) fn(DT_N_S_combos_S_cbknum_13) fn(DT_N_S_combos_S_cbknum_14) fn(DT_N_S_combos_S_cbks_16) fn(DT_N_S_combos_S_cbks_17) fn(DT_N_S_combos_S_cbks_18) fn(DT_N_S_combos_S_cbks_19) fn(DT_N_S_combos_S_cbknum_22) fn(DT_N_S_combos_S_cbknum_23) fn(DT_N_S_combos_S_cbknum_24) fn(DT_N_S_combos_S_cbknum_25) fn(DT_N_S_combos_S_cbks_30) fn(DT_N_S_combos_S_ctab_0) fn(DT_N_S_combos_S_ctab_1) fn(DT_N_S_combos_S_ctab_2) fn(DT_N_S_combos_S_ctab_3) fn(DT_N_S_combos_S_ctab_4) fn(DT_N_S_combos_S_ctab_5) fn(DT_N_S_combos_S_ctab_6) fn(DT_N_S_combos_S_ctab_7) fn(DT_N_S_combos_S_ctab_8) fn(DT_N_S_combos_S_ctab_9) fn(DT_N_S_combos_S_ctabd_10) fn(DT_N_S_combos_S_ctabd_11) fn(DT_N_S_combos_S_ctabd_12) fn(DT_N_S_combos_S_ctabd_13) fn(DT_N_S_combos_S_ctabd_14) fn(DT_N_S_combos_S_ctabda_21) fn(DT_N_S_combos_S_ctabda_22) fn(DT_N_S_combos_S_ctabda_23) fn(DT_N_S_combos_S_ctabda_24) fn(DT_N_S_combos_S_ctabda_25) fn(DT_N_S_combos_S_cent_0) fn(DT_N_S_combos_S_cent_1) fn(DT_N_S_combos_S_cent_2) fn(DT_N_S_combos_S_cent_3) fn(DT_N_S_combos_S_cent_4) fn(DT_N_S_combos_S_cent_5) fn(DT_N_S_combos_S_cent_6) fn(DT_N_S_combos_S_cent_7) fn(DT_N_S_combos_S_cent_8) fn(DT_N_S_combos_S_cent_9) fn(DT_N_S_combos_S_cent_10) fn(DT_N_S_combos_S_cent_11) fn(DT_N_S_combos_S_cent_12) fn(DT_N_S_combos_S_cent_13) fn(DT_N_S_combos_S_cent_14) fn(DT_N_S_combos_S_cent_15) fn(DT_N_S_combos_S_cent_16) fn(DT_N_S_combos_S_cent_17) fn(DT_N_S_combos_S_cent_18) fn(DT_N_S_combos_S_cent_19) fn(DT_N_S_combos_S_cent_21) fn(DT_N_S_combos_S_cent_22) fn(DT_N_S_combos_S_cent_23) fn(DT_N_S_combos_S_cent_24) fn(DT_N_S_combos_S_cent_25) fn(DT_N_S_combos_S_cent_26) fn(DT_N_S_combos_S_cent_27) fn(DT_N_S_combos_S_cent_28) fn(DT_N_S_combos_S_cent_29) fn(DT_N_S_combos_S_cent_30) fn(DT_N_S_keymap) fn(DT_N_S_keymap_S_base_layer) fn(DT_N_S_keymap_S_lower_layer) fn(DT_N_S_keymap_S_raise_layer) fn(DT_N_S_keymap_S_layer_homerow) fn(DT_N_S_keymap_S_layer_navoverr) fn(DT_N_S_keymap_S_layer_direcaacc) fn(DT_N_S_keymap_S_layer_func) fn(DT_N_S_keymap_S_adjust_layer) fn(DT_N_S_keymap_S_layer_numbers) fn(DT_N_S_keymap_S_layer_navoverleft)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan_0, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_move, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_scroll, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_none, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_caps_word, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_studio_unlock, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_on_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_off_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_pfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_gpfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppinglr, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrlmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrrmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_mo_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_space, __VA_ARGS__) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_sl_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow_short, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppingrl, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_s_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_g_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_nav_esc, __VA_ARGS__) fn(DT_N_S_mkp_input_listener, __VA_ARGS__) fn(DT_N_S_mmv_input_listener, __VA_ARGS__) fn(DT_N_S_msc_input_listener, __VA_ARGS__) fn(DT_N_S_macros, __VA_ARGS__) fn(DT_N_S_macros_S_mc_sleep, __VA_ARGS__) fn(DT_N_S_macros_S_mc_bkctilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_tilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_enne, __VA_ARGS__) fn(DT_N_S_macros_S_mac_enne_shift_delete, __VA_ARGS__) fn(DT_N_S_macros_S_mc_quesd, __VA_ARGS__) fn(DT_N_S_macros_S_mhr, __VA_ARGS__) fn(DT_N_S_macros_S_scl_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scl_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_c, __VA_ARGS__) fn(DT_N_S_macros_S_bt_pairing_c, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_wf, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_fp, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_cd, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_xc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_gv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_td, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_sc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_rx, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_az, __VA_ARGS__) fn(DT_N_S_combos_S_combo_requal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_rsemi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_semi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_colon, __VA_ARGS__) fn(DT_N_S_combos_S_combo_fslh, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num3, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num5, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num6, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num7, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num8, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num9, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_5, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_0_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_1_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_4_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_5_inv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_off, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ar, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ars, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_arst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_art, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ast, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_at, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_st, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rs, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rt, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_as, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_0, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_2, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_3, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_4, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_7, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_10, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_11, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_12, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_13, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_14, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_16, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_17, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_18, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_19, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_22, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_23, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_24, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_25, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_30, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_0, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_1, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_2, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_3, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_4, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_5, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_6, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_7, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_8, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_9, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_10, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_11, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_12, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_13, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_14, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_21, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_22, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_23, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_24, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_0, __VA_ARGS__) fn(DT_N_S_combos_S_cent_1, __VA_ARGS__) fn(DT_N_S_combos_S_cent_2, __VA_ARGS__) fn(DT_N_S_combos_S_cent_3, __VA_ARGS__) fn(DT_N_S_combos_S_cent_4, __VA_ARGS__) fn(DT_N_S_combos_S_cent_5, __VA_ARGS__) fn(DT_N_S_combos_S_cent_6, __VA_ARGS__) fn(DT_N_S_combos_S_cent_7, __VA_ARGS__) fn(DT_N_S_combos_S_cent_8, __VA_ARGS__) fn(DT_N_S_combos_S_cent_9, __VA_ARGS__) fn(DT_N_S_combos_S_cent_10, __VA_ARGS__) fn(DT_N_S_combos_S_cent_11, __VA_ARGS__) fn(DT_N_S_combos_S_cent_12, __VA_ARGS__) fn(DT_N_S_combos_S_cent_13, __VA_ARGS__) fn(DT_N_S_combos_S_cent_14, __VA_ARGS__) fn(DT_N_S_combos_S_cent_15, __VA_ARGS__) fn(DT_N_S_combos_S_cent_16, __VA_ARGS__) fn(DT_N_S_combos_S_cent_17, __VA_ARGS__) fn(DT_N_S_combos_S_cent_18, __VA_ARGS__) fn(DT_N_S_combos_S_cent_19, __VA_ARGS__) fn(DT_N_S_combos_S_cent_21, __VA_ARGS__) fn(DT_N_S_combos_S_cent_22, __VA_ARGS__) fn(DT_N_S_combos_S_cent_23, __VA_ARGS__) fn(DT_N_S_combos_S_cent_24, __VA_ARGS__) fn(DT_N_S_combos_S_cent_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_26, __VA_ARGS__) fn(DT_N_S_combos_S_cent_27, __VA_ARGS__) fn(DT_N_S_combos_S_cent_28, __VA_ARGS__) fn(DT_N_S_combos_S_cent_29, __VA_ARGS__) fn(DT_N_S_combos_S_cent_30, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__) fn(DT_N_S_keymap_S_base_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_lower_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_raise_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_homerow, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverr, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_direcaacc, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_func, __VA_ARGS__) fn(DT_N_S_keymap_S_adjust_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_numbers, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverleft, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi2_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_qspi_sleep_S_group2, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan_0, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_move, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_scroll, __VA_ARGS__) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__) fn(DT_N_S_behaviors_S_none, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_caps_word, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__) fn(DT_N_S_behaviors_S_studio_unlock, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_on_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_off_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_pfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_gpfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppinglr, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrlmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrrmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_mo_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_space, __VA_ARGS__) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_sl_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow_short, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppingrl, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_s_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_g_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_nav_esc, __VA_ARGS__) fn(DT_N_S_mkp_input_listener, __VA_ARGS__) fn(DT_N_S_mmv_input_listener, __VA_ARGS__) fn(DT_N_S_msc_input_listener, __VA_ARGS__) fn(DT_N_S_macros, __VA_ARGS__) fn(DT_N_S_macros_S_mc_sleep, __VA_ARGS__) fn(DT_N_S_macros_S_mc_bkctilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_tilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_enne, __VA_ARGS__) fn(DT_N_S_macros_S_mac_enne_shift_delete, __VA_ARGS__) fn(DT_N_S_macros_S_mc_quesd, __VA_ARGS__) fn(DT_N_S_macros_S_mhr, __VA_ARGS__) fn(DT_N_S_macros_S_scl_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scl_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_c, __VA_ARGS__) fn(DT_N_S_macros_S_bt_pairing_c, __VA_ARGS__) fn(DT_N_S_combos, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_wf, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_fp, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_pb_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg_2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_tg, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_cd, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_xc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_gv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_td, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_sc, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_rx, __VA_ARGS__) fn(DT_N_S_combos_S_combo_comb_az, __VA_ARGS__) fn(DT_N_S_combos_S_combo_requal, __VA_ARGS__) fn(DT_N_S_combos_S_combo_rsemi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_semi, __VA_ARGS__) fn(DT_N_S_combos_S_combo_colon, __VA_ARGS__) fn(DT_N_S_combos_S_combo_fslh, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num2, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num3, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num5, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num6, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num7, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num8, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num9, __VA_ARGS__) fn(DT_N_S_combos_S_combo_num0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_0, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_1, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_4, __VA_ARGS__) fn(DT_N_S_combos_S_combo_pg_5, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_0_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_1_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_4_inv, __VA_ARGS__) fn(DT_N_S_combos_S_comboinv_pg_5_inv, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_on, __VA_ARGS__) fn(DT_N_S_combos_S_combo_adj_tog_off, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ar, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ars, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_arst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_art, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_ast, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rst, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_at, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_st, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rs, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_rt, __VA_ARGS__) fn(DT_N_S_combos_S_c_hr_thumb_as, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_0, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_2, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_3, __VA_ARGS__) fn(DT_N_S_combos_S_cbkl_4, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_7, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_10, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_11, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_12, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_13, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_14, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_16, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_17, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_18, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_19, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_22, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_23, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_24, __VA_ARGS__) fn(DT_N_S_combos_S_cbknum_25, __VA_ARGS__) fn(DT_N_S_combos_S_cbks_30, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_0, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_1, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_2, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_3, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_4, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_5, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_6, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_7, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_8, __VA_ARGS__) fn(DT_N_S_combos_S_ctab_9, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_10, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_11, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_12, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_13, __VA_ARGS__) fn(DT_N_S_combos_S_ctabd_14, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_21, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_22, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_23, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_24, __VA_ARGS__) fn(DT_N_S_combos_S_ctabda_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_0, __VA_ARGS__) fn(DT_N_S_combos_S_cent_1, __VA_ARGS__) fn(DT_N_S_combos_S_cent_2, __VA_ARGS__) fn(DT_N_S_combos_S_cent_3, __VA_ARGS__) fn(DT_N_S_combos_S_cent_4, __VA_ARGS__) fn(DT_N_S_combos_S_cent_5, __VA_ARGS__) fn(DT_N_S_combos_S_cent_6, __VA_ARGS__) fn(DT_N_S_combos_S_cent_7, __VA_ARGS__) fn(DT_N_S_combos_S_cent_8, __VA_ARGS__) fn(DT_N_S_combos_S_cent_9, __VA_ARGS__) fn(DT_N_S_combos_S_cent_10, __VA_ARGS__) fn(DT_N_S_combos_S_cent_11, __VA_ARGS__) fn(DT_N_S_combos_S_cent_12, __VA_ARGS__) fn(DT_N_S_combos_S_cent_13, __VA_ARGS__) fn(DT_N_S_combos_S_cent_14, __VA_ARGS__) fn(DT_N_S_combos_S_cent_15, __VA_ARGS__) fn(DT_N_S_combos_S_cent_16, __VA_ARGS__) fn(DT_N_S_combos_S_cent_17, __VA_ARGS__) fn(DT_N_S_combos_S_cent_18, __VA_ARGS__) fn(DT_N_S_combos_S_cent_19, __VA_ARGS__) fn(DT_N_S_combos_S_cent_21, __VA_ARGS__) fn(DT_N_S_combos_S_cent_22, __VA_ARGS__) fn(DT_N_S_combos_S_cent_23, __VA_ARGS__) fn(DT_N_S_combos_S_cent_24, __VA_ARGS__) fn(DT_N_S_combos_S_cent_25, __VA_ARGS__) fn(DT_N_S_combos_S_cent_26, __VA_ARGS__) fn(DT_N_S_combos_S_cent_27, __VA_ARGS__) fn(DT_N_S_combos_S_cent_28, __VA_ARGS__) fn(DT_N_S_combos_S_cent_29, __VA_ARGS__) fn(DT_N_S_combos_S_cent_30, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__) fn(DT_N_S_keymap_S_base_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_lower_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_raise_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_homerow, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverr, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_direcaacc, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_func, __VA_ARGS__) fn(DT_N_S_keymap_S_adjust_layer, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_numbers, __VA_ARGS__) fn(DT_N_S_keymap_S_layer_navoverleft, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_softdevice DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_softdevice_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_code_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_27000
#define DT_COMPAT_fixed_partitions_LABEL_code_partition_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_adafruit_boot DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000
#define DT_COMPAT_fixed_partitions_LABEL_adafruit_boot_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_seeed_xiao_ble 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840_qiaa 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ficr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uicr 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_clock 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_power 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpregret 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_radio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_nfct 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpiote 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_saadc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_temp 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rng 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ecb 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ccm 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_wdt 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_egu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_swi 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_acl 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ppi 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_mwu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_usbd 1
#define DT_COMPAT_HAS_OKAY_zephyr_cdc_acm_uart 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_qspi 1
#define DT_COMPAT_HAS_OKAY_nordic_qspi_nor 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pinctrl 1
#define DT_COMPAT_HAS_OKAY_zephyr_bt_hci_entropy 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_itm 1
#define DT_COMPAT_HAS_OKAY_seeed_xiao_gpio 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_zmk_battery_voltage_divider 1
#define DT_COMPAT_HAS_OKAY_zmk_matrix_transform 1
#define DT_COMPAT_HAS_OKAY_zmk_kscan_gpio_matrix 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_mouse_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_input_two_axis 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_transparent 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_none 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_sticky_key 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_momentary_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_reset 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_rgb_underglow 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_bluetooth 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_ext_power 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_outputs 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_caps_word 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_tap 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_press 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_release 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_tap_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_wait_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_pause_for_release 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_1to1 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_1to2 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_2to1 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_param_2to2 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_studio_unlock 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_tap_dance 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_toggle_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_macro 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_hold_tap 1
#define DT_COMPAT_HAS_OKAY_zmk_input_listener 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_macro_one_param 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_macro_two_param 1
#define DT_COMPAT_HAS_OKAY_zmk_combos 1
#define DT_COMPAT_HAS_OKAY_zmk_keymap 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_seeed_xiao_ble_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_qiaa_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ficr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uicr_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_clock_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_power_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpregret_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_radio_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_nfct_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpiote_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_saadc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_temp_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_rng_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ecb_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ccm_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_wdt_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_egu_NUM_OKAY 6
#define DT_N_INST_nordic_nrf_swi_NUM_OKAY 6
#define DT_N_INST_nordic_nrf_acl_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ppi_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_mwu_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_usbd_NUM_OKAY 1
#define DT_N_INST_zephyr_cdc_acm_uart_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_qspi_NUM_OKAY 1
#define DT_N_INST_nordic_qspi_nor_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_gpio_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_pinctrl_NUM_OKAY 1
#define DT_N_INST_zephyr_bt_hci_entropy_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_itm_NUM_OKAY 1
#define DT_N_INST_seeed_xiao_gpio_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_zmk_battery_voltage_divider_NUM_OKAY 1
#define DT_N_INST_zmk_matrix_transform_NUM_OKAY 1
#define DT_N_INST_zmk_kscan_gpio_matrix_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_mouse_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_input_two_axis_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_transparent_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_none_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_sticky_key_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_momentary_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_reset_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_rgb_underglow_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_bluetooth_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_ext_power_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_outputs_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_caps_word_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_tap_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_press_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_release_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_tap_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_wait_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_pause_for_release_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_1to1_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_1to2_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_2to1_NUM_OKAY 1
#define DT_N_INST_zmk_macro_param_2to2_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_studio_unlock_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_tap_dance_NUM_OKAY 6
#define DT_N_INST_zmk_behavior_toggle_layer_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_macro_NUM_OKAY 20
#define DT_N_INST_zmk_behavior_hold_tap_NUM_OKAY 13
#define DT_N_INST_zmk_input_listener_NUM_OKAY 3
#define DT_N_INST_zmk_behavior_macro_one_param_NUM_OKAY 6
#define DT_N_INST_zmk_behavior_macro_two_param_NUM_OKAY 1
#define DT_N_INST_zmk_combos_NUM_OKAY 1
#define DT_N_INST_zmk_keymap_NUM_OKAY 1
#define DT_FOREACH_OKAY_seeed_xiao_ble(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_seeed_xiao_ble(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_seeed_xiao_ble(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_seeed_xiao_ble(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840_qiaa(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840_qiaa(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ficr(fn) fn(DT_N_S_soc_S_ficr_10000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ficr(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ficr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ficr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uicr(fn) fn(DT_N_S_soc_S_uicr_10001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uicr(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uicr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uicr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_clock(fn) fn(DT_N_S_soc_S_clock_40000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_clock(fn, ...) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_power(fn) fn(DT_N_S_soc_S_power_40000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_power(fn, ...) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpregret(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpregret(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpregret(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpregret(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_radio(fn) fn(DT_N_S_soc_S_radio_40001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_radio(fn, ...) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_radio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_radio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_nfct(fn) fn(DT_N_S_soc_S_nfct_40005000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_nfct(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_nfct(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_nfct(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpiote(fn) fn(DT_N_S_soc_S_gpiote_40006000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpiote(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpiote(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpiote(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_saadc(fn) fn(DT_N_S_soc_S_adc_40007000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_saadc(fn, ...) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_saadc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_saadc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_temp(fn) fn(DT_N_S_soc_S_temp_4000c000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_temp(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_temp(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_temp(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_rng(fn) fn(DT_N_S_soc_S_random_4000d000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_rng(fn, ...) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ecb(fn) fn(DT_N_S_soc_S_ecb_4000e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ecb(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ecb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ecb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ccm(fn) fn(DT_N_S_soc_S_ccm_4000f000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ccm(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ccm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_wdt(fn) fn(DT_N_S_soc_S_watchdog_40010000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_wdt(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_wdt(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_wdt(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_egu(fn) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_egu(fn, ...) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_egu(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_egu(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_swi(fn) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_swi(fn, ...) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_swi(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_swi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_acl(fn) fn(DT_N_S_soc_S_acl_4001e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_acl(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_acl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_acl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_4001e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ppi(fn) fn(DT_N_S_soc_S_ppi_4001f000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ppi(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ppi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ppi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_mwu(fn) fn(DT_N_S_soc_S_mwu_40020000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_mwu(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_mwu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_mwu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_usbd(fn) fn(DT_N_S_soc_S_usbd_40027000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_usbd(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_cdc_acm_uart(fn) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart)
#define DT_FOREACH_OKAY_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_snippet_zmk_usb_logging_uart, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_cdc_acm_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_qspi(fn) fn(DT_N_S_soc_S_qspi_40029000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_qspi(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_qspi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_qspi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_qspi_nor(fn) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0)
#define DT_FOREACH_OKAY_VARGS_nordic_qspi_nor(fn, ...) fn(DT_N_S_soc_S_qspi_40029000_S_gd25q16_0, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000_S_p25q16h_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_qspi_nor(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_qspi_nor(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpio(fn) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_bt_hci_entropy(fn) fn(DT_N_S_entropy_bt_hci)
#define DT_FOREACH_OKAY_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_bt_hci_entropy(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_itm(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_itm(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_itm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_itm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_seeed_xiao_gpio(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_seeed_xiao_gpio(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_seeed_xiao_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_seeed_xiao_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_battery_voltage_divider(fn) fn(DT_N_S_vbatt)
#define DT_FOREACH_OKAY_VARGS_zmk_battery_voltage_divider(fn, ...) fn(DT_N_S_vbatt, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_battery_voltage_divider(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_battery_voltage_divider(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_matrix_transform(fn) fn(DT_N_S_keymap_transform_0)
#define DT_FOREACH_OKAY_VARGS_zmk_matrix_transform(fn, ...) fn(DT_N_S_keymap_transform_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_matrix_transform(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_matrix_transform(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_kscan_gpio_matrix(fn) fn(DT_N_S_kscan_0)
#define DT_FOREACH_OKAY_VARGS_zmk_kscan_gpio_matrix(fn, ...) fn(DT_N_S_kscan_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_kscan_gpio_matrix(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_kscan_gpio_matrix(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_mouse_key_press(fn) fn(DT_N_S_behaviors_S_mouse_key_press)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_mouse_key_press(fn, ...) fn(DT_N_S_behaviors_S_mouse_key_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_mouse_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_mouse_key_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_input_two_axis(fn) fn(DT_N_S_behaviors_S_mouse_move) fn(DT_N_S_behaviors_S_mouse_scroll)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_input_two_axis(fn, ...) fn(DT_N_S_behaviors_S_mouse_move, __VA_ARGS__) fn(DT_N_S_behaviors_S_mouse_scroll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_input_two_axis(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_input_two_axis(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_key_press(fn) fn(DT_N_S_behaviors_S_key_press)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_key_press(fn, ...) fn(DT_N_S_behaviors_S_key_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_key_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_transparent(fn) fn(DT_N_S_behaviors_S_transparent)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_transparent(fn, ...) fn(DT_N_S_behaviors_S_transparent, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_transparent(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_transparent(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_none(fn) fn(DT_N_S_behaviors_S_none)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_none(fn, ...) fn(DT_N_S_behaviors_S_none, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_none(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_none(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_sticky_key(fn) fn(DT_N_S_behaviors_S_sticky_key) fn(DT_N_S_behaviors_S_sticky_layer)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_sticky_key(fn, ...) fn(DT_N_S_behaviors_S_sticky_key, __VA_ARGS__) fn(DT_N_S_behaviors_S_sticky_layer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_sticky_key(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_sticky_key(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_momentary_layer(fn) fn(DT_N_S_behaviors_S_momentary_layer)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_momentary_layer(fn, ...) fn(DT_N_S_behaviors_S_momentary_layer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_momentary_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_momentary_layer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_reset(fn) fn(DT_N_S_behaviors_S_sysreset) fn(DT_N_S_behaviors_S_bootload)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_reset(fn, ...) fn(DT_N_S_behaviors_S_sysreset, __VA_ARGS__) fn(DT_N_S_behaviors_S_bootload, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_reset(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_reset(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_rgb_underglow(fn) fn(DT_N_S_behaviors_S_rgb_ug)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_rgb_underglow(fn, ...) fn(DT_N_S_behaviors_S_rgb_ug, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_rgb_underglow(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_rgb_underglow(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_bluetooth(fn) fn(DT_N_S_behaviors_S_bluetooth)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_bluetooth(fn, ...) fn(DT_N_S_behaviors_S_bluetooth, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_bluetooth(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_bluetooth(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_ext_power(fn) fn(DT_N_S_behaviors_S_extpower)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_ext_power(fn, ...) fn(DT_N_S_behaviors_S_extpower, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_ext_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_ext_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_outputs(fn) fn(DT_N_S_behaviors_S_outputs)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_outputs(fn, ...) fn(DT_N_S_behaviors_S_outputs, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_outputs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_outputs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_caps_word(fn) fn(DT_N_S_behaviors_S_caps_word)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_caps_word(fn, ...) fn(DT_N_S_behaviors_S_caps_word, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_caps_word(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_caps_word(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_tap(fn) fn(DT_N_S_behaviors_S_macro_tap)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_tap(fn, ...) fn(DT_N_S_behaviors_S_macro_tap, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_tap(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_tap(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_press(fn) fn(DT_N_S_behaviors_S_macro_press)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_press(fn, ...) fn(DT_N_S_behaviors_S_macro_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_release(fn) fn(DT_N_S_behaviors_S_macro_release)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_release(fn, ...) fn(DT_N_S_behaviors_S_macro_release, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_release(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_tap_time(fn) fn(DT_N_S_behaviors_S_macro_tap_time)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_tap_time(fn, ...) fn(DT_N_S_behaviors_S_macro_tap_time, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_tap_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_tap_time(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_wait_time(fn) fn(DT_N_S_behaviors_S_macro_wait_time)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_wait_time(fn, ...) fn(DT_N_S_behaviors_S_macro_wait_time, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_wait_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_wait_time(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_pause_for_release(fn) fn(DT_N_S_behaviors_S_macro_pause_for_release)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_pause_for_release(fn, ...) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_pause_for_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_pause_for_release(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_1to1(fn) fn(DT_N_S_behaviors_S_macro_param_1to1)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_1to1(fn, ...) fn(DT_N_S_behaviors_S_macro_param_1to1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_1to1(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_1to1(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_1to2(fn) fn(DT_N_S_behaviors_S_macro_param_1to2)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_1to2(fn, ...) fn(DT_N_S_behaviors_S_macro_param_1to2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_1to2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_1to2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_2to1(fn) fn(DT_N_S_behaviors_S_macro_param_2to1)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_2to1(fn, ...) fn(DT_N_S_behaviors_S_macro_param_2to1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_2to1(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_2to1(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_param_2to2(fn) fn(DT_N_S_behaviors_S_macro_param_2to2)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_param_2to2(fn, ...) fn(DT_N_S_behaviors_S_macro_param_2to2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_param_2to2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_param_2to2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_studio_unlock(fn) fn(DT_N_S_behaviors_S_studio_unlock)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_studio_unlock(fn, ...) fn(DT_N_S_behaviors_S_studio_unlock, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_studio_unlock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_studio_unlock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_tap_dance(fn) fn(DT_N_S_behaviors_S_bt_0) fn(DT_N_S_behaviors_S_bt_1) fn(DT_N_S_behaviors_S_bt_2) fn(DT_N_S_behaviors_S_bt_3) fn(DT_N_S_behaviors_S_bt_4) fn(DT_N_S_behaviors_S_nav_esc)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_tap_dance(fn, ...) fn(DT_N_S_behaviors_S_bt_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_bt_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_nav_esc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_tap_dance(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_tap_dance(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_toggle_layer(fn) fn(DT_N_S_behaviors_S_toggle_layer_on_only) fn(DT_N_S_behaviors_S_toggle_layer_off_only)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_toggle_layer(fn, ...) fn(DT_N_S_behaviors_S_toggle_layer_on_only, __VA_ARGS__) fn(DT_N_S_behaviors_S_toggle_layer_off_only, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_toggle_layer(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_toggle_layer(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_macro(fn) fn(DT_N_S_behaviors_S_pfind) fn(DT_N_S_behaviors_S_gpfind) fn(DT_N_S_macros_S_mc_sleep) fn(DT_N_S_macros_S_mc_quesd) fn(DT_N_S_macros_S_scl_l_to_r) fn(DT_N_S_macros_S_scl_r_to_l) fn(DT_N_S_macros_S_scw_r_to_l) fn(DT_N_S_macros_S_scw_l_to_r) fn(DT_N_S_macros_S_scfw_r_to_l) fn(DT_N_S_macros_S_scfw_l_to_r) fn(DT_N_S_macros_S_bt_disc_0) fn(DT_N_S_macros_S_bt_disc_1) fn(DT_N_S_macros_S_bt_disc_2) fn(DT_N_S_macros_S_bt_disc_3) fn(DT_N_S_macros_S_bt_disc_4) fn(DT_N_S_macros_S_bt_select_disc_0) fn(DT_N_S_macros_S_bt_select_disc_1) fn(DT_N_S_macros_S_bt_select_disc_2) fn(DT_N_S_macros_S_bt_select_disc_3) fn(DT_N_S_macros_S_bt_select_disc_4)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_macro(fn, ...) fn(DT_N_S_behaviors_S_pfind, __VA_ARGS__) fn(DT_N_S_behaviors_S_gpfind, __VA_ARGS__) fn(DT_N_S_macros_S_mc_sleep, __VA_ARGS__) fn(DT_N_S_macros_S_mc_quesd, __VA_ARGS__) fn(DT_N_S_macros_S_scl_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scl_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_r_to_l, __VA_ARGS__) fn(DT_N_S_macros_S_scfw_l_to_r, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_disc_4, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_0, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_1, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_2, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_3, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_disc_4, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_macro(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10) fn(11) fn(12) fn(13) fn(14) fn(15) fn(16) fn(17) fn(18) fn(19)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_macro(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__) fn(11, __VA_ARGS__) fn(12, __VA_ARGS__) fn(13, __VA_ARGS__) fn(14, __VA_ARGS__) fn(15, __VA_ARGS__) fn(16, __VA_ARGS__) fn(17, __VA_ARGS__) fn(18, __VA_ARGS__) fn(19, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_hold_tap(fn) fn(DT_N_S_behaviors_S_tdselectcoppinglr) fn(DT_N_S_behaviors_S_lrlmo) fn(DT_N_S_behaviors_S_lrrmo) fn(DT_N_S_behaviors_S_th_mo_kp_hp) fn(DT_N_S_behaviors_S_th_kp_kp_hp) fn(DT_N_S_behaviors_S_space) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm) fn(DT_N_S_behaviors_S_th_kp_sl_hp) fn(DT_N_S_behaviors_S_lm_homerow) fn(DT_N_S_behaviors_S_lm_homerow_short) fn(DT_N_S_behaviors_S_tdselectcoppingrl) fn(DT_N_S_behaviors_S_td_find_s_ht) fn(DT_N_S_behaviors_S_td_find_g_ht)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_hold_tap(fn, ...) fn(DT_N_S_behaviors_S_tdselectcoppinglr, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrlmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_lrrmo, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_mo_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_kp_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_space, __VA_ARGS__) fn(DT_N_S_behaviors_S_thumb_layer_access_spacebarlm, __VA_ARGS__) fn(DT_N_S_behaviors_S_th_kp_sl_hp, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow, __VA_ARGS__) fn(DT_N_S_behaviors_S_lm_homerow_short, __VA_ARGS__) fn(DT_N_S_behaviors_S_tdselectcoppingrl, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_s_ht, __VA_ARGS__) fn(DT_N_S_behaviors_S_td_find_g_ht, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_hold_tap(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10) fn(11) fn(12)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_hold_tap(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__) fn(11, __VA_ARGS__) fn(12, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_input_listener(fn) fn(DT_N_S_mkp_input_listener) fn(DT_N_S_mmv_input_listener) fn(DT_N_S_msc_input_listener)
#define DT_FOREACH_OKAY_VARGS_zmk_input_listener(fn, ...) fn(DT_N_S_mkp_input_listener, __VA_ARGS__) fn(DT_N_S_mmv_input_listener, __VA_ARGS__) fn(DT_N_S_msc_input_listener, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_input_listener(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_input_listener(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_macro_one_param(fn) fn(DT_N_S_macros_S_mc_bkctilde) fn(DT_N_S_macros_S_mc_enne) fn(DT_N_S_macros_S_mac_enne_shift_delete) fn(DT_N_S_macros_S_mhr) fn(DT_N_S_macros_S_bt_select_c) fn(DT_N_S_macros_S_bt_pairing_c)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_macro_one_param(fn, ...) fn(DT_N_S_macros_S_mc_bkctilde, __VA_ARGS__) fn(DT_N_S_macros_S_mc_enne, __VA_ARGS__) fn(DT_N_S_macros_S_mac_enne_shift_delete, __VA_ARGS__) fn(DT_N_S_macros_S_mhr, __VA_ARGS__) fn(DT_N_S_macros_S_bt_select_c, __VA_ARGS__) fn(DT_N_S_macros_S_bt_pairing_c, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_macro_one_param(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_macro_one_param(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_macro_two_param(fn) fn(DT_N_S_macros_S_mc_tilde)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_macro_two_param(fn, ...) fn(DT_N_S_macros_S_mc_tilde, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_macro_two_param(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_macro_two_param(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_combos(fn) fn(DT_N_S_combos)
#define DT_FOREACH_OKAY_VARGS_zmk_combos(fn, ...) fn(DT_N_S_combos, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_combos(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_combos(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_keymap(fn) fn(DT_N_S_keymap)
#define DT_FOREACH_OKAY_VARGS_zmk_keymap(fn, ...) fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_keymap(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_keymap(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_zephyr_cdc_acm_uart_BUS_usb 1
#define DT_COMPAT_nordic_qspi_nor_BUS_qspi 1
