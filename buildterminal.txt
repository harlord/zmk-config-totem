/////////////////////
FOR ZMK ONLY

brew install pipx

pipx ensurepath

pipx install west

cd ~
wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.3/zephyr-sdk-0.16.3_macos-aarch64.tar.xz
wget -O - https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.3/sha256.sum | shasum --check --ignore-missing


tar xvf zephyr-sdk-0.16.3_macos-aarch64.tar.xz


west twister -T app/tests --inline-logs --jobs 4

pip install --user west

python3 -m pip install --user west

python3 -m venv .venv

source .venv/bin/activate

pip install --break-system-packages west


for keyball39 
brew install protobuf 
pip install protobuf grpcio-tools   
//////////////
FOR ZMK Configs

west can’t find zmk/app because the ZMK sources haven’t been fetched yet.
Your west.yml lives in config/, and it tells West to clone ZMK (and Zephyr) into a folder called zmk/ the first time you run west update.
Do the one-time workspace setup first (from the root of zmk-config-totem):

#Create a new virtual environment:
python3 -m venv ~/zephyrproject/.venv

#Activate the virtual environment:
source ~/zephyrproject/.venv/bin/activate

#Once activated your shell will be prefixed with (.venv). The virtual environment can be #deactivated at any time by running deactivate.
#Note
#Remember to activate the virtual environment every time you start working.

#Install west:
pip install west

#Get the Zephyr source code:
west init ~/zephyrproject
cd ~/zephyrproject
west update

#Export a Zephyr CMake package. This allows CMake to automatically load boilerplate code required for building Zephyr applications.
west zephyr-export

#Zephyr’s scripts/requirements.txt file declares additional Python dependencies. Install them #with pip.
pip install -r ~/zephyrproject/zephyr/scripts/requirements.txt






cd /Users/haroldhernandez/totem/zmk-config-totem        # workspace root
west build -s zmk/app -b seeeduino_xiao_ble \
          -- -DZMK_CONFIG="${PWD}/config" \
          -DSHIELD=totem_right -B build/right
////////////////////////////////////////////////////////
cd /Users/haroldhernandez/totem/zmk-config-totem 

source ~/zephyrproject/.venv/bin/activate

# 0) Ensure the west executable you just installed is on PATH
west --version           # should print a version, not “not found”

# 1) Create the workspace (.west/), telling West that the manifest is in config/
west init -l config

# 2) Fetch Zephyr, ZMK, HALs, etc.
west update              # this creates zephyr/, modules/, zmk/, …

# 3) Export Zephyr’s CMake package and add the Zephyr west extensions
west zephyr-export   

west build -s zmk/app -b seeeduino_xiao_ble \
          -- -DZMK_CONFIG="${PWD}/config" \
          -DSHIELD=totem_right -B build/right





# from the workspace root (the one that has .west/)

west build -p \
  -s zmk/app \
  -b seeeduino_xiao_ble \
  -d build/right \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DSHIELD=totem_right







///////////////////////////////////////////////////////////////////////////////////


A) USB-CDC (no debug-probe required)
1. Build a firmware that contains the USB logging backend.
Easiest: add the built-in snippet when you build:


west build -p \
  -s zmk/app \
  -b seeeduino_xiao_ble \
  -d build/right \
  -S zmk-usb-logging \
  -DOVERLAY_CONFIG=debug.conf \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DSHIELD=totem_right

west build -p \
  -s zmk/app \
  -b seeeduino_xiao_ble \
  -d build/left \
  -S zmk-usb-logging \
  -DOVERLAY_CONFIG=debug.conf \
  -- \
  -DZMK_CONFIG="${PWD}/config" \
  -DSHIELD=totem_left

(EXECUTED FROM (.venv) ➜  zmk-config-totem git:(drag-mod-layers) ✗ )


#Last working

   west build -p \
     -s zmk/app -b seeeduino_xiao_ble -d build/left \
     -S zmk-usb-logging \
     -- \
     -DZMK_CONFIG="${PWD}/config" \
     -DOVERLAY_CONFIG=${PWD}/config/debug.conf \
     -DSHIELD=totem_left


   west build -p \
     -s zmk/app -b seeeduino_xiao_ble -d build/right \
     -S zmk-usb-logging \
     -- \
     -DZMK_CONFIG="${PWD}/config" \
     -DOVERLAY_CONFIG=${PWD}/config/debug.conf \
     -DSHIELD=totem_right


#(EXECUTED FROM root, (without .venv)  zmk-config-totem git:(drag-mod-layers) ✗ )

#To check the numbers:

   ls /dev/tty.usbmodem*   # data-terminal devices
   ls /dev/cu.usbmodem*    # call-up devices (identical, no HW flow-ctrl)

#and run to actuvate debug 
   sudo tio /dev/tty.usbmodem2101


