//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
// git add . && git commit -m 'adjust time thumbhold' && git push

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

/* On demand includes */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER  1
#define RAISE  2
#define HOMEROW 3
#define NAVOVERR 4
#define TILDEL 5
#define DIRECTACC 6
#define FUNC 7
#define ADJ  8
#define TILDESHIFTA 9
#define TILDESHIFTE 10
#define TILDESHIFTI 11
#define TILDESHIFTO 12
#define TILDESHIFTU 13
#define TILDESHIFTENNE 14
#define TILDESHIFTEXC 15
#define TILDESHIFTQUES 16
#define TILDESHIFTR 17
#define TILDESHIFTS 18
#define TILDESHIFTT 19
#define DACCTHUMB 20
#define NUMBERS 21
#define DRAGTHUMB 22

//RAISE
//NAVOVERR
//DRAGCOMMAND
//NUMBERS
//TILDES + DIRECTACC

//cmd+TAB<>DRAGCOMMAND  //shift+BKSPACE<>TILDES(with some DIRECTACC)          //ctrl+SPC<>NUMBERS(require-prior-idle-ms)  //alt+ENT<>NAVOVERR(with top numbers)
//missing top funcs
//cmd+TAB<>RAISE  //shift+BKSPACE<>TILDES(with some DIRECTACC)          //ctrl+SPC<>NUMBERS(require-prior-idle-ms or NONE or FUNC)  //alt+ENT<>NAVOVERR(with nav and top numbers, maybe LOWER with nav)
//
//cmd+TAB<>RAISE  //shift+BKSPACE<>TILDES(with top DRAGTHUMB low Home Row Mod)          //ctrl+SPC<>NUMBERS(require-prior-idle-ms or NONE or FUNC)  //NAVOVERR+ENT<>alt
//
//cmd+TAB<>DRAGTHUMB(DIRECTACC only when DRAGTHUMB not activated)   //shift+BKSPACE<>RAISE         //ctrl+SPC<>TILDES   //NAVOVERR+ENT<>alt
//BKSPACE+SPC<>FUNC
//BKSPACE+ENT<>NUMBERS
//TAB+ENT<>Media Adj
//
//shift+ctrl<>FUNC
//shift+alt<>NUMBERS
//cmd+shift+TAB<>DRAGCOMMAND

//use kd to DRAGTHUMB
// - with combo from 

/*
al presionar up, se queda esperando por SPACE mo DRAGTHUMB, 
    si se unde up+SPACE, se presiona kp UP y se activa NAVOVERR
        bh con triggers solo para 
    si se deja presionando up+SPACE, se mantiene presionado kp UP y se deja activado NAVOVERR
    si se libera up y se deja presionado SPACE, se release kp UP y se queda activado NAVOVERR
        si sepresiona cualquier otra NAVOVERR, se acciona el usual key definido en ese layer
    si de libera up y SPACE, se release kp UP y se suelta el mo NAVOVERR para que se quede activo BASE
*/

#define THUMB_HOLDING_TIME 220 // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds) a thumb key to activate a layer.  Shorter holds are treated as taps.
#define THUMB_HOLDING_TIME_SHORT 150
#define THUMB_REPEAT_DECAY_BASE 0 // "tap then hold" for key auto-repeat
#define THUMB_REPEAT_DECAY 190 // "tap then hold" for key auto-repeat
#define SPACE_HOLDING_TYPE "balanced"   

#include "combos/combos.dtsi"
#include "combos/combos_dragmod.dtsi"
#include "behaviors/behaviors.dtsi"
#include "macros/macros.dtsi"

/ {

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
                             &mc_ts TILDESHIFTEXC Q  &kd W  &kd F                        &kd P                          &kd B                                &kd J                 &kd L                    &mc_ts TILDESHIFTU U           &kd Y                 &kd SQT
                             &mc_ts TILDESHIFTA A    &kd R  &kd S                        &kd T                          &kd G                                &kd M                 &mc_ts TILDESHIFTENNE N  &mc_ts TILDESHIFTE E           &mc_ts TILDESHIFTI I  &mc_ts TILDESHIFTO O
&lm_homerow_short LALT LALT  &kd Z                   &kd X  &kd C                        &kd D                          &kd V                                &kd K                 &kd H                    &kd COMMA                      &kd DOT               &kd SLASH             &lm_homerow LGUI LGUI
                                                            &base_th_mo_kp_hp RAISE TAB  &lm_homerow_short LGUI DELETE  &lm_homerow_short LSHFT BACKSPACE    &spacelm LCTRL SPACE  &td_nav_esc              &lm_homerow_short LALT ENTER
            >;
        };

        lower_layer {
            label = "LOWER";
            bindings = <
                  &kp N1     &kp N2     &kp N3                  &kp N4                    &kp N5                          &kp N6              &kp N7                     &kp N8                    &kp N9     &kp N0
                  &kp LSHFT  &kp LCTRL  &kp LALT                &kp LGUI                  &kp UNDER                       &kp PLUS            &kp RGUI                   &kp UP                    &kp RCTRL  &kp RSHFT
&lrlMo LALT LALT  &kp BSLH   &kp LBKT   &kp RBKT                &kp GRAVE                 &kp MINUS                       &kp EQUAL           &kp LEFT                   &kp DOWN                  &kp RIGHT  &lrrMo RALT SLASH  &lrrMo LGUI LGUI
                                        &th_mo_kp_hp LOWER TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &th_mo_kp_hp NAVOVERR ESC  &th_kp_kp_hp LALT ENTER
            >;
        };

        raise_layer {
            label = "RAISE";
            bindings = <
                  &kp EXCL           &kp AT             &kp HASH                &kp DLLR                  &kp PRCNT                       &kp CARET           &kp AMPS                   &kp STAR                  &kp LPAR         &kp RPAR
                  &lrlMo LSHFT PIPE  &lrlMo LCTRL LBRC  &lrlMo LALT RBRC        &lrlMo LCTRL TILDE        &kp UNDER                       &kp PLUS            &lrrMo RGUI COLON          &lrrMo RALT LT            &lrrMo RCTRL GT  &lrrMo RSHFT QUESTION
&lrlMo LALT LALT  &kp BSLH           &kp LBKT           &kp RBKT                &kp GRAVE                 &kp MINUS                       &kp EQUAL           &kp SEMI                   &kp COMMA                 &kp DOT          &kp SLASH              &lrrMo LGUI LGUI
                                                        &th_mo_kp_hp RAISE TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &th_mo_kp_hp NAVOVERR ESC  &th_kp_kp_hp LALT ENTER
            >;
        };

        layer_homerow {
            label = "HOMEROW";
            bindings = <
                  &kp Q           &kp W           &kp F                   &kp P                     &kp B                           &kp J               &kp L                      &kp U                     &kp Y           &kp SQT
                  &lrlMo LSHFT A  &lrlMo LCTRL R  &lrlMo LALT S           &lrlMo LGUI T             &kp G                           &kp M               &lrrMo RGUI N              &lrrMo RALT E             &lrrMo RCTRL I  &lrrMo RSHFT O
&lrlMo LALT LALT  &kp Z           &kp X           &kp C                   &kp D                     &kp V                           &kp K               &kp H                      &kp COMMA                 &kp DOT         &lrrMo RALT FSLH  &lrrMo LGUI LGUI
                                                  &th_mo_kp_hp RAISE TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &th_mo_kp_hp NAVOVERR ESC  &th_kp_kp_hp LALT ENTER
            >;
        };

        layer_navoverr {
            label = "NAVOVERR";
            bindings = <
                  &kp F1     &kp F2     &kp F3                  &kp F4                    &kp F5                          &kp F6              &kp F7                     &kp F8                    &kp F9          &kp F10
                  &sk LSHFT  &sk LCTRL  &sk LALT                &sk LGUI                  &kp F11                         &kp F12             &lrrMo RGUI N              &kp UP                    &lrrMo RCTRL I  &kp RSHFT
&lrlMo LALT LALT  &none      &none      &none                   &none                     &caps_word                      &kp CAPS            &kp LEFT                   &kp DOWN                  &kp RIGHT       &kp RALT   &lrrMo LGUI LGUI
                                        &th_mo_kp_hp RAISE TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &th_mo_kp_hp NAVOVERR ESC  &th_kp_kp_hp LALT ENTER
            >;
        };

        layer_tildel {
            label = "TILDEL";
            bindings = <
        &kp LA(N1)   &trans  &trans                  &kp LS(LA(N2))            &trans                          &trans              &trans                     &mc_tilde U               &trans       &trans
        &mc_tilde A  &trans  &trans                  &trans                    &trans                          &trans              &mc_enne N                 &mc_tilde E               &mc_tilde I  &mc_tilde O
&trans  &trans       &trans  &trans                  &trans                    &trans                          &trans              &trans                     &trans                    &trans       &kp LA(LS(FSLH))  &trans
                             &th_mo_kp_hp RAISE TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &th_mo_kp_hp NAVOVERR ESC  &th_kp_kp_hp LALT ENTER
            >;
        };

        layer_direcaacc {
            label = "DIRECTACC";
            bindings = <
           &lrlMo LA(LS(H)) LA(LS(F12))  &td_find_s_ht A LG(F)  &td_find_g_ht A LG(LS(F))  &kp LC(MINUS)             &kp LC(LS(MINUS))               &kp C_VOL_UP        &kp C_PREV                 &kp C_PP      &kp C_NEXT  &trans
           &mkp MB5                      &mkp MB4               &mkp RCLK                  &mkp LCLK                 &tdSelectCoppingLR A A          &kp C_VOL_DN        &sk RGUI                   &sk RALT      &sk RCTRL   &sk RSHFT
&mc_sleep  &trans                        &trans                 &trans                     &trans                    &scfw_l_to_r                    &kp C_MUTE          &kp C_BRI_DN               &kp C_BRI_UP  &bt_0       &bt_1      &bt_2
                                                                &th_mo_kp_hp RAISE TAB     &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &th_mo_kp_hp NAVOVERR ESC  &mo ADJ
            >;
        };

        layer_func {
            label = "FUNC";
            bindings = <
                  &kp F1     &kp F2     &kp F3                  &kp F4                    &kp F5                          &kp F6              &kp F7                     &kp F8                    &kp F9    &kp F10
                  &sk LSHFT  &sk LCTRL  &sk LALT                &sk LGUI                  &kp F11                         &kp F12             &sk RGUI                   &sk RALT                  &sk RGUI  &sk RSHFT
&lrlMo LALT LALT  &none      &none      &none                   &none                     &kp F11                         &kp F12             &none                      &none                     &none     &none      &lrrMo LGUI LGUI
                                        &th_mo_kp_hp RAISE TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &th_mo_kp_hp NAVOVERR ESC  &th_kp_kp_hp LALT ENTER
            >;
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
             &bt_0         &bt_1   &bt_2                   &bt_3                     &bt_4                           &trans                 &trans                  &trans                    &trans  &trans
             &out OUT_USB  &trans  &trans                  &trans                    &trans                          &trans                 &trans                  &trans                    &trans  &trans
&bootloader  &sys_reset    &trans  &trans                  &trans                    &trans                          &trans                 &trans                  &trans                    &trans  &sys_reset  &bootloader
                                   &th_mo_kp_hp RAISE TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space NAVOVERR SPACE  &th_kp_kp_hp LCTRL ESC  &th_kp_kp_hp LALT ENTER
            >;
        };

        layer_tildeshifta {
            label = "TILDESHIFTA";
            bindings = <
        &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp LSHFT  &mc_tsd A    &trans  &trans  &trans
            >;
        };

        layer_tildeshifte {
            label = "TILDESHIFTE";
            bindings = <
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &mc_tsd E    &mo LOWER  &trans  &trans
            >;
        };

        layer_tildeshifti {
            label = "TILDESHIFTI";
            bindings = <
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &mc_tsd I    &trans  &trans  &trans
            >;
        };

        layer_tildeshifto {
            label = "TILDESHIFTO";
            bindings = <
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &mc_tsd O    &trans  &trans  &trans
            >;
        };

        layer_tildeshiftu {
            label = "TILDESHIFTU";
            bindings = <
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &mc_tsd U    &trans  &trans  &trans
            >;
        };

        layer_tildeshiftenne {
            label = "TILDESHIFTENNE";
            bindings = <
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &mc_ennesd N    &trans  &trans  &trans
            >;
        };

        layer_tildeshiftexc {
            label = "TILDESHIFTEXC";
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &mc_ecxd
            >;
        };

        layer_tildeshiftques {
            label = "TILDESHIFTQUES";
            bindings = <
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &kp QUESTION  &trans
                        &trans  &trans  &mc_quesd    &trans  &trans  &trans
            >;
        };

        layer_tildeshiftr {
            label = "TILDESHIFTR";
            bindings = <
        &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp LCTRL  &trans    &trans  &trans  &trans
            >;
        };

        layer_tildeshifts {
            label = "TILDESHIFTS";
            bindings = <
        &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp LALT  &trans    &trans  &trans  &trans
            >;
        };

        layer_tildeshiftt {
            label = "TILDESHIFTT";
            bindings = <
        &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp LGUI  &trans    &trans  &trans  &trans
            >;
        };

        layer_daccthumb {
            label = "DACCTHUMB";
            bindings = <
        &trans  &trans  &trans            &trans              &trans                            &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans            &trans              &trans                            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans              &trans                            &trans  &trans  &trans  &trans  &trans  &trans
                        &kp LC(MINUS)     &kp LC(LS(MINUS))   &lrlMo LA(LS(H)) LA(LS(F12))      &trans  &trans  &trans
            >;
        };

        layer_numbers {
            label = "NUMBERS";
            bindings = <
                  &kp EXCL           &kp AT             &kp HASH                &kp DLLR                  &kp PRCNT                       &kp MINUS          &kp N7                    &kp N8                   &kp N9           &kp STAR
                  &kp LSHFT          &kp LCTRL          &kp LALT                &kp LGUI                  &kp COMMA                       &kp DOT            &kp N4                    &kp N5                   &kp N6           &kp N0
&lrlMo LALT LALT  &kp BSLH           &kp LBKT           &kp RBKT                &kp GRAVE                 &kp MINUS                       &kp PLUS           &kp N1                    &kp N2                   &kp N3           &kp SLASH              &lrrMo LGUI LGUI
                                                        &th_mo_kp_hp RAISE TAB  &th_kp_kp_hp LGUI DELETE  &th_kp_kp_hp LSHFT BACKSPACE    &space LCTRL SPACE  &tog_off NUMBERS  &th_kp_kp_hp LALT ENTER
            >;
        };


        layer_dragthumb {
            label = "DRAGTHUMB";
            bindings = <
        &trans  &trans  &trans  &trans    &trans        &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans        &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans        &mo LOWER  &trans  &trans
            >;
        };

    };
};
